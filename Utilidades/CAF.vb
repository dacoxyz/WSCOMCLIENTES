'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.3074
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by wsdl, Version=2.0.50727.42.
'

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Web.Services.WebServiceBindingAttribute(Name:="CAFSoap", [Namespace]:="http://WCompensar/CAF")>  _
Partial Public Class CAF
    Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
    
    Private CitasMedicasVSOperationCompleted As System.Threading.SendOrPostCallback
    
    Private AutorizadoOperationCompleted As System.Threading.SendOrPostCallback
    
    Private DatosBasicosOperationCompleted As System.Threading.SendOrPostCallback
    
    Private DatosBasicos1OperationCompleted As System.Threading.SendOrPostCallback
    
    Private ConsultaDatosBasicosOperationCompleted As System.Threading.SendOrPostCallback
    
    Private EPSOperationCompleted As System.Threading.SendOrPostCallback
    
    Private SMLVOperationCompleted As System.Threading.SendOrPostCallback
    
    Private IncapacidadesOperationCompleted As System.Threading.SendOrPostCallback
    
    Private PuntosdeAtencionOperationCompleted As System.Threading.SendOrPostCallback
    
    Private CiudadesOperationCompleted As System.Threading.SendOrPostCallback
    
    Private InscritosOperationCompleted As System.Threading.SendOrPostCallback
    
    Private PagosOperationCompleted As System.Threading.SendOrPostCallback
    
    Private AutorizacionSaludOperationCompleted As System.Threading.SendOrPostCallback
    
    Private DatosAutorizacionesOperationCompleted As System.Threading.SendOrPostCallback
    
    Private ConsultasAFOperationCompleted As System.Threading.SendOrPostCallback
    
    Private ConsultarHisVacunacionPorAfiliadoOperationCompleted As System.Threading.SendOrPostCallback
    
    Private ConsultarVacunasOperationCompleted As System.Threading.SendOrPostCallback
    
    Private ConsultarServiciosOperationCompleted As System.Threading.SendOrPostCallback
    
    Private ConsultaDeCambioDeIdentificacionOperationCompleted As System.Threading.SendOrPostCallback
    
    Private ConsultaISPECOperationCompleted As System.Threading.SendOrPostCallback
    
    Private ConsultarAutorizacionesOperationCompleted As System.Threading.SendOrPostCallback
    
    Private RecaudosOperationCompleted As System.Threading.SendOrPostCallback
    
    Private AfiliadoOperationCompleted As System.Threading.SendOrPostCallback
    
    Private CitasMedicasVgOperationCompleted As System.Threading.SendOrPostCallback
    
    Private ConsultaMaestroDeTarjetasOperationCompleted As System.Threading.SendOrPostCallback
    
    Private EmpresaOperationCompleted As System.Threading.SendOrPostCallback
    
    Private Empresa1OperationCompleted As System.Threading.SendOrPostCallback
    
    Private EmpresaAlfaOperationCompleted As System.Threading.SendOrPostCallback
    
    Private GeoReferenciaOperationCompleted As System.Threading.SendOrPostCallback
    
    Private FonedeOperationCompleted As System.Threading.SendOrPostCallback
    
    Private SubsPorTrabajadorOperationCompleted As System.Threading.SendOrPostCallback
    
    Private Afiliado1OperationCompleted As System.Threading.SendOrPostCallback
    
    Private DocumentoOperationCompleted As System.Threading.SendOrPostCallback
    
    Private Radicado_CuentasOperationCompleted As System.Threading.SendOrPostCallback
    
    Private CreditoOperationCompleted As System.Threading.SendOrPostCallback
    
    Private EpsCiudadesOperationCompleted As System.Threading.SendOrPostCallback
    
    Private ConsultaAFOperationCompleted As System.Threading.SendOrPostCallback
    
    Private ConsultaMedicamentosOperationCompleted As System.Threading.SendOrPostCallback
    
    Private ConsultarCitasDisponiblesOperationCompleted As System.Threading.SendOrPostCallback
    
    Private ConsultarSedeOperationCompleted As System.Threading.SendOrPostCallback
    
    Private ConsultarMedicosDisponiblesOperationCompleted As System.Threading.SendOrPostCallback
    
    Private MultiAfiliadoOperationCompleted As System.Threading.SendOrPostCallback
    
    Private ConsultasOperationCompleted As System.Threading.SendOrPostCallback
    
    Private AfiliadoEpsOperationCompleted As System.Threading.SendOrPostCallback
    
    Private PuntosdeAtencionEPSOperationCompleted As System.Threading.SendOrPostCallback
    
    Private EmpresaEPSOperationCompleted As System.Threading.SendOrPostCallback
    
    Private CitasMedicasEPSOperationCompleted As System.Threading.SendOrPostCallback
    
    Private MultiAfiliadoEpsOperationCompleted As System.Threading.SendOrPostCallback
    
    Private AfiliadoAlfaEPSOperationCompleted As System.Threading.SendOrPostCallback
    
    Private PrestadoresOperationCompleted As System.Threading.SendOrPostCallback
    
    Private Anexo4OperationCompleted As System.Threading.SendOrPostCallback
    
    Private ConsultaMedicamentosAutorizadosOperationCompleted As System.Threading.SendOrPostCallback
    
    Private MensajesOperationCompleted As System.Threading.SendOrPostCallback
    Private pCodigoApp As String
    '''<remarks/>
    Public Sub New()
        MyBase.New
        Me.Url = System.Configuration.ConfigurationManager.AppSettings("URLWSCAF") '"http://172.22.145.17/wcompensar/caf/caf.asmx"
        pCodigoApp = System.Configuration.ConfigurationManager.AppSettings("AfilPos_ProjectID")
    End Sub
    
    '''<remarks/>
    Public Event CitasMedicasVSCompleted As CitasMedicasVSCompletedEventHandler
    
    '''<remarks/>
    Public Event AutorizadoCompleted As AutorizadoCompletedEventHandler
    
    '''<remarks/>
    Public Event DatosBasicosCompleted As DatosBasicosCompletedEventHandler
    
    '''<remarks/>
    Public Event DatosBasicos1Completed As DatosBasicos1CompletedEventHandler
    
    '''<remarks/>
    Public Event ConsultaDatosBasicosCompleted As ConsultaDatosBasicosCompletedEventHandler
    
    '''<remarks/>
    Public Event EPSCompleted As EPSCompletedEventHandler
    
    '''<remarks/>
    Public Event SMLVCompleted As SMLVCompletedEventHandler
    
    '''<remarks/>
    Public Event IncapacidadesCompleted As IncapacidadesCompletedEventHandler
    
    '''<remarks/>
    Public Event PuntosdeAtencionCompleted As PuntosdeAtencionCompletedEventHandler
    
    '''<remarks/>
    Public Event CiudadesCompleted As CiudadesCompletedEventHandler
    
    '''<remarks/>
    Public Event InscritosCompleted As InscritosCompletedEventHandler
    
    '''<remarks/>
    Public Event PagosCompleted As PagosCompletedEventHandler
    
    '''<remarks/>
    Public Event AutorizacionSaludCompleted As AutorizacionSaludCompletedEventHandler
    
    '''<remarks/>
    Public Event DatosAutorizacionesCompleted As DatosAutorizacionesCompletedEventHandler
    
    '''<remarks/>
    Public Event ConsultasAFCompleted As ConsultasAFCompletedEventHandler
    
    '''<remarks/>
    Public Event ConsultarHisVacunacionPorAfiliadoCompleted As ConsultarHisVacunacionPorAfiliadoCompletedEventHandler
    
    '''<remarks/>
    Public Event ConsultarVacunasCompleted As ConsultarVacunasCompletedEventHandler
    
    '''<remarks/>
    Public Event ConsultarServiciosCompleted As ConsultarServiciosCompletedEventHandler
    
    '''<remarks/>
    Public Event ConsultaDeCambioDeIdentificacionCompleted As ConsultaDeCambioDeIdentificacionCompletedEventHandler
    
    '''<remarks/>
    Public Event ConsultaISPECCompleted As ConsultaISPECCompletedEventHandler
    
    '''<remarks/>
    Public Event ConsultarAutorizacionesCompleted As ConsultarAutorizacionesCompletedEventHandler
    
    '''<remarks/>
    Public Event RecaudosCompleted As RecaudosCompletedEventHandler
    
    '''<remarks/>
    Public Event AfiliadoCompleted As AfiliadoCompletedEventHandler
    
    '''<remarks/>
    Public Event CitasMedicasVgCompleted As CitasMedicasVgCompletedEventHandler
    
    '''<remarks/>
    Public Event ConsultaMaestroDeTarjetasCompleted As ConsultaMaestroDeTarjetasCompletedEventHandler
    
    '''<remarks/>
    Public Event EmpresaCompleted As EmpresaCompletedEventHandler
    
    '''<remarks/>
    Public Event Empresa1Completed As Empresa1CompletedEventHandler
    
    '''<remarks/>
    Public Event EmpresaAlfaCompleted As EmpresaAlfaCompletedEventHandler
    
    '''<remarks/>
    Public Event GeoReferenciaCompleted As GeoReferenciaCompletedEventHandler
    
    '''<remarks/>
    Public Event FonedeCompleted As FonedeCompletedEventHandler
    
    '''<remarks/>
    Public Event SubsPorTrabajadorCompleted As SubsPorTrabajadorCompletedEventHandler
    
    '''<remarks/>
    Public Event Afiliado1Completed As Afiliado1CompletedEventHandler
    
    '''<remarks/>
    Public Event DocumentoCompleted As DocumentoCompletedEventHandler
    
    '''<remarks/>
    Public Event Radicado_CuentasCompleted As Radicado_CuentasCompletedEventHandler
    
    '''<remarks/>
    Public Event CreditoCompleted As CreditoCompletedEventHandler
    
    '''<remarks/>
    Public Event EpsCiudadesCompleted As EpsCiudadesCompletedEventHandler
    
    '''<remarks/>
    Public Event ConsultaAFCompleted As ConsultaAFCompletedEventHandler
    
    '''<remarks/>
    Public Event ConsultaMedicamentosCompleted As ConsultaMedicamentosCompletedEventHandler
    
    '''<remarks/>
    Public Event ConsultarCitasDisponiblesCompleted As ConsultarCitasDisponiblesCompletedEventHandler
    
    '''<remarks/>
    Public Event ConsultarSedeCompleted As ConsultarSedeCompletedEventHandler
    
    '''<remarks/>
    Public Event ConsultarMedicosDisponiblesCompleted As ConsultarMedicosDisponiblesCompletedEventHandler
    
    '''<remarks/>
    Public Event MultiAfiliadoCompleted As MultiAfiliadoCompletedEventHandler
    
    '''<remarks/>
    Public Event ConsultasCompleted As ConsultasCompletedEventHandler
    
    '''<remarks/>
    Public Event AfiliadoEpsCompleted As AfiliadoEpsCompletedEventHandler
    
    '''<remarks/>
    Public Event PuntosdeAtencionEPSCompleted As PuntosdeAtencionEPSCompletedEventHandler
    
    '''<remarks/>
    Public Event EmpresaEPSCompleted As EmpresaEPSCompletedEventHandler
    
    '''<remarks/>
    Public Event CitasMedicasEPSCompleted As CitasMedicasEPSCompletedEventHandler
    
    '''<remarks/>
    Public Event MultiAfiliadoEpsCompleted As MultiAfiliadoEpsCompletedEventHandler
    
    '''<remarks/>
    Public Event AfiliadoAlfaEPSCompleted As AfiliadoAlfaEPSCompletedEventHandler
    
    '''<remarks/>
    Public Event PrestadoresCompleted As PrestadoresCompletedEventHandler
    
    '''<remarks/>
    Public Event Anexo4Completed As Anexo4CompletedEventHandler
    
    '''<remarks/>
    Public Event ConsultaMedicamentosAutorizadosCompleted As ConsultaMedicamentosAutorizadosCompletedEventHandler
    
    '''<remarks/>
    Public Event MensajesCompleted As MensajesCompletedEventHandler
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/CitasMedicasVS", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function CitasMedicasVS(ByVal strXml As String, ByVal strApl As String, ByVal intFechaIni As Integer, ByVal intFechaFin As Integer, ByVal ArrPuntos() As String, ByVal intArrEstados() As Integer, ByVal intSede As Integer, ByVal intHoraIni As Integer, ByVal intHoraFin As Integer, ByVal lngIdentificacion As Double, ByVal byTipoIdentificacion As Integer, ByVal strNuid As String, ByVal intOpc As Integer) As String
        Dim results() As Object = Me.Invoke("CitasMedicasVS", New Object() {strXml, strApl, intFechaIni, intFechaFin, ArrPuntos, intArrEstados, intSede, intHoraIni, intHoraFin, lngIdentificacion, byTipoIdentificacion, strNuid, intOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginCitasMedicasVS(ByVal strXml As String, ByVal strApl As String, ByVal intFechaIni As Integer, ByVal intFechaFin As Integer, ByVal ArrPuntos() As String, ByVal intArrEstados() As Integer, ByVal intSede As Integer, ByVal intHoraIni As Integer, ByVal intHoraFin As Integer, ByVal lngIdentificacion As Double, ByVal byTipoIdentificacion As Integer, ByVal strNuid As String, ByVal intOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("CitasMedicasVS", New Object() {strXml, strApl, intFechaIni, intFechaFin, ArrPuntos, intArrEstados, intSede, intHoraIni, intHoraFin, lngIdentificacion, byTipoIdentificacion, strNuid, intOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndCitasMedicasVS(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub CitasMedicasVSAsync(ByVal strXml As String, ByVal strApl As String, ByVal intFechaIni As Integer, ByVal intFechaFin As Integer, ByVal ArrPuntos() As String, ByVal intArrEstados() As Integer, ByVal intSede As Integer, ByVal intHoraIni As Integer, ByVal intHoraFin As Integer, ByVal lngIdentificacion As Double, ByVal byTipoIdentificacion As Integer, ByVal strNuid As String, ByVal intOpc As Integer)
        Me.CitasMedicasVSAsync(strXml, strApl, intFechaIni, intFechaFin, ArrPuntos, intArrEstados, intSede, intHoraIni, intHoraFin, lngIdentificacion, byTipoIdentificacion, strNuid, intOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub CitasMedicasVSAsync(ByVal strXml As String, ByVal strApl As String, ByVal intFechaIni As Integer, ByVal intFechaFin As Integer, ByVal ArrPuntos() As String, ByVal intArrEstados() As Integer, ByVal intSede As Integer, ByVal intHoraIni As Integer, ByVal intHoraFin As Integer, ByVal lngIdentificacion As Double, ByVal byTipoIdentificacion As Integer, ByVal strNuid As String, ByVal intOpc As Integer, ByVal userState As Object)
        If (Me.CitasMedicasVSOperationCompleted Is Nothing) Then
            Me.CitasMedicasVSOperationCompleted = AddressOf Me.OnCitasMedicasVSOperationCompleted
        End If
        Me.InvokeAsync("CitasMedicasVS", New Object() {strXml, strApl, intFechaIni, intFechaFin, ArrPuntos, intArrEstados, intSede, intHoraIni, intHoraFin, lngIdentificacion, byTipoIdentificacion, strNuid, intOpc}, Me.CitasMedicasVSOperationCompleted, userState)
    End Sub
    
    Private Sub OnCitasMedicasVSOperationCompleted(ByVal arg As Object)
        If (Not (Me.CitasMedicasVSCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent CitasMedicasVSCompleted(Me, New CitasMedicasVSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/Autorizado", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function Autorizado(ByVal sParametros As String) As String
        Dim results() As Object = Me.Invoke("Autorizado", New Object() {sParametros})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginAutorizado(ByVal sParametros As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("Autorizado", New Object() {sParametros}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndAutorizado(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub AutorizadoAsync(ByVal sParametros As String)
        Me.AutorizadoAsync(sParametros, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub AutorizadoAsync(ByVal sParametros As String, ByVal userState As Object)
        If (Me.AutorizadoOperationCompleted Is Nothing) Then
            Me.AutorizadoOperationCompleted = AddressOf Me.OnAutorizadoOperationCompleted
        End If
        Me.InvokeAsync("Autorizado", New Object() {sParametros}, Me.AutorizadoOperationCompleted, userState)
    End Sub
    
    Private Sub OnAutorizadoOperationCompleted(ByVal arg As Object)
        If (Not (Me.AutorizadoCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent AutorizadoCompleted(Me, New AutorizadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/DatosBasicos", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Overloads Function DatosBasicos(ByVal sApl As String, ByVal sCodigo As String) As String
        Dim results() As Object = Me.Invoke("DatosBasicos", New Object() {sApl, sCodigo})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginDatosBasicos(ByVal sApl As String, ByVal sCodigo As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("DatosBasicos", New Object() {sApl, sCodigo}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndDatosBasicos(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub DatosBasicosAsync(ByVal sApl As String, ByVal sCodigo As String)
        Me.DatosBasicosAsync(sApl, sCodigo, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub DatosBasicosAsync(ByVal sApl As String, ByVal sCodigo As String, ByVal userState As Object)
        If (Me.DatosBasicosOperationCompleted Is Nothing) Then
            Me.DatosBasicosOperationCompleted = AddressOf Me.OnDatosBasicosOperationCompleted
        End If
        Me.InvokeAsync("DatosBasicos", New Object() {sApl, sCodigo}, Me.DatosBasicosOperationCompleted, userState)
    End Sub
    
    Private Sub OnDatosBasicosOperationCompleted(ByVal arg As Object)
        If (Not (Me.DatosBasicosCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent DatosBasicosCompleted(Me, New DatosBasicosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.WebMethodAttribute(MessageName:="DatosBasicos1"),  _
     System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/DatosBasicosIP", RequestElementName:="DatosBasicosIP", RequestNamespace:="http://WCompensar/CAF", ResponseElementName:="DatosBasicosIPResponse", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Overloads Function DatosBasicos(ByVal sApl As String, ByVal sCodigo As String, ByVal sParametro As String, ByVal sDes As String) As <System.Xml.Serialization.XmlElementAttribute("DatosBasicosIPResult")> String
        Dim results() As Object = Me.Invoke("DatosBasicos1", New Object() {sApl, sCodigo, sParametro, sDes})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginDatosBasicos1(ByVal sApl As String, ByVal sCodigo As String, ByVal sParametro As String, ByVal sDes As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("DatosBasicos1", New Object() {sApl, sCodigo, sParametro, sDes}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndDatosBasicos1(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub DatosBasicos1Async(ByVal sApl As String, ByVal sCodigo As String, ByVal sParametro As String, ByVal sDes As String)
        Me.DatosBasicos1Async(sApl, sCodigo, sParametro, sDes, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub DatosBasicos1Async(ByVal sApl As String, ByVal sCodigo As String, ByVal sParametro As String, ByVal sDes As String, ByVal userState As Object)
        If (Me.DatosBasicos1OperationCompleted Is Nothing) Then
            Me.DatosBasicos1OperationCompleted = AddressOf Me.OnDatosBasicos1OperationCompleted
        End If
        Me.InvokeAsync("DatosBasicos1", New Object() {sApl, sCodigo, sParametro, sDes}, Me.DatosBasicos1OperationCompleted, userState)
    End Sub
    
    Private Sub OnDatosBasicos1OperationCompleted(ByVal arg As Object)
        If (Not (Me.DatosBasicos1CompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent DatosBasicos1Completed(Me, New DatosBasicos1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/ConsultaDatosBasicos", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function ConsultaDatosBasicos(ByVal sApl As String, ByVal iOpc As Integer) As String
        Dim results() As Object = Me.Invoke("ConsultaDatosBasicos", New Object() {sApl, iOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginConsultaDatosBasicos(ByVal sApl As String, ByVal iOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ConsultaDatosBasicos", New Object() {sApl, iOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndConsultaDatosBasicos(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub ConsultaDatosBasicosAsync(ByVal sApl As String, ByVal iOpc As Integer)
        Me.ConsultaDatosBasicosAsync(sApl, iOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub ConsultaDatosBasicosAsync(ByVal sApl As String, ByVal iOpc As Integer, ByVal userState As Object)
        If (Me.ConsultaDatosBasicosOperationCompleted Is Nothing) Then
            Me.ConsultaDatosBasicosOperationCompleted = AddressOf Me.OnConsultaDatosBasicosOperationCompleted
        End If
        Me.InvokeAsync("ConsultaDatosBasicos", New Object() {sApl, iOpc}, Me.ConsultaDatosBasicosOperationCompleted, userState)
    End Sub
    
    Private Sub OnConsultaDatosBasicosOperationCompleted(ByVal arg As Object)
        If (Not (Me.ConsultaDatosBasicosCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ConsultaDatosBasicosCompleted(Me, New ConsultaDatosBasicosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/EPS", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function EPS(ByVal sApl As String) As String
        Dim results() As Object = Me.Invoke("EPS", New Object() {sApl})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginEPS(ByVal sApl As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("EPS", New Object() {sApl}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndEPS(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub EPSAsync(ByVal sApl As String)
        Me.EPSAsync(sApl, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub EPSAsync(ByVal sApl As String, ByVal userState As Object)
        If (Me.EPSOperationCompleted Is Nothing) Then
            Me.EPSOperationCompleted = AddressOf Me.OnEPSOperationCompleted
        End If
        Me.InvokeAsync("EPS", New Object() {sApl}, Me.EPSOperationCompleted, userState)
    End Sub
    
    Private Sub OnEPSOperationCompleted(ByVal arg As Object)
        If (Not (Me.EPSCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent EPSCompleted(Me, New EPSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/SMLV", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function SMLV(ByVal sApl As String) As String
        Dim results() As Object = Me.Invoke("SMLV", New Object() {sApl})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginSMLV(ByVal sApl As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("SMLV", New Object() {sApl}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndSMLV(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub SMLVAsync(ByVal sApl As String)
        Me.SMLVAsync(sApl, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub SMLVAsync(ByVal sApl As String, ByVal userState As Object)
        If (Me.SMLVOperationCompleted Is Nothing) Then
            Me.SMLVOperationCompleted = AddressOf Me.OnSMLVOperationCompleted
        End If
        Me.InvokeAsync("SMLV", New Object() {sApl}, Me.SMLVOperationCompleted, userState)
    End Sub
    
    Private Sub OnSMLVOperationCompleted(ByVal arg As Object)
        If (Not (Me.SMLVCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent SMLVCompleted(Me, New SMLVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/Incapacidades", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function Incapacidades(ByVal sParametros As String) As String
        Dim results() As Object = Me.Invoke("Incapacidades", New Object() {sParametros})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginIncapacidades(ByVal sParametros As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("Incapacidades", New Object() {sParametros}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndIncapacidades(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub IncapacidadesAsync(ByVal sParametros As String)
        Me.IncapacidadesAsync(sParametros, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub IncapacidadesAsync(ByVal sParametros As String, ByVal userState As Object)
        If (Me.IncapacidadesOperationCompleted Is Nothing) Then
            Me.IncapacidadesOperationCompleted = AddressOf Me.OnIncapacidadesOperationCompleted
        End If
        Me.InvokeAsync("Incapacidades", New Object() {sParametros}, Me.IncapacidadesOperationCompleted, userState)
    End Sub
    
    Private Sub OnIncapacidadesOperationCompleted(ByVal arg As Object)
        If (Not (Me.IncapacidadesCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent IncapacidadesCompleted(Me, New IncapacidadesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/PuntosdeAtencion", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function PuntosdeAtencion(ByVal strApl As String, ByVal sIdentificacion As String, ByVal iOpcion As Integer) As String
        Dim results() As Object = Me.Invoke("PuntosdeAtencion", New Object() {strApl, sIdentificacion, iOpcion})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginPuntosdeAtencion(ByVal strApl As String, ByVal sIdentificacion As String, ByVal iOpcion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("PuntosdeAtencion", New Object() {strApl, sIdentificacion, iOpcion}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndPuntosdeAtencion(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub PuntosdeAtencionAsync(ByVal strApl As String, ByVal sIdentificacion As String, ByVal iOpcion As Integer)
        Me.PuntosdeAtencionAsync(strApl, sIdentificacion, iOpcion, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub PuntosdeAtencionAsync(ByVal strApl As String, ByVal sIdentificacion As String, ByVal iOpcion As Integer, ByVal userState As Object)
        If (Me.PuntosdeAtencionOperationCompleted Is Nothing) Then
            Me.PuntosdeAtencionOperationCompleted = AddressOf Me.OnPuntosdeAtencionOperationCompleted
        End If
        Me.InvokeAsync("PuntosdeAtencion", New Object() {strApl, sIdentificacion, iOpcion}, Me.PuntosdeAtencionOperationCompleted, userState)
    End Sub
    
    Private Sub OnPuntosdeAtencionOperationCompleted(ByVal arg As Object)
        If (Not (Me.PuntosdeAtencionCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent PuntosdeAtencionCompleted(Me, New PuntosdeAtencionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/Ciudades", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function Ciudades(ByVal sApl As String, ByVal iOpc As Integer) As String
        Dim results() As Object = Me.Invoke("Ciudades", New Object() {sApl, iOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginCiudades(ByVal sApl As String, ByVal iOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("Ciudades", New Object() {sApl, iOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndCiudades(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub CiudadesAsync(ByVal sApl As String, ByVal iOpc As Integer)
        Me.CiudadesAsync(sApl, iOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub CiudadesAsync(ByVal sApl As String, ByVal iOpc As Integer, ByVal userState As Object)
        If (Me.CiudadesOperationCompleted Is Nothing) Then
            Me.CiudadesOperationCompleted = AddressOf Me.OnCiudadesOperationCompleted
        End If
        Me.InvokeAsync("Ciudades", New Object() {sApl, iOpc}, Me.CiudadesOperationCompleted, userState)
    End Sub
    
    Private Sub OnCiudadesOperationCompleted(ByVal arg As Object)
        If (Not (Me.CiudadesCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent CiudadesCompleted(Me, New CiudadesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/Inscritos", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function Inscritos(ByVal sParametros As String) As String
        Dim results() As Object = Me.Invoke("Inscritos", New Object() {sParametros})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginInscritos(ByVal sParametros As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("Inscritos", New Object() {sParametros}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndInscritos(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub InscritosAsync(ByVal sParametros As String)
        Me.InscritosAsync(sParametros, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub InscritosAsync(ByVal sParametros As String, ByVal userState As Object)
        If (Me.InscritosOperationCompleted Is Nothing) Then
            Me.InscritosOperationCompleted = AddressOf Me.OnInscritosOperationCompleted
        End If
        Me.InvokeAsync("Inscritos", New Object() {sParametros}, Me.InscritosOperationCompleted, userState)
    End Sub
    
    Private Sub OnInscritosOperationCompleted(ByVal arg As Object)
        If (Not (Me.InscritosCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent InscritosCompleted(Me, New InscritosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/Pagos", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function Pagos(ByVal sParametros As String) As String
        Dim results() As Object = Me.Invoke("Pagos", New Object() {sParametros})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginPagos(ByVal sParametros As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("Pagos", New Object() {sParametros}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndPagos(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub PagosAsync(ByVal sParametros As String)
        Me.PagosAsync(sParametros, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub PagosAsync(ByVal sParametros As String, ByVal userState As Object)
        If (Me.PagosOperationCompleted Is Nothing) Then
            Me.PagosOperationCompleted = AddressOf Me.OnPagosOperationCompleted
        End If
        Me.InvokeAsync("Pagos", New Object() {sParametros}, Me.PagosOperationCompleted, userState)
    End Sub
    
    Private Sub OnPagosOperationCompleted(ByVal arg As Object)
        If (Not (Me.PagosCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent PagosCompleted(Me, New PagosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/AutorizacionSalud", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function AutorizacionSalud(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer, ByVal sNuip As String, ByVal sAut As String, ByVal iOpc As Integer) As String
        Dim results() As Object = Me.Invoke("AutorizacionSalud", New Object() {sApl, dIdentificacion, iTipo, sNuip, sAut, iOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginAutorizacionSalud(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer, ByVal sNuip As String, ByVal sAut As String, ByVal iOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("AutorizacionSalud", New Object() {sApl, dIdentificacion, iTipo, sNuip, sAut, iOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndAutorizacionSalud(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub AutorizacionSaludAsync(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer, ByVal sNuip As String, ByVal sAut As String, ByVal iOpc As Integer)
        Me.AutorizacionSaludAsync(sApl, dIdentificacion, iTipo, sNuip, sAut, iOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub AutorizacionSaludAsync(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer, ByVal sNuip As String, ByVal sAut As String, ByVal iOpc As Integer, ByVal userState As Object)
        If (Me.AutorizacionSaludOperationCompleted Is Nothing) Then
            Me.AutorizacionSaludOperationCompleted = AddressOf Me.OnAutorizacionSaludOperationCompleted
        End If
        Me.InvokeAsync("AutorizacionSalud", New Object() {sApl, dIdentificacion, iTipo, sNuip, sAut, iOpc}, Me.AutorizacionSaludOperationCompleted, userState)
    End Sub
    
    Private Sub OnAutorizacionSaludOperationCompleted(ByVal arg As Object)
        If (Not (Me.AutorizacionSaludCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent AutorizacionSaludCompleted(Me, New AutorizacionSaludCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/DatosAutorizaciones", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function DatosAutorizaciones(ByVal sApl As String, ByVal sParametros As String) As String
        Dim results() As Object = Me.Invoke("DatosAutorizaciones", New Object() {sApl, sParametros})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginDatosAutorizaciones(ByVal sApl As String, ByVal sParametros As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("DatosAutorizaciones", New Object() {sApl, sParametros}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndDatosAutorizaciones(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub DatosAutorizacionesAsync(ByVal sApl As String, ByVal sParametros As String)
        Me.DatosAutorizacionesAsync(sApl, sParametros, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub DatosAutorizacionesAsync(ByVal sApl As String, ByVal sParametros As String, ByVal userState As Object)
        If (Me.DatosAutorizacionesOperationCompleted Is Nothing) Then
            Me.DatosAutorizacionesOperationCompleted = AddressOf Me.OnDatosAutorizacionesOperationCompleted
        End If
        Me.InvokeAsync("DatosAutorizaciones", New Object() {sApl, sParametros}, Me.DatosAutorizacionesOperationCompleted, userState)
    End Sub
    
    Private Sub OnDatosAutorizacionesOperationCompleted(ByVal arg As Object)
        If (Not (Me.DatosAutorizacionesCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent DatosAutorizacionesCompleted(Me, New DatosAutorizacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/ConsultasAF", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function ConsultasAF(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer) As String
        Dim results() As Object = Me.Invoke("ConsultasAF", New Object() {pCodigoApp, sParametros, iOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginConsultasAF(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ConsultasAF", New Object() {sApl, sParametros, iOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndConsultasAF(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub ConsultasAFAsync(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer)
        Me.ConsultasAFAsync(sApl, sParametros, iOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub ConsultasAFAsync(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer, ByVal userState As Object)
        If (Me.ConsultasAFOperationCompleted Is Nothing) Then
            Me.ConsultasAFOperationCompleted = AddressOf Me.OnConsultasAFOperationCompleted
        End If
        Me.InvokeAsync("ConsultasAF", New Object() {sApl, sParametros, iOpc}, Me.ConsultasAFOperationCompleted, userState)
    End Sub
    
    Private Sub OnConsultasAFOperationCompleted(ByVal arg As Object)
        If (Not (Me.ConsultasAFCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ConsultasAFCompleted(Me, New ConsultasAFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/ConsultarHisVacunacionPorAfiliado", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function ConsultarHisVacunacionPorAfiliado(ByVal sApl As String, ByVal TipoIdentificacion As Integer, ByVal Identificacion As Decimal) As String
        Dim results() As Object = Me.Invoke("ConsultarHisVacunacionPorAfiliado", New Object() {sApl, TipoIdentificacion, Identificacion})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginConsultarHisVacunacionPorAfiliado(ByVal sApl As String, ByVal TipoIdentificacion As Integer, ByVal Identificacion As Decimal, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ConsultarHisVacunacionPorAfiliado", New Object() {sApl, TipoIdentificacion, Identificacion}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndConsultarHisVacunacionPorAfiliado(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub ConsultarHisVacunacionPorAfiliadoAsync(ByVal sApl As String, ByVal TipoIdentificacion As Integer, ByVal Identificacion As Decimal)
        Me.ConsultarHisVacunacionPorAfiliadoAsync(sApl, TipoIdentificacion, Identificacion, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub ConsultarHisVacunacionPorAfiliadoAsync(ByVal sApl As String, ByVal TipoIdentificacion As Integer, ByVal Identificacion As Decimal, ByVal userState As Object)
        If (Me.ConsultarHisVacunacionPorAfiliadoOperationCompleted Is Nothing) Then
            Me.ConsultarHisVacunacionPorAfiliadoOperationCompleted = AddressOf Me.OnConsultarHisVacunacionPorAfiliadoOperationCompleted
        End If
        Me.InvokeAsync("ConsultarHisVacunacionPorAfiliado", New Object() {sApl, TipoIdentificacion, Identificacion}, Me.ConsultarHisVacunacionPorAfiliadoOperationCompleted, userState)
    End Sub
    
    Private Sub OnConsultarHisVacunacionPorAfiliadoOperationCompleted(ByVal arg As Object)
        If (Not (Me.ConsultarHisVacunacionPorAfiliadoCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ConsultarHisVacunacionPorAfiliadoCompleted(Me, New ConsultarHisVacunacionPorAfiliadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/ConsultarVacunas", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function ConsultarVacunas(ByVal sApl As String, ByVal ValorFecha As Decimal, ByVal Descripcion As String) As String
        Dim results() As Object = Me.Invoke("ConsultarVacunas", New Object() {sApl, ValorFecha, Descripcion})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginConsultarVacunas(ByVal sApl As String, ByVal ValorFecha As Decimal, ByVal Descripcion As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ConsultarVacunas", New Object() {sApl, ValorFecha, Descripcion}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndConsultarVacunas(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub ConsultarVacunasAsync(ByVal sApl As String, ByVal ValorFecha As Decimal, ByVal Descripcion As String)
        Me.ConsultarVacunasAsync(sApl, ValorFecha, Descripcion, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub ConsultarVacunasAsync(ByVal sApl As String, ByVal ValorFecha As Decimal, ByVal Descripcion As String, ByVal userState As Object)
        If (Me.ConsultarVacunasOperationCompleted Is Nothing) Then
            Me.ConsultarVacunasOperationCompleted = AddressOf Me.OnConsultarVacunasOperationCompleted
        End If
        Me.InvokeAsync("ConsultarVacunas", New Object() {sApl, ValorFecha, Descripcion}, Me.ConsultarVacunasOperationCompleted, userState)
    End Sub
    
    Private Sub OnConsultarVacunasOperationCompleted(ByVal arg As Object)
        If (Not (Me.ConsultarVacunasCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ConsultarVacunasCompleted(Me, New ConsultarVacunasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/ConsultarServicios", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function ConsultarServicios(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer) As String
        Dim results() As Object = Me.Invoke("ConsultarServicios", New Object() {sApl, sParametros, iOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginConsultarServicios(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ConsultarServicios", New Object() {sApl, sParametros, iOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndConsultarServicios(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub ConsultarServiciosAsync(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer)
        Me.ConsultarServiciosAsync(sApl, sParametros, iOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub ConsultarServiciosAsync(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer, ByVal userState As Object)
        If (Me.ConsultarServiciosOperationCompleted Is Nothing) Then
            Me.ConsultarServiciosOperationCompleted = AddressOf Me.OnConsultarServiciosOperationCompleted
        End If
        Me.InvokeAsync("ConsultarServicios", New Object() {sApl, sParametros, iOpc}, Me.ConsultarServiciosOperationCompleted, userState)
    End Sub
    
    Private Sub OnConsultarServiciosOperationCompleted(ByVal arg As Object)
        If (Not (Me.ConsultarServiciosCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ConsultarServiciosCompleted(Me, New ConsultarServiciosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/ConsultaDeCambioDeIdentificacion", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function ConsultaDeCambioDeIdentificacion(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer) As String
        Dim results() As Object = Me.Invoke("ConsultaDeCambioDeIdentificacion", New Object() {sApl, dIdentificacion, iTipo})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginConsultaDeCambioDeIdentificacion(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ConsultaDeCambioDeIdentificacion", New Object() {sApl, dIdentificacion, iTipo}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndConsultaDeCambioDeIdentificacion(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub ConsultaDeCambioDeIdentificacionAsync(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer)
        Me.ConsultaDeCambioDeIdentificacionAsync(sApl, dIdentificacion, iTipo, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub ConsultaDeCambioDeIdentificacionAsync(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer, ByVal userState As Object)
        If (Me.ConsultaDeCambioDeIdentificacionOperationCompleted Is Nothing) Then
            Me.ConsultaDeCambioDeIdentificacionOperationCompleted = AddressOf Me.OnConsultaDeCambioDeIdentificacionOperationCompleted
        End If
        Me.InvokeAsync("ConsultaDeCambioDeIdentificacion", New Object() {sApl, dIdentificacion, iTipo}, Me.ConsultaDeCambioDeIdentificacionOperationCompleted, userState)
    End Sub
    
    Private Sub OnConsultaDeCambioDeIdentificacionOperationCompleted(ByVal arg As Object)
        If (Not (Me.ConsultaDeCambioDeIdentificacionCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ConsultaDeCambioDeIdentificacionCompleted(Me, New ConsultaDeCambioDeIdentificacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/ConsultaISPEC", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function ConsultaISPEC(ByVal sApl As String, ByVal sUsuario As String, ByVal cXOPC As Char) As String
        Dim results() As Object = Me.Invoke("ConsultaISPEC", New Object() {sApl, sUsuario, cXOPC})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginConsultaISPEC(ByVal sApl As String, ByVal sUsuario As String, ByVal cXOPC As Char, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ConsultaISPEC", New Object() {sApl, sUsuario, cXOPC}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndConsultaISPEC(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub ConsultaISPECAsync(ByVal sApl As String, ByVal sUsuario As String, ByVal cXOPC As Char)
        Me.ConsultaISPECAsync(sApl, sUsuario, cXOPC, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub ConsultaISPECAsync(ByVal sApl As String, ByVal sUsuario As String, ByVal cXOPC As Char, ByVal userState As Object)
        If (Me.ConsultaISPECOperationCompleted Is Nothing) Then
            Me.ConsultaISPECOperationCompleted = AddressOf Me.OnConsultaISPECOperationCompleted
        End If
        Me.InvokeAsync("ConsultaISPEC", New Object() {sApl, sUsuario, cXOPC}, Me.ConsultaISPECOperationCompleted, userState)
    End Sub
    
    Private Sub OnConsultaISPECOperationCompleted(ByVal arg As Object)
        If (Not (Me.ConsultaISPECCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ConsultaISPECCompleted(Me, New ConsultaISPECCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/ConsultarAutorizaciones", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function ConsultarAutorizaciones(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer) As String
        Dim results() As Object = Me.Invoke("ConsultarAutorizaciones", New Object() {sApl, sParametros, iOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginConsultarAutorizaciones(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ConsultarAutorizaciones", New Object() {sApl, sParametros, iOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndConsultarAutorizaciones(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub ConsultarAutorizacionesAsync(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer)
        Me.ConsultarAutorizacionesAsync(sApl, sParametros, iOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub ConsultarAutorizacionesAsync(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer, ByVal userState As Object)
        If (Me.ConsultarAutorizacionesOperationCompleted Is Nothing) Then
            Me.ConsultarAutorizacionesOperationCompleted = AddressOf Me.OnConsultarAutorizacionesOperationCompleted
        End If
        Me.InvokeAsync("ConsultarAutorizaciones", New Object() {sApl, sParametros, iOpc}, Me.ConsultarAutorizacionesOperationCompleted, userState)
    End Sub
    
    Private Sub OnConsultarAutorizacionesOperationCompleted(ByVal arg As Object)
        If (Not (Me.ConsultarAutorizacionesCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ConsultarAutorizacionesCompleted(Me, New ConsultarAutorizacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/Recaudos", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function Recaudos(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer) As String
        Dim results() As Object = Me.Invoke("Recaudos", New Object() {sApl, sParametros, iOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginRecaudos(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("Recaudos", New Object() {sApl, sParametros, iOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndRecaudos(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub RecaudosAsync(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer)
        Me.RecaudosAsync(sApl, sParametros, iOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub RecaudosAsync(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer, ByVal userState As Object)
        If (Me.RecaudosOperationCompleted Is Nothing) Then
            Me.RecaudosOperationCompleted = AddressOf Me.OnRecaudosOperationCompleted
        End If
        Me.InvokeAsync("Recaudos", New Object() {sApl, sParametros, iOpc}, Me.RecaudosOperationCompleted, userState)
    End Sub
    
    Private Sub OnRecaudosOperationCompleted(ByVal arg As Object)
        If (Not (Me.RecaudosCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent RecaudosCompleted(Me, New RecaudosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/Afiliado", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Overloads Function Afiliado(ByVal sApl As String, ByVal dIdentificacion As String, ByVal iTipo As Integer, ByVal sPrograma As String, ByVal iOpc As Integer) As String
        Dim results() As Object = Me.Invoke("Afiliado", New Object() {sApl, dIdentificacion, iTipo, sPrograma, iOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginAfiliado(ByVal sApl As String, ByVal dIdentificacion As String, ByVal iTipo As Integer, ByVal sPrograma As String, ByVal iOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("Afiliado", New Object() {sApl, dIdentificacion, iTipo, sPrograma, iOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndAfiliado(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub AfiliadoAsync(ByVal sApl As String, ByVal dIdentificacion As String, ByVal iTipo As Integer, ByVal sPrograma As String, ByVal iOpc As Integer)
        Me.AfiliadoAsync(sApl, dIdentificacion, iTipo, sPrograma, iOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub AfiliadoAsync(ByVal sApl As String, ByVal dIdentificacion As String, ByVal iTipo As Integer, ByVal sPrograma As String, ByVal iOpc As Integer, ByVal userState As Object)
        If (Me.AfiliadoOperationCompleted Is Nothing) Then
            Me.AfiliadoOperationCompleted = AddressOf Me.OnAfiliadoOperationCompleted
        End If
        Me.InvokeAsync("Afiliado", New Object() {sApl, dIdentificacion, iTipo, sPrograma, iOpc}, Me.AfiliadoOperationCompleted, userState)
    End Sub
    
    Private Sub OnAfiliadoOperationCompleted(ByVal arg As Object)
        If (Not (Me.AfiliadoCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent AfiliadoCompleted(Me, New AfiliadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/CitasMedicasVg", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function CitasMedicasVg(ByVal strXml As String, ByVal strApl As String, ByVal lngIdentificacion As Long, ByVal byTipoIdentificacion As Integer, ByVal strNuid As String, ByVal intOpc As Integer) As String
        Dim results() As Object = Me.Invoke("CitasMedicasVg", New Object() {strXml, strApl, lngIdentificacion, byTipoIdentificacion, strNuid, intOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginCitasMedicasVg(ByVal strXml As String, ByVal strApl As String, ByVal lngIdentificacion As Long, ByVal byTipoIdentificacion As Integer, ByVal strNuid As String, ByVal intOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("CitasMedicasVg", New Object() {strXml, strApl, lngIdentificacion, byTipoIdentificacion, strNuid, intOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndCitasMedicasVg(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub CitasMedicasVgAsync(ByVal strXml As String, ByVal strApl As String, ByVal lngIdentificacion As Long, ByVal byTipoIdentificacion As Integer, ByVal strNuid As String, ByVal intOpc As Integer)
        Me.CitasMedicasVgAsync(strXml, strApl, lngIdentificacion, byTipoIdentificacion, strNuid, intOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub CitasMedicasVgAsync(ByVal strXml As String, ByVal strApl As String, ByVal lngIdentificacion As Long, ByVal byTipoIdentificacion As Integer, ByVal strNuid As String, ByVal intOpc As Integer, ByVal userState As Object)
        If (Me.CitasMedicasVgOperationCompleted Is Nothing) Then
            Me.CitasMedicasVgOperationCompleted = AddressOf Me.OnCitasMedicasVgOperationCompleted
        End If
        Me.InvokeAsync("CitasMedicasVg", New Object() {strXml, strApl, lngIdentificacion, byTipoIdentificacion, strNuid, intOpc}, Me.CitasMedicasVgOperationCompleted, userState)
    End Sub
    
    Private Sub OnCitasMedicasVgOperationCompleted(ByVal arg As Object)
        If (Not (Me.CitasMedicasVgCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent CitasMedicasVgCompleted(Me, New CitasMedicasVgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/ConsultaMaestroDeTarjetas", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function ConsultaMaestroDeTarjetas(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer, ByVal iOpc As Integer) As String
        Dim results() As Object = Me.Invoke("ConsultaMaestroDeTarjetas", New Object() {sApl, dIdentificacion, iTipo, iOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginConsultaMaestroDeTarjetas(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer, ByVal iOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ConsultaMaestroDeTarjetas", New Object() {sApl, dIdentificacion, iTipo, iOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndConsultaMaestroDeTarjetas(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub ConsultaMaestroDeTarjetasAsync(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer, ByVal iOpc As Integer)
        Me.ConsultaMaestroDeTarjetasAsync(sApl, dIdentificacion, iTipo, iOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub ConsultaMaestroDeTarjetasAsync(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer, ByVal iOpc As Integer, ByVal userState As Object)
        If (Me.ConsultaMaestroDeTarjetasOperationCompleted Is Nothing) Then
            Me.ConsultaMaestroDeTarjetasOperationCompleted = AddressOf Me.OnConsultaMaestroDeTarjetasOperationCompleted
        End If
        Me.InvokeAsync("ConsultaMaestroDeTarjetas", New Object() {sApl, dIdentificacion, iTipo, iOpc}, Me.ConsultaMaestroDeTarjetasOperationCompleted, userState)
    End Sub
    
    Private Sub OnConsultaMaestroDeTarjetasOperationCompleted(ByVal arg As Object)
        If (Not (Me.ConsultaMaestroDeTarjetasCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ConsultaMaestroDeTarjetasCompleted(Me, New ConsultaMaestroDeTarjetasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/Empresa", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Overloads Function Empresa(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer, ByVal iDep As Integer, ByVal sPrograma As String, ByVal iOpc As Integer) As String
        Dim results() As Object = Me.Invoke("Empresa", New Object() {pCodigoApp, dIdentificacion, iTipo, iDep, sPrograma, iOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginEmpresa(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer, ByVal iDep As Integer, ByVal sPrograma As String, ByVal iOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("Empresa", New Object() {sApl, dIdentificacion, iTipo, iDep, sPrograma, iOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndEmpresa(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub EmpresaAsync(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer, ByVal iDep As Integer, ByVal sPrograma As String, ByVal iOpc As Integer)
        Me.EmpresaAsync(sApl, dIdentificacion, iTipo, iDep, sPrograma, iOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub EmpresaAsync(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer, ByVal iDep As Integer, ByVal sPrograma As String, ByVal iOpc As Integer, ByVal userState As Object)
        If (Me.EmpresaOperationCompleted Is Nothing) Then
            Me.EmpresaOperationCompleted = AddressOf Me.OnEmpresaOperationCompleted
        End If
        Me.InvokeAsync("Empresa", New Object() {sApl, dIdentificacion, iTipo, iDep, sPrograma, iOpc}, Me.EmpresaOperationCompleted, userState)
    End Sub
    
    Private Sub OnEmpresaOperationCompleted(ByVal arg As Object)
        If (Not (Me.EmpresaCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent EmpresaCompleted(Me, New EmpresaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.WebMethodAttribute(MessageName:="Empresa1"),  _
     System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/Empresas nit y nombre", RequestElementName:="Empresas nit y nombre", RequestNamespace:="http://WCompensar/CAF", ResponseElementName:="Empresas nit y nombreResponse", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Overloads Function Empresa(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer, ByVal iDep As Integer, ByVal sPrograma As String, ByVal iOpc As Integer, ByVal sNom As String) As <System.Xml.Serialization.XmlElementAttribute("Empresas nit y nombreResult")> String
        Dim results() As Object = Me.Invoke("Empresa1", New Object() {pCodigoApp, dIdentificacion, iTipo, iDep, sPrograma, iOpc, sNom})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginEmpresa1(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer, ByVal iDep As Integer, ByVal sPrograma As String, ByVal iOpc As Integer, ByVal sNom As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("Empresa1", New Object() {sApl, dIdentificacion, iTipo, iDep, sPrograma, iOpc, sNom}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndEmpresa1(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub Empresa1Async(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer, ByVal iDep As Integer, ByVal sPrograma As String, ByVal iOpc As Integer, ByVal sNom As String)
        Me.Empresa1Async(sApl, dIdentificacion, iTipo, iDep, sPrograma, iOpc, sNom, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub Empresa1Async(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer, ByVal iDep As Integer, ByVal sPrograma As String, ByVal iOpc As Integer, ByVal sNom As String, ByVal userState As Object)
        If (Me.Empresa1OperationCompleted Is Nothing) Then
            Me.Empresa1OperationCompleted = AddressOf Me.OnEmpresa1OperationCompleted
        End If
        Me.InvokeAsync("Empresa1", New Object() {sApl, dIdentificacion, iTipo, iDep, sPrograma, iOpc, sNom}, Me.Empresa1OperationCompleted, userState)
    End Sub
    
    Private Sub OnEmpresa1OperationCompleted(ByVal arg As Object)
        If (Not (Me.Empresa1CompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent Empresa1Completed(Me, New Empresa1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/EmpresaAlfa", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function EmpresaAlfa(ByVal sParametros As String) As String
        Dim results() As Object = Me.Invoke("EmpresaAlfa", New Object() {sParametros})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginEmpresaAlfa(ByVal sParametros As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("EmpresaAlfa", New Object() {sParametros}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndEmpresaAlfa(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub EmpresaAlfaAsync(ByVal sParametros As String)
        Me.EmpresaAlfaAsync(sParametros, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub EmpresaAlfaAsync(ByVal sParametros As String, ByVal userState As Object)
        If (Me.EmpresaAlfaOperationCompleted Is Nothing) Then
            Me.EmpresaAlfaOperationCompleted = AddressOf Me.OnEmpresaAlfaOperationCompleted
        End If
        Me.InvokeAsync("EmpresaAlfa", New Object() {sParametros}, Me.EmpresaAlfaOperationCompleted, userState)
    End Sub
    
    Private Sub OnEmpresaAlfaOperationCompleted(ByVal arg As Object)
        If (Not (Me.EmpresaAlfaCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent EmpresaAlfaCompleted(Me, New EmpresaAlfaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/GeoReferencia", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function GeoReferencia(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer, ByVal iOpc As Integer) As String
        Dim results() As Object = Me.Invoke("GeoReferencia", New Object() {sApl, dIdentificacion, iTipo, iOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginGeoReferencia(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer, ByVal iOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("GeoReferencia", New Object() {sApl, dIdentificacion, iTipo, iOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndGeoReferencia(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub GeoReferenciaAsync(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer, ByVal iOpc As Integer)
        Me.GeoReferenciaAsync(sApl, dIdentificacion, iTipo, iOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub GeoReferenciaAsync(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer, ByVal iOpc As Integer, ByVal userState As Object)
        If (Me.GeoReferenciaOperationCompleted Is Nothing) Then
            Me.GeoReferenciaOperationCompleted = AddressOf Me.OnGeoReferenciaOperationCompleted
        End If
        Me.InvokeAsync("GeoReferencia", New Object() {sApl, dIdentificacion, iTipo, iOpc}, Me.GeoReferenciaOperationCompleted, userState)
    End Sub
    
    Private Sub OnGeoReferenciaOperationCompleted(ByVal arg As Object)
        If (Not (Me.GeoReferenciaCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent GeoReferenciaCompleted(Me, New GeoReferenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/Fonede", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function Fonede(ByVal sParametros As String) As String
        Dim results() As Object = Me.Invoke("Fonede", New Object() {sParametros})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginFonede(ByVal sParametros As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("Fonede", New Object() {sParametros}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndFonede(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub FonedeAsync(ByVal sParametros As String)
        Me.FonedeAsync(sParametros, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub FonedeAsync(ByVal sParametros As String, ByVal userState As Object)
        If (Me.FonedeOperationCompleted Is Nothing) Then
            Me.FonedeOperationCompleted = AddressOf Me.OnFonedeOperationCompleted
        End If
        Me.InvokeAsync("Fonede", New Object() {sParametros}, Me.FonedeOperationCompleted, userState)
    End Sub
    
    Private Sub OnFonedeOperationCompleted(ByVal arg As Object)
        If (Not (Me.FonedeCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent FonedeCompleted(Me, New FonedeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/SubsPorTrabajador", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function SubsPorTrabajador(ByVal sApl As String, ByVal PeriodoI As Integer, ByVal PeriodoF As Integer, ByVal TipoIdentificacion As Integer, ByVal Identificacion As Integer) As String
        Dim results() As Object = Me.Invoke("SubsPorTrabajador", New Object() {sApl, PeriodoI, PeriodoF, TipoIdentificacion, Identificacion})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginSubsPorTrabajador(ByVal sApl As String, ByVal PeriodoI As Integer, ByVal PeriodoF As Integer, ByVal TipoIdentificacion As Integer, ByVal Identificacion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("SubsPorTrabajador", New Object() {sApl, PeriodoI, PeriodoF, TipoIdentificacion, Identificacion}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndSubsPorTrabajador(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub SubsPorTrabajadorAsync(ByVal sApl As String, ByVal PeriodoI As Integer, ByVal PeriodoF As Integer, ByVal TipoIdentificacion As Integer, ByVal Identificacion As Integer)
        Me.SubsPorTrabajadorAsync(sApl, PeriodoI, PeriodoF, TipoIdentificacion, Identificacion, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub SubsPorTrabajadorAsync(ByVal sApl As String, ByVal PeriodoI As Integer, ByVal PeriodoF As Integer, ByVal TipoIdentificacion As Integer, ByVal Identificacion As Integer, ByVal userState As Object)
        If (Me.SubsPorTrabajadorOperationCompleted Is Nothing) Then
            Me.SubsPorTrabajadorOperationCompleted = AddressOf Me.OnSubsPorTrabajadorOperationCompleted
        End If
        Me.InvokeAsync("SubsPorTrabajador", New Object() {sApl, PeriodoI, PeriodoF, TipoIdentificacion, Identificacion}, Me.SubsPorTrabajadorOperationCompleted, userState)
    End Sub
    
    Private Sub OnSubsPorTrabajadorOperationCompleted(ByVal arg As Object)
        If (Not (Me.SubsPorTrabajadorCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent SubsPorTrabajadorCompleted(Me, New SubsPorTrabajadorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.WebMethodAttribute(MessageName:="Afiliado1"),  _
     System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/AfiliadoAlfa", RequestElementName:="AfiliadoAlfa", RequestNamespace:="http://WCompensar/CAF", ResponseElementName:="AfiliadoAlfaResponse", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Overloads Function Afiliado(ByVal sApl As String, ByVal dIdentificacion As String, ByVal iTipo As Integer, ByVal iOpc As Integer, ByVal sPrimerNombre As String, ByVal sSegundoNombre As String, ByVal sPrimerApellido As String, ByVal sSegundoApellido As String) As <System.Xml.Serialization.XmlElementAttribute("AfiliadoAlfaResult")> String
        Dim results() As Object = Me.Invoke("Afiliado1", New Object() {sApl, dIdentificacion, iTipo, iOpc, sPrimerNombre, sSegundoNombre, sPrimerApellido, sSegundoApellido})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginAfiliado1(ByVal sApl As String, ByVal dIdentificacion As String, ByVal iTipo As Integer, ByVal iOpc As Integer, ByVal sPrimerNombre As String, ByVal sSegundoNombre As String, ByVal sPrimerApellido As String, ByVal sSegundoApellido As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("Afiliado1", New Object() {sApl, dIdentificacion, iTipo, iOpc, sPrimerNombre, sSegundoNombre, sPrimerApellido, sSegundoApellido}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndAfiliado1(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub Afiliado1Async(ByVal sApl As String, ByVal dIdentificacion As String, ByVal iTipo As Integer, ByVal iOpc As Integer, ByVal sPrimerNombre As String, ByVal sSegundoNombre As String, ByVal sPrimerApellido As String, ByVal sSegundoApellido As String)
        Me.Afiliado1Async(sApl, dIdentificacion, iTipo, iOpc, sPrimerNombre, sSegundoNombre, sPrimerApellido, sSegundoApellido, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub Afiliado1Async(ByVal sApl As String, ByVal dIdentificacion As String, ByVal iTipo As Integer, ByVal iOpc As Integer, ByVal sPrimerNombre As String, ByVal sSegundoNombre As String, ByVal sPrimerApellido As String, ByVal sSegundoApellido As String, ByVal userState As Object)
        If (Me.Afiliado1OperationCompleted Is Nothing) Then
            Me.Afiliado1OperationCompleted = AddressOf Me.OnAfiliado1OperationCompleted
        End If
        Me.InvokeAsync("Afiliado1", New Object() {sApl, dIdentificacion, iTipo, iOpc, sPrimerNombre, sSegundoNombre, sPrimerApellido, sSegundoApellido}, Me.Afiliado1OperationCompleted, userState)
    End Sub
    
    Private Sub OnAfiliado1OperationCompleted(ByVal arg As Object)
        If (Not (Me.Afiliado1CompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent Afiliado1Completed(Me, New Afiliado1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/Documento", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function Documento(ByVal sApl As String, ByVal iNumDoc As Integer, ByVal iTipoDoc As Integer, ByVal iOpc As Integer) As String
        Dim results() As Object = Me.Invoke("Documento", New Object() {sApl, iNumDoc, iTipoDoc, iOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginDocumento(ByVal sApl As String, ByVal iNumDoc As Integer, ByVal iTipoDoc As Integer, ByVal iOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("Documento", New Object() {sApl, iNumDoc, iTipoDoc, iOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndDocumento(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub DocumentoAsync(ByVal sApl As String, ByVal iNumDoc As Integer, ByVal iTipoDoc As Integer, ByVal iOpc As Integer)
        Me.DocumentoAsync(sApl, iNumDoc, iTipoDoc, iOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub DocumentoAsync(ByVal sApl As String, ByVal iNumDoc As Integer, ByVal iTipoDoc As Integer, ByVal iOpc As Integer, ByVal userState As Object)
        If (Me.DocumentoOperationCompleted Is Nothing) Then
            Me.DocumentoOperationCompleted = AddressOf Me.OnDocumentoOperationCompleted
        End If
        Me.InvokeAsync("Documento", New Object() {sApl, iNumDoc, iTipoDoc, iOpc}, Me.DocumentoOperationCompleted, userState)
    End Sub
    
    Private Sub OnDocumentoOperationCompleted(ByVal arg As Object)
        If (Not (Me.DocumentoCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent DocumentoCompleted(Me, New DocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/Radicado_Cuentas", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function Radicado_Cuentas(ByVal sApl As String, ByVal nradicado As Integer) As String
        Dim results() As Object = Me.Invoke("Radicado_Cuentas", New Object() {sApl, nradicado})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginRadicado_Cuentas(ByVal sApl As String, ByVal nradicado As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("Radicado_Cuentas", New Object() {sApl, nradicado}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndRadicado_Cuentas(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub Radicado_CuentasAsync(ByVal sApl As String, ByVal nradicado As Integer)
        Me.Radicado_CuentasAsync(sApl, nradicado, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub Radicado_CuentasAsync(ByVal sApl As String, ByVal nradicado As Integer, ByVal userState As Object)
        If (Me.Radicado_CuentasOperationCompleted Is Nothing) Then
            Me.Radicado_CuentasOperationCompleted = AddressOf Me.OnRadicado_CuentasOperationCompleted
        End If
        Me.InvokeAsync("Radicado_Cuentas", New Object() {sApl, nradicado}, Me.Radicado_CuentasOperationCompleted, userState)
    End Sub
    
    Private Sub OnRadicado_CuentasOperationCompleted(ByVal arg As Object)
        If (Not (Me.Radicado_CuentasCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent Radicado_CuentasCompleted(Me, New Radicado_CuentasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/Credito", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function Credito(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer) As String
        Dim results() As Object = Me.Invoke("Credito", New Object() {sApl, sParametros, iOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginCredito(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("Credito", New Object() {sApl, sParametros, iOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndCredito(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub CreditoAsync(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer)
        Me.CreditoAsync(sApl, sParametros, iOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub CreditoAsync(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer, ByVal userState As Object)
        If (Me.CreditoOperationCompleted Is Nothing) Then
            Me.CreditoOperationCompleted = AddressOf Me.OnCreditoOperationCompleted
        End If
        Me.InvokeAsync("Credito", New Object() {sApl, sParametros, iOpc}, Me.CreditoOperationCompleted, userState)
    End Sub
    
    Private Sub OnCreditoOperationCompleted(ByVal arg As Object)
        If (Not (Me.CreditoCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent CreditoCompleted(Me, New CreditoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/EpsCiudades", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function EpsCiudades(ByVal sApl As String, ByVal cEps As String, ByVal cRegional As String, ByVal iOpc As Integer) As String
        Dim results() As Object = Me.Invoke("EpsCiudades", New Object() {sApl, cEps, cRegional, iOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginEpsCiudades(ByVal sApl As String, ByVal cEps As String, ByVal cRegional As String, ByVal iOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("EpsCiudades", New Object() {sApl, cEps, cRegional, iOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndEpsCiudades(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub EpsCiudadesAsync(ByVal sApl As String, ByVal cEps As String, ByVal cRegional As String, ByVal iOpc As Integer)
        Me.EpsCiudadesAsync(sApl, cEps, cRegional, iOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub EpsCiudadesAsync(ByVal sApl As String, ByVal cEps As String, ByVal cRegional As String, ByVal iOpc As Integer, ByVal userState As Object)
        If (Me.EpsCiudadesOperationCompleted Is Nothing) Then
            Me.EpsCiudadesOperationCompleted = AddressOf Me.OnEpsCiudadesOperationCompleted
        End If
        Me.InvokeAsync("EpsCiudades", New Object() {sApl, cEps, cRegional, iOpc}, Me.EpsCiudadesOperationCompleted, userState)
    End Sub
    
    Private Sub OnEpsCiudadesOperationCompleted(ByVal arg As Object)
        If (Not (Me.EpsCiudadesCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent EpsCiudadesCompleted(Me, New EpsCiudadesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/ConsultaAF", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function ConsultaAF(ByVal sApl As String, ByVal sNombre As String, ByVal sParametros As String) As String
        Dim results() As Object = Me.Invoke("ConsultaAF", New Object() {sApl, sNombre, sParametros})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginConsultaAF(ByVal sApl As String, ByVal sNombre As String, ByVal sParametros As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ConsultaAF", New Object() {sApl, sNombre, sParametros}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndConsultaAF(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub ConsultaAFAsync(ByVal sApl As String, ByVal sNombre As String, ByVal sParametros As String)
        Me.ConsultaAFAsync(sApl, sNombre, sParametros, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub ConsultaAFAsync(ByVal sApl As String, ByVal sNombre As String, ByVal sParametros As String, ByVal userState As Object)
        If (Me.ConsultaAFOperationCompleted Is Nothing) Then
            Me.ConsultaAFOperationCompleted = AddressOf Me.OnConsultaAFOperationCompleted
        End If
        Me.InvokeAsync("ConsultaAF", New Object() {sApl, sNombre, sParametros}, Me.ConsultaAFOperationCompleted, userState)
    End Sub
    
    Private Sub OnConsultaAFOperationCompleted(ByVal arg As Object)
        If (Not (Me.ConsultaAFCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ConsultaAFCompleted(Me, New ConsultaAFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/ConsultaMedicamentos", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function ConsultaMedicamentos(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer) As String
        Dim results() As Object = Me.Invoke("ConsultaMedicamentos", New Object() {sApl, sParametros, iOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginConsultaMedicamentos(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ConsultaMedicamentos", New Object() {sApl, sParametros, iOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndConsultaMedicamentos(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub ConsultaMedicamentosAsync(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer)
        Me.ConsultaMedicamentosAsync(sApl, sParametros, iOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub ConsultaMedicamentosAsync(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer, ByVal userState As Object)
        If (Me.ConsultaMedicamentosOperationCompleted Is Nothing) Then
            Me.ConsultaMedicamentosOperationCompleted = AddressOf Me.OnConsultaMedicamentosOperationCompleted
        End If
        Me.InvokeAsync("ConsultaMedicamentos", New Object() {sApl, sParametros, iOpc}, Me.ConsultaMedicamentosOperationCompleted, userState)
    End Sub
    
    Private Sub OnConsultaMedicamentosOperationCompleted(ByVal arg As Object)
        If (Not (Me.ConsultaMedicamentosCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ConsultaMedicamentosCompleted(Me, New ConsultaMedicamentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/ConsultarCitasDisponibles", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function ConsultarCitasDisponibles(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer) As String
        Dim results() As Object = Me.Invoke("ConsultarCitasDisponibles", New Object() {sApl, sParametros, iOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginConsultarCitasDisponibles(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ConsultarCitasDisponibles", New Object() {sApl, sParametros, iOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndConsultarCitasDisponibles(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub ConsultarCitasDisponiblesAsync(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer)
        Me.ConsultarCitasDisponiblesAsync(sApl, sParametros, iOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub ConsultarCitasDisponiblesAsync(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer, ByVal userState As Object)
        If (Me.ConsultarCitasDisponiblesOperationCompleted Is Nothing) Then
            Me.ConsultarCitasDisponiblesOperationCompleted = AddressOf Me.OnConsultarCitasDisponiblesOperationCompleted
        End If
        Me.InvokeAsync("ConsultarCitasDisponibles", New Object() {sApl, sParametros, iOpc}, Me.ConsultarCitasDisponiblesOperationCompleted, userState)
    End Sub
    
    Private Sub OnConsultarCitasDisponiblesOperationCompleted(ByVal arg As Object)
        If (Not (Me.ConsultarCitasDisponiblesCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ConsultarCitasDisponiblesCompleted(Me, New ConsultarCitasDisponiblesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/ConsultarSede", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function ConsultarSede(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer) As String
        Dim results() As Object = Me.Invoke("ConsultarSede", New Object() {sApl, sParametros, iOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginConsultarSede(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ConsultarSede", New Object() {sApl, sParametros, iOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndConsultarSede(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub ConsultarSedeAsync(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer)
        Me.ConsultarSedeAsync(sApl, sParametros, iOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub ConsultarSedeAsync(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer, ByVal userState As Object)
        If (Me.ConsultarSedeOperationCompleted Is Nothing) Then
            Me.ConsultarSedeOperationCompleted = AddressOf Me.OnConsultarSedeOperationCompleted
        End If
        Me.InvokeAsync("ConsultarSede", New Object() {sApl, sParametros, iOpc}, Me.ConsultarSedeOperationCompleted, userState)
    End Sub
    
    Private Sub OnConsultarSedeOperationCompleted(ByVal arg As Object)
        If (Not (Me.ConsultarSedeCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ConsultarSedeCompleted(Me, New ConsultarSedeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/ConsultarMedicosDisponibles", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function ConsultarMedicosDisponibles(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer) As String
        Dim results() As Object = Me.Invoke("ConsultarMedicosDisponibles", New Object() {sApl, sParametros, iOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginConsultarMedicosDisponibles(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ConsultarMedicosDisponibles", New Object() {sApl, sParametros, iOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndConsultarMedicosDisponibles(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub ConsultarMedicosDisponiblesAsync(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer)
        Me.ConsultarMedicosDisponiblesAsync(sApl, sParametros, iOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub ConsultarMedicosDisponiblesAsync(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer, ByVal userState As Object)
        If (Me.ConsultarMedicosDisponiblesOperationCompleted Is Nothing) Then
            Me.ConsultarMedicosDisponiblesOperationCompleted = AddressOf Me.OnConsultarMedicosDisponiblesOperationCompleted
        End If
        Me.InvokeAsync("ConsultarMedicosDisponibles", New Object() {sApl, sParametros, iOpc}, Me.ConsultarMedicosDisponiblesOperationCompleted, userState)
    End Sub
    
    Private Sub OnConsultarMedicosDisponiblesOperationCompleted(ByVal arg As Object)
        If (Not (Me.ConsultarMedicosDisponiblesCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ConsultarMedicosDisponiblesCompleted(Me, New ConsultarMedicosDisponiblesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/MultiAfiliado", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function MultiAfiliado(ByVal sApl As String, ByVal dIdentificacion As String, ByVal iTipo As Integer, ByVal iOpc As Integer) As String
        Dim results() As Object = Me.Invoke("MultiAfiliado", New Object() {sApl, dIdentificacion, iTipo, iOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginMultiAfiliado(ByVal sApl As String, ByVal dIdentificacion As String, ByVal iTipo As Integer, ByVal iOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("MultiAfiliado", New Object() {sApl, dIdentificacion, iTipo, iOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndMultiAfiliado(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub MultiAfiliadoAsync(ByVal sApl As String, ByVal dIdentificacion As String, ByVal iTipo As Integer, ByVal iOpc As Integer)
        Me.MultiAfiliadoAsync(sApl, dIdentificacion, iTipo, iOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub MultiAfiliadoAsync(ByVal sApl As String, ByVal dIdentificacion As String, ByVal iTipo As Integer, ByVal iOpc As Integer, ByVal userState As Object)
        If (Me.MultiAfiliadoOperationCompleted Is Nothing) Then
            Me.MultiAfiliadoOperationCompleted = AddressOf Me.OnMultiAfiliadoOperationCompleted
        End If
        Me.InvokeAsync("MultiAfiliado", New Object() {sApl, dIdentificacion, iTipo, iOpc}, Me.MultiAfiliadoOperationCompleted, userState)
    End Sub
    
    Private Sub OnMultiAfiliadoOperationCompleted(ByVal arg As Object)
        If (Not (Me.MultiAfiliadoCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent MultiAfiliadoCompleted(Me, New MultiAfiliadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/Consultas", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function Consultas(ByVal sParametros As String) As String
        Dim results() As Object = Me.Invoke("Consultas", New Object() {sParametros})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginConsultas(ByVal sParametros As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("Consultas", New Object() {sParametros}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndConsultas(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub ConsultasAsync(ByVal sParametros As String)
        Me.ConsultasAsync(sParametros, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub ConsultasAsync(ByVal sParametros As String, ByVal userState As Object)
        If (Me.ConsultasOperationCompleted Is Nothing) Then
            Me.ConsultasOperationCompleted = AddressOf Me.OnConsultasOperationCompleted
        End If
        Me.InvokeAsync("Consultas", New Object() {sParametros}, Me.ConsultasOperationCompleted, userState)
    End Sub
    
    Private Sub OnConsultasOperationCompleted(ByVal arg As Object)
        If (Not (Me.ConsultasCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ConsultasCompleted(Me, New ConsultasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/AfiliadoEps", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function AfiliadoEps(ByVal sApl As String, ByVal dIdentificacion As String, ByVal iTipo As Integer, ByVal sPrograma As String, ByVal sEps As String, ByVal iOpc As Integer) As String
        Dim results() As Object = Me.Invoke("AfiliadoEps", New Object() {sApl, dIdentificacion, iTipo, sPrograma, sEps, iOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginAfiliadoEps(ByVal sApl As String, ByVal dIdentificacion As String, ByVal iTipo As Integer, ByVal sPrograma As String, ByVal sEps As String, ByVal iOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("AfiliadoEps", New Object() {sApl, dIdentificacion, iTipo, sPrograma, sEps, iOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndAfiliadoEps(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub AfiliadoEpsAsync(ByVal sApl As String, ByVal dIdentificacion As String, ByVal iTipo As Integer, ByVal sPrograma As String, ByVal sEps As String, ByVal iOpc As Integer)
        Me.AfiliadoEpsAsync(sApl, dIdentificacion, iTipo, sPrograma, sEps, iOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub AfiliadoEpsAsync(ByVal sApl As String, ByVal dIdentificacion As String, ByVal iTipo As Integer, ByVal sPrograma As String, ByVal sEps As String, ByVal iOpc As Integer, ByVal userState As Object)
        If (Me.AfiliadoEpsOperationCompleted Is Nothing) Then
            Me.AfiliadoEpsOperationCompleted = AddressOf Me.OnAfiliadoEpsOperationCompleted
        End If
        Me.InvokeAsync("AfiliadoEps", New Object() {sApl, dIdentificacion, iTipo, sPrograma, sEps, iOpc}, Me.AfiliadoEpsOperationCompleted, userState)
    End Sub
    
    Private Sub OnAfiliadoEpsOperationCompleted(ByVal arg As Object)
        If (Not (Me.AfiliadoEpsCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent AfiliadoEpsCompleted(Me, New AfiliadoEpsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/PuntosdeAtencionEPS", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function PuntosdeAtencionEPS(ByVal strApl As String, ByVal cEps As String, ByVal sParametros As String, ByVal iOpcion As Integer) As String
        Dim results() As Object = Me.Invoke("PuntosdeAtencionEPS", New Object() {strApl, cEps, sParametros, iOpcion})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginPuntosdeAtencionEPS(ByVal strApl As String, ByVal cEps As String, ByVal sParametros As String, ByVal iOpcion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("PuntosdeAtencionEPS", New Object() {strApl, cEps, sParametros, iOpcion}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndPuntosdeAtencionEPS(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub PuntosdeAtencionEPSAsync(ByVal strApl As String, ByVal cEps As String, ByVal sParametros As String, ByVal iOpcion As Integer)
        Me.PuntosdeAtencionEPSAsync(strApl, cEps, sParametros, iOpcion, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub PuntosdeAtencionEPSAsync(ByVal strApl As String, ByVal cEps As String, ByVal sParametros As String, ByVal iOpcion As Integer, ByVal userState As Object)
        If (Me.PuntosdeAtencionEPSOperationCompleted Is Nothing) Then
            Me.PuntosdeAtencionEPSOperationCompleted = AddressOf Me.OnPuntosdeAtencionEPSOperationCompleted
        End If
        Me.InvokeAsync("PuntosdeAtencionEPS", New Object() {strApl, cEps, sParametros, iOpcion}, Me.PuntosdeAtencionEPSOperationCompleted, userState)
    End Sub
    
    Private Sub OnPuntosdeAtencionEPSOperationCompleted(ByVal arg As Object)
        If (Not (Me.PuntosdeAtencionEPSCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent PuntosdeAtencionEPSCompleted(Me, New PuntosdeAtencionEPSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/EmpresaEPS", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function EmpresaEPS(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer, ByVal iDep As Integer, ByVal sPrograma As String, ByVal cEps As String, ByVal iOpc As Integer) As String
        Dim results() As Object = Me.Invoke("EmpresaEPS", New Object() {sApl, dIdentificacion, iTipo, iDep, sPrograma, cEps, iOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginEmpresaEPS(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer, ByVal iDep As Integer, ByVal sPrograma As String, ByVal cEps As String, ByVal iOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("EmpresaEPS", New Object() {sApl, dIdentificacion, iTipo, iDep, sPrograma, cEps, iOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndEmpresaEPS(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub EmpresaEPSAsync(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer, ByVal iDep As Integer, ByVal sPrograma As String, ByVal cEps As String, ByVal iOpc As Integer)
        Me.EmpresaEPSAsync(sApl, dIdentificacion, iTipo, iDep, sPrograma, cEps, iOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub EmpresaEPSAsync(ByVal sApl As String, ByVal dIdentificacion As Double, ByVal iTipo As Integer, ByVal iDep As Integer, ByVal sPrograma As String, ByVal cEps As String, ByVal iOpc As Integer, ByVal userState As Object)
        If (Me.EmpresaEPSOperationCompleted Is Nothing) Then
            Me.EmpresaEPSOperationCompleted = AddressOf Me.OnEmpresaEPSOperationCompleted
        End If
        Me.InvokeAsync("EmpresaEPS", New Object() {sApl, dIdentificacion, iTipo, iDep, sPrograma, cEps, iOpc}, Me.EmpresaEPSOperationCompleted, userState)
    End Sub
    
    Private Sub OnEmpresaEPSOperationCompleted(ByVal arg As Object)
        If (Not (Me.EmpresaEPSCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent EmpresaEPSCompleted(Me, New EmpresaEPSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/CitasMedicasEPS", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function CitasMedicasEPS(ByVal strXml As String, ByVal strApl As String, ByVal lngIdentificacion As Long, ByVal byTipoIdentificacion As Integer, ByVal strNuid As String, ByVal cEps As String, ByVal sPrestador As String, ByVal intOpc As Integer) As String
        Dim results() As Object = Me.Invoke("CitasMedicasEPS", New Object() {strXml, strApl, lngIdentificacion, byTipoIdentificacion, strNuid, cEps, sPrestador, intOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginCitasMedicasEPS(ByVal strXml As String, ByVal strApl As String, ByVal lngIdentificacion As Long, ByVal byTipoIdentificacion As Integer, ByVal strNuid As String, ByVal cEps As String, ByVal sPrestador As String, ByVal intOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("CitasMedicasEPS", New Object() {strXml, strApl, lngIdentificacion, byTipoIdentificacion, strNuid, cEps, sPrestador, intOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndCitasMedicasEPS(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub CitasMedicasEPSAsync(ByVal strXml As String, ByVal strApl As String, ByVal lngIdentificacion As Long, ByVal byTipoIdentificacion As Integer, ByVal strNuid As String, ByVal cEps As String, ByVal sPrestador As String, ByVal intOpc As Integer)
        Me.CitasMedicasEPSAsync(strXml, strApl, lngIdentificacion, byTipoIdentificacion, strNuid, cEps, sPrestador, intOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub CitasMedicasEPSAsync(ByVal strXml As String, ByVal strApl As String, ByVal lngIdentificacion As Long, ByVal byTipoIdentificacion As Integer, ByVal strNuid As String, ByVal cEps As String, ByVal sPrestador As String, ByVal intOpc As Integer, ByVal userState As Object)
        If (Me.CitasMedicasEPSOperationCompleted Is Nothing) Then
            Me.CitasMedicasEPSOperationCompleted = AddressOf Me.OnCitasMedicasEPSOperationCompleted
        End If
        Me.InvokeAsync("CitasMedicasEPS", New Object() {strXml, strApl, lngIdentificacion, byTipoIdentificacion, strNuid, cEps, sPrestador, intOpc}, Me.CitasMedicasEPSOperationCompleted, userState)
    End Sub
    
    Private Sub OnCitasMedicasEPSOperationCompleted(ByVal arg As Object)
        If (Not (Me.CitasMedicasEPSCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent CitasMedicasEPSCompleted(Me, New CitasMedicasEPSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/MultiAfiliadoEps", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function MultiAfiliadoEps(ByVal sApl As String, ByVal dIdentificacion As String, ByVal iTipo As Integer, ByVal cEps As Integer, ByVal iOpc As Integer) As String
        Dim results() As Object = Me.Invoke("MultiAfiliadoEps", New Object() {sApl, dIdentificacion, iTipo, cEps, iOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginMultiAfiliadoEps(ByVal sApl As String, ByVal dIdentificacion As String, ByVal iTipo As Integer, ByVal cEps As Integer, ByVal iOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("MultiAfiliadoEps", New Object() {sApl, dIdentificacion, iTipo, cEps, iOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndMultiAfiliadoEps(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub MultiAfiliadoEpsAsync(ByVal sApl As String, ByVal dIdentificacion As String, ByVal iTipo As Integer, ByVal cEps As Integer, ByVal iOpc As Integer)
        Me.MultiAfiliadoEpsAsync(sApl, dIdentificacion, iTipo, cEps, iOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub MultiAfiliadoEpsAsync(ByVal sApl As String, ByVal dIdentificacion As String, ByVal iTipo As Integer, ByVal cEps As Integer, ByVal iOpc As Integer, ByVal userState As Object)
        If (Me.MultiAfiliadoEpsOperationCompleted Is Nothing) Then
            Me.MultiAfiliadoEpsOperationCompleted = AddressOf Me.OnMultiAfiliadoEpsOperationCompleted
        End If
        Me.InvokeAsync("MultiAfiliadoEps", New Object() {sApl, dIdentificacion, iTipo, cEps, iOpc}, Me.MultiAfiliadoEpsOperationCompleted, userState)
    End Sub
    
    Private Sub OnMultiAfiliadoEpsOperationCompleted(ByVal arg As Object)
        If (Not (Me.MultiAfiliadoEpsCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent MultiAfiliadoEpsCompleted(Me, New MultiAfiliadoEpsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/AfiliadoAlfaEPS", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function AfiliadoAlfaEPS(ByVal sApl As String, ByVal dIdentificacion As String, ByVal iTipo As Integer, ByVal iOpc As Integer, ByVal cEps As Integer, ByVal sPrimerNombre As String, ByVal sSegundoNombre As String, ByVal sPrimerApellido As String, ByVal sSegundoApellido As String) As String
        Dim results() As Object = Me.Invoke("AfiliadoAlfaEPS", New Object() {sApl, dIdentificacion, iTipo, iOpc, cEps, sPrimerNombre, sSegundoNombre, sPrimerApellido, sSegundoApellido})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginAfiliadoAlfaEPS(ByVal sApl As String, ByVal dIdentificacion As String, ByVal iTipo As Integer, ByVal iOpc As Integer, ByVal cEps As Integer, ByVal sPrimerNombre As String, ByVal sSegundoNombre As String, ByVal sPrimerApellido As String, ByVal sSegundoApellido As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("AfiliadoAlfaEPS", New Object() {sApl, dIdentificacion, iTipo, iOpc, cEps, sPrimerNombre, sSegundoNombre, sPrimerApellido, sSegundoApellido}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndAfiliadoAlfaEPS(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub AfiliadoAlfaEPSAsync(ByVal sApl As String, ByVal dIdentificacion As String, ByVal iTipo As Integer, ByVal iOpc As Integer, ByVal cEps As Integer, ByVal sPrimerNombre As String, ByVal sSegundoNombre As String, ByVal sPrimerApellido As String, ByVal sSegundoApellido As String)
        Me.AfiliadoAlfaEPSAsync(sApl, dIdentificacion, iTipo, iOpc, cEps, sPrimerNombre, sSegundoNombre, sPrimerApellido, sSegundoApellido, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub AfiliadoAlfaEPSAsync(ByVal sApl As String, ByVal dIdentificacion As String, ByVal iTipo As Integer, ByVal iOpc As Integer, ByVal cEps As Integer, ByVal sPrimerNombre As String, ByVal sSegundoNombre As String, ByVal sPrimerApellido As String, ByVal sSegundoApellido As String, ByVal userState As Object)
        If (Me.AfiliadoAlfaEPSOperationCompleted Is Nothing) Then
            Me.AfiliadoAlfaEPSOperationCompleted = AddressOf Me.OnAfiliadoAlfaEPSOperationCompleted
        End If
        Me.InvokeAsync("AfiliadoAlfaEPS", New Object() {sApl, dIdentificacion, iTipo, iOpc, cEps, sPrimerNombre, sSegundoNombre, sPrimerApellido, sSegundoApellido}, Me.AfiliadoAlfaEPSOperationCompleted, userState)
    End Sub
    
    Private Sub OnAfiliadoAlfaEPSOperationCompleted(ByVal arg As Object)
        If (Not (Me.AfiliadoAlfaEPSCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent AfiliadoAlfaEPSCompleted(Me, New AfiliadoAlfaEPSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/Prestadores", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function Prestadores(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer) As String
        Dim results() As Object = Me.Invoke("Prestadores", New Object() {sApl, sParametros, iOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginPrestadores(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("Prestadores", New Object() {sApl, sParametros, iOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndPrestadores(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub PrestadoresAsync(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer)
        Me.PrestadoresAsync(sApl, sParametros, iOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub PrestadoresAsync(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer, ByVal userState As Object)
        If (Me.PrestadoresOperationCompleted Is Nothing) Then
            Me.PrestadoresOperationCompleted = AddressOf Me.OnPrestadoresOperationCompleted
        End If
        Me.InvokeAsync("Prestadores", New Object() {sApl, sParametros, iOpc}, Me.PrestadoresOperationCompleted, userState)
    End Sub
    
    Private Sub OnPrestadoresOperationCompleted(ByVal arg As Object)
        If (Not (Me.PrestadoresCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent PrestadoresCompleted(Me, New PrestadoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/Anexo4", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function Anexo4(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer) As String
        Dim results() As Object = Me.Invoke("Anexo4", New Object() {sApl, sParametros, iOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginAnexo4(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("Anexo4", New Object() {sApl, sParametros, iOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndAnexo4(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub Anexo4Async(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer)
        Me.Anexo4Async(sApl, sParametros, iOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub Anexo4Async(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer, ByVal userState As Object)
        If (Me.Anexo4OperationCompleted Is Nothing) Then
            Me.Anexo4OperationCompleted = AddressOf Me.OnAnexo4OperationCompleted
        End If
        Me.InvokeAsync("Anexo4", New Object() {sApl, sParametros, iOpc}, Me.Anexo4OperationCompleted, userState)
    End Sub
    
    Private Sub OnAnexo4OperationCompleted(ByVal arg As Object)
        If (Not (Me.Anexo4CompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent Anexo4Completed(Me, New Anexo4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/ConsultaMedicamentosAutorizados", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function ConsultaMedicamentosAutorizados(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer) As String
        Dim results() As Object = Me.Invoke("ConsultaMedicamentosAutorizados", New Object() {sApl, sParametros, iOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginConsultaMedicamentosAutorizados(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("ConsultaMedicamentosAutorizados", New Object() {sApl, sParametros, iOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndConsultaMedicamentosAutorizados(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub ConsultaMedicamentosAutorizadosAsync(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer)
        Me.ConsultaMedicamentosAutorizadosAsync(sApl, sParametros, iOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub ConsultaMedicamentosAutorizadosAsync(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer, ByVal userState As Object)
        If (Me.ConsultaMedicamentosAutorizadosOperationCompleted Is Nothing) Then
            Me.ConsultaMedicamentosAutorizadosOperationCompleted = AddressOf Me.OnConsultaMedicamentosAutorizadosOperationCompleted
        End If
        Me.InvokeAsync("ConsultaMedicamentosAutorizados", New Object() {sApl, sParametros, iOpc}, Me.ConsultaMedicamentosAutorizadosOperationCompleted, userState)
    End Sub
    
    Private Sub OnConsultaMedicamentosAutorizadosOperationCompleted(ByVal arg As Object)
        If (Not (Me.ConsultaMedicamentosAutorizadosCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent ConsultaMedicamentosAutorizadosCompleted(Me, New ConsultaMedicamentosAutorizadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/CAF/Mensajes", RequestNamespace:="http://WCompensar/CAF", ResponseNamespace:="http://WCompensar/CAF", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
    Public Function Mensajes(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer) As String
        Dim results() As Object = Me.Invoke("Mensajes", New Object() {sApl, sParametros, iOpc})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginMensajes(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("Mensajes", New Object() {sApl, sParametros, iOpc}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndMensajes(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub MensajesAsync(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer)
        Me.MensajesAsync(sApl, sParametros, iOpc, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub MensajesAsync(ByVal sApl As String, ByVal sParametros As String, ByVal iOpc As Integer, ByVal userState As Object)
        If (Me.MensajesOperationCompleted Is Nothing) Then
            Me.MensajesOperationCompleted = AddressOf Me.OnMensajesOperationCompleted
        End If
        Me.InvokeAsync("Mensajes", New Object() {sApl, sParametros, iOpc}, Me.MensajesOperationCompleted, userState)
    End Sub
    
    Private Sub OnMensajesOperationCompleted(ByVal arg As Object)
        If (Not (Me.MensajesCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent MensajesCompleted(Me, New MensajesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    Public Shadows Sub CancelAsync(ByVal userState As Object)
        MyBase.CancelAsync(userState)
    End Sub
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub CitasMedicasVSCompletedEventHandler(ByVal sender As Object, ByVal e As CitasMedicasVSCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class CitasMedicasVSCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub AutorizadoCompletedEventHandler(ByVal sender As Object, ByVal e As AutorizadoCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class AutorizadoCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub DatosBasicosCompletedEventHandler(ByVal sender As Object, ByVal e As DatosBasicosCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class DatosBasicosCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub DatosBasicos1CompletedEventHandler(ByVal sender As Object, ByVal e As DatosBasicos1CompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class DatosBasicos1CompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub ConsultaDatosBasicosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaDatosBasicosCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class ConsultaDatosBasicosCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub EPSCompletedEventHandler(ByVal sender As Object, ByVal e As EPSCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class EPSCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub SMLVCompletedEventHandler(ByVal sender As Object, ByVal e As SMLVCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class SMLVCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub IncapacidadesCompletedEventHandler(ByVal sender As Object, ByVal e As IncapacidadesCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class IncapacidadesCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub PuntosdeAtencionCompletedEventHandler(ByVal sender As Object, ByVal e As PuntosdeAtencionCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class PuntosdeAtencionCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub CiudadesCompletedEventHandler(ByVal sender As Object, ByVal e As CiudadesCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class CiudadesCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub InscritosCompletedEventHandler(ByVal sender As Object, ByVal e As InscritosCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class InscritosCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub PagosCompletedEventHandler(ByVal sender As Object, ByVal e As PagosCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class PagosCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub AutorizacionSaludCompletedEventHandler(ByVal sender As Object, ByVal e As AutorizacionSaludCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class AutorizacionSaludCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub DatosAutorizacionesCompletedEventHandler(ByVal sender As Object, ByVal e As DatosAutorizacionesCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class DatosAutorizacionesCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub ConsultasAFCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultasAFCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class ConsultasAFCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub ConsultarHisVacunacionPorAfiliadoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarHisVacunacionPorAfiliadoCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class ConsultarHisVacunacionPorAfiliadoCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub ConsultarVacunasCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarVacunasCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class ConsultarVacunasCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub ConsultarServiciosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarServiciosCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class ConsultarServiciosCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub ConsultaDeCambioDeIdentificacionCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaDeCambioDeIdentificacionCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class ConsultaDeCambioDeIdentificacionCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub ConsultaISPECCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaISPECCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class ConsultaISPECCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub ConsultarAutorizacionesCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarAutorizacionesCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class ConsultarAutorizacionesCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub RecaudosCompletedEventHandler(ByVal sender As Object, ByVal e As RecaudosCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class RecaudosCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub AfiliadoCompletedEventHandler(ByVal sender As Object, ByVal e As AfiliadoCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class AfiliadoCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub CitasMedicasVgCompletedEventHandler(ByVal sender As Object, ByVal e As CitasMedicasVgCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class CitasMedicasVgCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub ConsultaMaestroDeTarjetasCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaMaestroDeTarjetasCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class ConsultaMaestroDeTarjetasCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub EmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As EmpresaCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class EmpresaCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub Empresa1CompletedEventHandler(ByVal sender As Object, ByVal e As Empresa1CompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class Empresa1CompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub EmpresaAlfaCompletedEventHandler(ByVal sender As Object, ByVal e As EmpresaAlfaCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class EmpresaAlfaCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub GeoReferenciaCompletedEventHandler(ByVal sender As Object, ByVal e As GeoReferenciaCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class GeoReferenciaCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub FonedeCompletedEventHandler(ByVal sender As Object, ByVal e As FonedeCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class FonedeCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub SubsPorTrabajadorCompletedEventHandler(ByVal sender As Object, ByVal e As SubsPorTrabajadorCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class SubsPorTrabajadorCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub Afiliado1CompletedEventHandler(ByVal sender As Object, ByVal e As Afiliado1CompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class Afiliado1CompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub DocumentoCompletedEventHandler(ByVal sender As Object, ByVal e As DocumentoCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class DocumentoCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub Radicado_CuentasCompletedEventHandler(ByVal sender As Object, ByVal e As Radicado_CuentasCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class Radicado_CuentasCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub CreditoCompletedEventHandler(ByVal sender As Object, ByVal e As CreditoCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class CreditoCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub EpsCiudadesCompletedEventHandler(ByVal sender As Object, ByVal e As EpsCiudadesCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class EpsCiudadesCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub ConsultaAFCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaAFCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class ConsultaAFCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub ConsultaMedicamentosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaMedicamentosCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class ConsultaMedicamentosCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub ConsultarCitasDisponiblesCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCitasDisponiblesCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class ConsultarCitasDisponiblesCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub ConsultarSedeCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarSedeCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class ConsultarSedeCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub ConsultarMedicosDisponiblesCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarMedicosDisponiblesCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class ConsultarMedicosDisponiblesCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub MultiAfiliadoCompletedEventHandler(ByVal sender As Object, ByVal e As MultiAfiliadoCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class MultiAfiliadoCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub ConsultasCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultasCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class ConsultasCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub AfiliadoEpsCompletedEventHandler(ByVal sender As Object, ByVal e As AfiliadoEpsCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class AfiliadoEpsCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub PuntosdeAtencionEPSCompletedEventHandler(ByVal sender As Object, ByVal e As PuntosdeAtencionEPSCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class PuntosdeAtencionEPSCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub EmpresaEPSCompletedEventHandler(ByVal sender As Object, ByVal e As EmpresaEPSCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class EmpresaEPSCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub CitasMedicasEPSCompletedEventHandler(ByVal sender As Object, ByVal e As CitasMedicasEPSCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class CitasMedicasEPSCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub MultiAfiliadoEpsCompletedEventHandler(ByVal sender As Object, ByVal e As MultiAfiliadoEpsCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class MultiAfiliadoEpsCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub AfiliadoAlfaEPSCompletedEventHandler(ByVal sender As Object, ByVal e As AfiliadoAlfaEPSCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class AfiliadoAlfaEPSCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub PrestadoresCompletedEventHandler(ByVal sender As Object, ByVal e As PrestadoresCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class PrestadoresCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub Anexo4CompletedEventHandler(ByVal sender As Object, ByVal e As Anexo4CompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class Anexo4CompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub ConsultaMedicamentosAutorizadosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaMedicamentosAutorizadosCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class ConsultaMedicamentosAutorizadosCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
Public Delegate Sub MensajesCompletedEventHandler(ByVal sender As Object, ByVal e As MensajesCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class MensajesCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class
