'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class Afe21
    Inherits DataSet
    
    Private tableAFE21 As AFE21DataTable
    
    Private table_Error As _ErrorDataTable
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("AFE21")) Is Nothing) Then
                Me.Tables.Add(New AFE21DataTable(ds.Tables("AFE21")))
            End If
            If (Not (ds.Tables("Error")) Is Nothing) Then
                Me.Tables.Add(New _ErrorDataTable(ds.Tables("Error")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property AFE21 As AFE21DataTable
        Get
            Return Me.tableAFE21
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property _Error As _ErrorDataTable
        Get
            Return Me.table_Error
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As Afe21 = CType(MyBase.Clone,Afe21)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("AFE21")) Is Nothing) Then
            Me.Tables.Add(New AFE21DataTable(ds.Tables("AFE21")))
        End If
        If (Not (ds.Tables("Error")) Is Nothing) Then
            Me.Tables.Add(New _ErrorDataTable(ds.Tables("Error")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tableAFE21 = CType(Me.Tables("AFE21"),AFE21DataTable)
        If (Not (Me.tableAFE21) Is Nothing) Then
            Me.tableAFE21.InitVars
        End If
        Me.table_Error = CType(Me.Tables("Error"),_ErrorDataTable)
        If (Not (Me.table_Error) Is Nothing) Then
            Me.table_Error.InitVars
        End If
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "Afe21"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/Afe21.xsd"
        Me.Locale = New System.Globalization.CultureInfo("en-US")
        Me.CaseSensitive = false
        Me.EnforceConstraints = true
        Me.tableAFE21 = New AFE21DataTable
        Me.Tables.Add(Me.tableAFE21)
        Me.table_Error = New _ErrorDataTable
        Me.Tables.Add(Me.table_Error)
    End Sub
    
    Private Function ShouldSerializeAFE21() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerialize_Error() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub AFE21RowChangeEventHandler(ByVal sender As Object, ByVal e As AFE21RowChangeEvent)
    
    Public Delegate Sub _ErrorRowChangeEventHandler(ByVal sender As Object, ByVal e As _ErrorRowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class AFE21DataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnI_MAINT As DataColumn
        
        Private columnI_CCAM As DataColumn
        
        Private columnI_FCOM As DataColumn
        
        Private columnI_CCAU As DataColumn
        
        Private columnI_XISP As DataColumn
        
        Private columnI_NIDETRA As DataColumn
        
        Private columnI_TIDETRA As DataColumn
        
        Private columnI_XPRIAPE As DataColumn
        
        Private columnI_XSEGAPE As DataColumn
        
        Private columnI_XNOMBRE As DataColumn
        
        Private columnI_XSEX As DataColumn
        
        Private columnI_CESTCIV As DataColumn
        
        Private columnI_XTIPDIS As DataColumn
        
        Private columnI_FNACTRA As DataColumn
        
        Private columnI_EDAT As DataColumn
        
        Private columnI_NCUECON As DataColumn
        
        Private columnI_CTIPCUE As DataColumn
        
        Private columnI_CENTFIN As DataColumn
        
        Private columnI_XENTFI As DataColumn
        
        Private columnI_XDIRCAS As DataColumn
        
        Private columnI_XCLAZON As DataColumn
        
        Private columnI_NTELCAS As DataColumn
        
        Private columnI_XBARRIO As DataColumn
        
        Private columnI_CZONMUN As DataColumn
        
        Private columnI_CCIU As DataColumn
        
        Private columnI_NDIRCOR As DataColumn
        
        Private columnI_TIDEEMP As DataColumn
        
        Private columnI_NIDEEMP As DataColumn
        
        Private columnI_CDEP As DataColumn
        
        Private columnI_CCOL As DataColumn
        
        Private columnI_FINGEMP As DataColumn
        
        Private columnI_NHORCON As DataColumn
        
        Private columnI_CTIPVIN As DataColumn
        
        Private columnI_XNOMCARG As DataColumn
        
        Private columnI_COCUTRA As DataColumn
        
        Private columnI_VSALTRA As DataColumn
        
        Private columnI_CESTSAL As DataColumn
        
        Private columnI_CEPSANT As DataColumn
        
        Private columnI_CEPSCON As DataColumn
        
        Private columnI_CEPSACT As DataColumn
        
        Private columnI_CFONPEN As DataColumn
        
        Private columnI_CPROEPS As DataColumn
        
        Private columnI_NMESCOT As DataColumn
        
        Private columnI_CCABFAM As DataColumn
        
        Private columnI_NCEDCYG As DataColumn
        
        Private columnI_NFIC As DataColumn
        
        Private columnI_TCAR As DataColumn
        
        Private columnI_TPRN As DataColumn
        
        Private columnI_VSALCYG As DataColumn
        
        Private columnI_CESTSUB As DataColumn
        
        Private columnI_CNUC As DataColumn
        
        Private columnI_NCNTPSS As DataColumn
        
        Private columnI_FAFISSS As DataColumn
        
        Private columnI_FGENFIC As DataColumn
        
        Private columnI_VPUNSIS As DataColumn
        
        Private columnI_XGRUETN As DataColumn
        
        Private columnI_CAFITRA As DataColumn
        
        Private columnI_XIDETRA As DataColumn
        
        Private columnI_CINDTDA As DataColumn
        
        Private columnI_CCAMCNF As DataColumn
        
        Private columnI_NIDEVER As DataColumn
        
        Private columnAT_SIGN As DataColumn
        
        Private columnI_XNOMAPL As DataColumn
        
        Private columnI_XNOMPAN As DataColumn
        
        Private columnI_XZONPOS As DataColumn
        
        Private columnI_XNOMEMP As DataColumn
        
        Private columnI_XESTCAJ As DataColumn
        
        Private columnI_XESTPOS As DataColumn
        
        Private columnI_XESTPCO As DataColumn
        
        Private columnI_FULTNOV As DataColumn
        
        Private columnI_FINGCAJ As DataColumn
        
        Private columnI_FINGPOS As DataColumn
        
        Private columnI_FINGPCO As DataColumn
        
        Private columnI_FULTIBC As DataColumn
        
        Private columnI_FRETCAJ As DataColumn
        
        Private columnI_FRETPOS As DataColumn
        
        Private columnI_FRETPCO As DataColumn
        
        Private columnI_FUTLSAL As DataColumn
        
        Private columnI_CCAT As DataColumn
        
        Private columnI_CESTSOC As DataColumn
        
        Private columnI_FPRICOT As DataColumn
        
        Private columnI_XCARCA As DataColumn
        
        Private columnI_XCARPOS As DataColumn
        
        Private columnI_XCARPC As DataColumn
        
        Private columnI_FULTAPO As DataColumn
        
        Private columnI_FCARCAJ As DataColumn
        
        Private columnI_FCARPOS As DataColumn
        
        Private columnI_FCARPCO As DataColumn
        
        Private columnI_XTIPVIN As DataColumn
        
        Private columnI_XREQ001 As DataColumn
        
        Private columnI_XREQ002 As DataColumn
        
        Private columnI_XREQ003 As DataColumn
        
        Private columnI_XREGPOS As DataColumn
        
        Private columnI_NEMPTRA As DataColumn
        
        Private columnI_FRETEMP As DataColumn
        
        Private columnI_CGEN001 As DataColumn
        
        Private columnI_CINDFDI As DataColumn
        
        Private columnI_CCAURET As DataColumn
        
        Private columnI_XCAURET As DataColumn
        
        Private columnI_TRANSAR As DataColumn
        
        Private columnMESSAGE As DataColumn
        
        Friend Sub New()
            MyBase.New("AFE21")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property I_MAINTColumn As DataColumn
            Get
                Return Me.columnI_MAINT
            End Get
        End Property
        
        Friend ReadOnly Property I_CCAMColumn As DataColumn
            Get
                Return Me.columnI_CCAM
            End Get
        End Property
        
        Friend ReadOnly Property I_FCOMColumn As DataColumn
            Get
                Return Me.columnI_FCOM
            End Get
        End Property
        
        Friend ReadOnly Property I_CCAUColumn As DataColumn
            Get
                Return Me.columnI_CCAU
            End Get
        End Property
        
        Friend ReadOnly Property I_XISPColumn As DataColumn
            Get
                Return Me.columnI_XISP
            End Get
        End Property
        
        Friend ReadOnly Property I_NIDETRAColumn As DataColumn
            Get
                Return Me.columnI_NIDETRA
            End Get
        End Property
        
        Friend ReadOnly Property I_TIDETRAColumn As DataColumn
            Get
                Return Me.columnI_TIDETRA
            End Get
        End Property
        
        Friend ReadOnly Property I_XPRIAPEColumn As DataColumn
            Get
                Return Me.columnI_XPRIAPE
            End Get
        End Property
        
        Friend ReadOnly Property I_XSEGAPEColumn As DataColumn
            Get
                Return Me.columnI_XSEGAPE
            End Get
        End Property
        
        Friend ReadOnly Property I_XNOMBREColumn As DataColumn
            Get
                Return Me.columnI_XNOMBRE
            End Get
        End Property
        
        Friend ReadOnly Property I_XSEXColumn As DataColumn
            Get
                Return Me.columnI_XSEX
            End Get
        End Property
        
        Friend ReadOnly Property I_CESTCIVColumn As DataColumn
            Get
                Return Me.columnI_CESTCIV
            End Get
        End Property
        
        Friend ReadOnly Property I_XTIPDISColumn As DataColumn
            Get
                Return Me.columnI_XTIPDIS
            End Get
        End Property
        
        Friend ReadOnly Property I_FNACTRAColumn As DataColumn
            Get
                Return Me.columnI_FNACTRA
            End Get
        End Property
        
        Friend ReadOnly Property I_EDATColumn As DataColumn
            Get
                Return Me.columnI_EDAT
            End Get
        End Property
        
        Friend ReadOnly Property I_NCUECONColumn As DataColumn
            Get
                Return Me.columnI_NCUECON
            End Get
        End Property
        
        Friend ReadOnly Property I_CTIPCUEColumn As DataColumn
            Get
                Return Me.columnI_CTIPCUE
            End Get
        End Property
        
        Friend ReadOnly Property I_CENTFINColumn As DataColumn
            Get
                Return Me.columnI_CENTFIN
            End Get
        End Property
        
        Friend ReadOnly Property I_XENTFIColumn As DataColumn
            Get
                Return Me.columnI_XENTFI
            End Get
        End Property
        
        Friend ReadOnly Property I_XDIRCASColumn As DataColumn
            Get
                Return Me.columnI_XDIRCAS
            End Get
        End Property
        
        Friend ReadOnly Property I_XCLAZONColumn As DataColumn
            Get
                Return Me.columnI_XCLAZON
            End Get
        End Property
        
        Friend ReadOnly Property I_NTELCASColumn As DataColumn
            Get
                Return Me.columnI_NTELCAS
            End Get
        End Property
        
        Friend ReadOnly Property I_XBARRIOColumn As DataColumn
            Get
                Return Me.columnI_XBARRIO
            End Get
        End Property
        
        Friend ReadOnly Property I_CZONMUNColumn As DataColumn
            Get
                Return Me.columnI_CZONMUN
            End Get
        End Property
        
        Friend ReadOnly Property I_CCIUColumn As DataColumn
            Get
                Return Me.columnI_CCIU
            End Get
        End Property
        
        Friend ReadOnly Property I_NDIRCORColumn As DataColumn
            Get
                Return Me.columnI_NDIRCOR
            End Get
        End Property
        
        Friend ReadOnly Property I_TIDEEMPColumn As DataColumn
            Get
                Return Me.columnI_TIDEEMP
            End Get
        End Property
        
        Friend ReadOnly Property I_NIDEEMPColumn As DataColumn
            Get
                Return Me.columnI_NIDEEMP
            End Get
        End Property
        
        Friend ReadOnly Property I_CDEPColumn As DataColumn
            Get
                Return Me.columnI_CDEP
            End Get
        End Property
        
        Friend ReadOnly Property I_CCOLColumn As DataColumn
            Get
                Return Me.columnI_CCOL
            End Get
        End Property
        
        Friend ReadOnly Property I_FINGEMPColumn As DataColumn
            Get
                Return Me.columnI_FINGEMP
            End Get
        End Property
        
        Friend ReadOnly Property I_NHORCONColumn As DataColumn
            Get
                Return Me.columnI_NHORCON
            End Get
        End Property
        
        Friend ReadOnly Property I_CTIPVINColumn As DataColumn
            Get
                Return Me.columnI_CTIPVIN
            End Get
        End Property
        
        Friend ReadOnly Property I_XNOMCARGColumn As DataColumn
            Get
                Return Me.columnI_XNOMCARG
            End Get
        End Property
        
        Friend ReadOnly Property I_COCUTRAColumn As DataColumn
            Get
                Return Me.columnI_COCUTRA
            End Get
        End Property
        
        Friend ReadOnly Property I_VSALTRAColumn As DataColumn
            Get
                Return Me.columnI_VSALTRA
            End Get
        End Property
        
        Friend ReadOnly Property I_CESTSALColumn As DataColumn
            Get
                Return Me.columnI_CESTSAL
            End Get
        End Property
        
        Friend ReadOnly Property I_CEPSANTColumn As DataColumn
            Get
                Return Me.columnI_CEPSANT
            End Get
        End Property
        
        Friend ReadOnly Property I_CEPSCONColumn As DataColumn
            Get
                Return Me.columnI_CEPSCON
            End Get
        End Property
        
        Friend ReadOnly Property I_CEPSACTColumn As DataColumn
            Get
                Return Me.columnI_CEPSACT
            End Get
        End Property
        
        Friend ReadOnly Property I_CFONPENColumn As DataColumn
            Get
                Return Me.columnI_CFONPEN
            End Get
        End Property
        
        Friend ReadOnly Property I_CPROEPSColumn As DataColumn
            Get
                Return Me.columnI_CPROEPS
            End Get
        End Property
        
        Friend ReadOnly Property I_NMESCOTColumn As DataColumn
            Get
                Return Me.columnI_NMESCOT
            End Get
        End Property
        
        Friend ReadOnly Property I_CCABFAMColumn As DataColumn
            Get
                Return Me.columnI_CCABFAM
            End Get
        End Property
        
        Friend ReadOnly Property I_NCEDCYGColumn As DataColumn
            Get
                Return Me.columnI_NCEDCYG
            End Get
        End Property
        
        Friend ReadOnly Property I_NFICColumn As DataColumn
            Get
                Return Me.columnI_NFIC
            End Get
        End Property
        
        Friend ReadOnly Property I_TCARColumn As DataColumn
            Get
                Return Me.columnI_TCAR
            End Get
        End Property
        
        Friend ReadOnly Property I_TPRNColumn As DataColumn
            Get
                Return Me.columnI_TPRN
            End Get
        End Property
        
        Friend ReadOnly Property I_VSALCYGColumn As DataColumn
            Get
                Return Me.columnI_VSALCYG
            End Get
        End Property
        
        Friend ReadOnly Property I_CESTSUBColumn As DataColumn
            Get
                Return Me.columnI_CESTSUB
            End Get
        End Property
        
        Friend ReadOnly Property I_CNUCColumn As DataColumn
            Get
                Return Me.columnI_CNUC
            End Get
        End Property
        
        Friend ReadOnly Property I_NCNTPSSColumn As DataColumn
            Get
                Return Me.columnI_NCNTPSS
            End Get
        End Property
        
        Friend ReadOnly Property I_FAFISSSColumn As DataColumn
            Get
                Return Me.columnI_FAFISSS
            End Get
        End Property
        
        Friend ReadOnly Property I_FGENFICColumn As DataColumn
            Get
                Return Me.columnI_FGENFIC
            End Get
        End Property
        
        Friend ReadOnly Property I_VPUNSISColumn As DataColumn
            Get
                Return Me.columnI_VPUNSIS
            End Get
        End Property
        
        Friend ReadOnly Property I_XGRUETNColumn As DataColumn
            Get
                Return Me.columnI_XGRUETN
            End Get
        End Property
        
        Friend ReadOnly Property I_CAFITRAColumn As DataColumn
            Get
                Return Me.columnI_CAFITRA
            End Get
        End Property
        
        Friend ReadOnly Property I_XIDETRAColumn As DataColumn
            Get
                Return Me.columnI_XIDETRA
            End Get
        End Property
        
        Friend ReadOnly Property I_CINDTDAColumn As DataColumn
            Get
                Return Me.columnI_CINDTDA
            End Get
        End Property
        
        Friend ReadOnly Property I_CCAMCNFColumn As DataColumn
            Get
                Return Me.columnI_CCAMCNF
            End Get
        End Property
        
        Friend ReadOnly Property I_NIDEVERColumn As DataColumn
            Get
                Return Me.columnI_NIDEVER
            End Get
        End Property
        
        Friend ReadOnly Property AT_SIGNColumn As DataColumn
            Get
                Return Me.columnAT_SIGN
            End Get
        End Property
        
        Friend ReadOnly Property I_XNOMAPLColumn As DataColumn
            Get
                Return Me.columnI_XNOMAPL
            End Get
        End Property
        
        Friend ReadOnly Property I_XNOMPANColumn As DataColumn
            Get
                Return Me.columnI_XNOMPAN
            End Get
        End Property
        
        Friend ReadOnly Property I_XZONPOSColumn As DataColumn
            Get
                Return Me.columnI_XZONPOS
            End Get
        End Property
        
        Friend ReadOnly Property I_XNOMEMPColumn As DataColumn
            Get
                Return Me.columnI_XNOMEMP
            End Get
        End Property
        
        Friend ReadOnly Property I_XESTCAJColumn As DataColumn
            Get
                Return Me.columnI_XESTCAJ
            End Get
        End Property
        
        Friend ReadOnly Property I_XESTPOSColumn As DataColumn
            Get
                Return Me.columnI_XESTPOS
            End Get
        End Property
        
        Friend ReadOnly Property I_XESTPCOColumn As DataColumn
            Get
                Return Me.columnI_XESTPCO
            End Get
        End Property
        
        Friend ReadOnly Property I_FULTNOVColumn As DataColumn
            Get
                Return Me.columnI_FULTNOV
            End Get
        End Property
        
        Friend ReadOnly Property I_FINGCAJColumn As DataColumn
            Get
                Return Me.columnI_FINGCAJ
            End Get
        End Property
        
        Friend ReadOnly Property I_FINGPOSColumn As DataColumn
            Get
                Return Me.columnI_FINGPOS
            End Get
        End Property
        
        Friend ReadOnly Property I_FINGPCOColumn As DataColumn
            Get
                Return Me.columnI_FINGPCO
            End Get
        End Property
        
        Friend ReadOnly Property I_FULTIBCColumn As DataColumn
            Get
                Return Me.columnI_FULTIBC
            End Get
        End Property
        
        Friend ReadOnly Property I_FRETCAJColumn As DataColumn
            Get
                Return Me.columnI_FRETCAJ
            End Get
        End Property
        
        Friend ReadOnly Property I_FRETPOSColumn As DataColumn
            Get
                Return Me.columnI_FRETPOS
            End Get
        End Property
        
        Friend ReadOnly Property I_FRETPCOColumn As DataColumn
            Get
                Return Me.columnI_FRETPCO
            End Get
        End Property
        
        Friend ReadOnly Property I_FUTLSALColumn As DataColumn
            Get
                Return Me.columnI_FUTLSAL
            End Get
        End Property
        
        Friend ReadOnly Property I_CCATColumn As DataColumn
            Get
                Return Me.columnI_CCAT
            End Get
        End Property
        
        Friend ReadOnly Property I_CESTSOCColumn As DataColumn
            Get
                Return Me.columnI_CESTSOC
            End Get
        End Property
        
        Friend ReadOnly Property I_FPRICOTColumn As DataColumn
            Get
                Return Me.columnI_FPRICOT
            End Get
        End Property
        
        Friend ReadOnly Property I_XCARCAColumn As DataColumn
            Get
                Return Me.columnI_XCARCA
            End Get
        End Property
        
        Friend ReadOnly Property I_XCARPOSColumn As DataColumn
            Get
                Return Me.columnI_XCARPOS
            End Get
        End Property
        
        Friend ReadOnly Property I_XCARPCColumn As DataColumn
            Get
                Return Me.columnI_XCARPC
            End Get
        End Property
        
        Friend ReadOnly Property I_FULTAPOColumn As DataColumn
            Get
                Return Me.columnI_FULTAPO
            End Get
        End Property
        
        Friend ReadOnly Property I_FCARCAJColumn As DataColumn
            Get
                Return Me.columnI_FCARCAJ
            End Get
        End Property
        
        Friend ReadOnly Property I_FCARPOSColumn As DataColumn
            Get
                Return Me.columnI_FCARPOS
            End Get
        End Property
        
        Friend ReadOnly Property I_FCARPCOColumn As DataColumn
            Get
                Return Me.columnI_FCARPCO
            End Get
        End Property
        
        Friend ReadOnly Property I_XTIPVINColumn As DataColumn
            Get
                Return Me.columnI_XTIPVIN
            End Get
        End Property
        
        Friend ReadOnly Property I_XREQ001Column As DataColumn
            Get
                Return Me.columnI_XREQ001
            End Get
        End Property
        
        Friend ReadOnly Property I_XREQ002Column As DataColumn
            Get
                Return Me.columnI_XREQ002
            End Get
        End Property
        
        Friend ReadOnly Property I_XREQ003Column As DataColumn
            Get
                Return Me.columnI_XREQ003
            End Get
        End Property
        
        Friend ReadOnly Property I_XREGPOSColumn As DataColumn
            Get
                Return Me.columnI_XREGPOS
            End Get
        End Property
        
        Friend ReadOnly Property I_NEMPTRAColumn As DataColumn
            Get
                Return Me.columnI_NEMPTRA
            End Get
        End Property
        
        Friend ReadOnly Property I_FRETEMPColumn As DataColumn
            Get
                Return Me.columnI_FRETEMP
            End Get
        End Property
        
        Friend ReadOnly Property I_CGEN001Column As DataColumn
            Get
                Return Me.columnI_CGEN001
            End Get
        End Property
        
        Friend ReadOnly Property I_CINDFDIColumn As DataColumn
            Get
                Return Me.columnI_CINDFDI
            End Get
        End Property
        
        Friend ReadOnly Property I_CCAURETColumn As DataColumn
            Get
                Return Me.columnI_CCAURET
            End Get
        End Property
        
        Friend ReadOnly Property I_XCAURETColumn As DataColumn
            Get
                Return Me.columnI_XCAURET
            End Get
        End Property
        
        Friend ReadOnly Property I_TRANSARColumn As DataColumn
            Get
                Return Me.columnI_TRANSAR
            End Get
        End Property
        
        Friend ReadOnly Property MESSAGEColumn As DataColumn
            Get
                Return Me.columnMESSAGE
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As AFE21Row
            Get
                Return CType(Me.Rows(index),AFE21Row)
            End Get
        End Property
        
        Public Event AFE21RowChanged As AFE21RowChangeEventHandler
        
        Public Event AFE21RowChanging As AFE21RowChangeEventHandler
        
        Public Event AFE21RowDeleted As AFE21RowChangeEventHandler
        
        Public Event AFE21RowDeleting As AFE21RowChangeEventHandler
        
        Public Overloads Sub AddAFE21Row(ByVal row As AFE21Row)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddAFE21Row( _
                    ByVal I_MAINT As String,  _
                    ByVal I_CCAM As String,  _
                    ByVal I_FCOM As String,  _
                    ByVal I_CCAU As String,  _
                    ByVal I_XISP As String,  _
                    ByVal I_NIDETRA As String,  _
                    ByVal I_TIDETRA As String,  _
                    ByVal I_XPRIAPE As String,  _
                    ByVal I_XSEGAPE As String,  _
                    ByVal I_XNOMBRE As String,  _
                    ByVal I_XSEX As String,  _
                    ByVal I_CESTCIV As String,  _
                    ByVal I_XTIPDIS As String,  _
                    ByVal I_FNACTRA As String,  _
                    ByVal I_EDAT As String,  _
                    ByVal I_NCUECON As String,  _
                    ByVal I_CTIPCUE As String,  _
                    ByVal I_CENTFIN As String,  _
                    ByVal I_XENTFI As String,  _
                    ByVal I_XDIRCAS As String,  _
                    ByVal I_XCLAZON As String,  _
                    ByVal I_NTELCAS As String,  _
                    ByVal I_XBARRIO As String,  _
                    ByVal I_CZONMUN As String,  _
                    ByVal I_CCIU As String,  _
                    ByVal I_NDIRCOR As String,  _
                    ByVal I_TIDEEMP As String,  _
                    ByVal I_NIDEEMP As String,  _
                    ByVal I_CDEP As String,  _
                    ByVal I_CCOL As String,  _
                    ByVal I_FINGEMP As String,  _
                    ByVal I_NHORCON As String,  _
                    ByVal I_CTIPVIN As String,  _
                    ByVal I_XNOMCARG As String,  _
                    ByVal I_COCUTRA As String,  _
                    ByVal I_VSALTRA As String,  _
                    ByVal I_CESTSAL As String,  _
                    ByVal I_CEPSANT As String,  _
                    ByVal I_CEPSCON As String,  _
                    ByVal I_CEPSACT As String,  _
                    ByVal I_CFONPEN As String,  _
                    ByVal I_CPROEPS As String,  _
                    ByVal I_NMESCOT As String,  _
                    ByVal I_CCABFAM As String,  _
                    ByVal I_NCEDCYG As String,  _
                    ByVal I_NFIC As String,  _
                    ByVal I_TCAR As String,  _
                    ByVal I_TPRN As String,  _
                    ByVal I_VSALCYG As String,  _
                    ByVal I_CESTSUB As String,  _
                    ByVal I_CNUC As String,  _
                    ByVal I_NCNTPSS As String,  _
                    ByVal I_FAFISSS As String,  _
                    ByVal I_FGENFIC As String,  _
                    ByVal I_VPUNSIS As String,  _
                    ByVal I_XGRUETN As String,  _
                    ByVal I_CAFITRA As String,  _
                    ByVal I_XIDETRA As String,  _
                    ByVal I_CINDTDA As String,  _
                    ByVal I_CCAMCNF As String,  _
                    ByVal I_NIDEVER As String,  _
                    ByVal AT_SIGN As String,  _
                    ByVal I_XNOMAPL As String,  _
                    ByVal I_XNOMPAN As String,  _
                    ByVal I_XZONPOS As String,  _
                    ByVal I_XNOMEMP As String,  _
                    ByVal I_XESTCAJ As String,  _
                    ByVal I_XESTPOS As String,  _
                    ByVal I_XESTPCO As String,  _
                    ByVal I_FULTNOV As String,  _
                    ByVal I_FINGCAJ As String,  _
                    ByVal I_FINGPOS As String,  _
                    ByVal I_FINGPCO As String,  _
                    ByVal I_FULTIBC As String,  _
                    ByVal I_FRETCAJ As String,  _
                    ByVal I_FRETPOS As String,  _
                    ByVal I_FRETPCO As String,  _
                    ByVal I_FUTLSAL As String,  _
                    ByVal I_CCAT As String,  _
                    ByVal I_CESTSOC As String,  _
                    ByVal I_FPRICOT As String,  _
                    ByVal I_XCARCA As String,  _
                    ByVal I_XCARPOS As String,  _
                    ByVal I_XCARPC As String,  _
                    ByVal I_FULTAPO As String,  _
                    ByVal I_FCARCAJ As String,  _
                    ByVal I_FCARPOS As String,  _
                    ByVal I_FCARPCO As String,  _
                    ByVal I_XTIPVIN As String,  _
                    ByVal I_XREQ001 As String,  _
                    ByVal I_XREQ002 As String,  _
                    ByVal I_XREQ003 As String,  _
                    ByVal I_XREGPOS As String,  _
                    ByVal I_NEMPTRA As String,  _
                    ByVal I_FRETEMP As String,  _
                    ByVal I_CGEN001 As String,  _
                    ByVal I_CINDFDI As String,  _
                    ByVal I_CCAURET As String,  _
                    ByVal I_XCAURET As String,  _
                    ByVal I_TRANSAR As String,  _
                    ByVal MESSAGE As String) As AFE21Row
            Dim rowAFE21Row As AFE21Row = CType(Me.NewRow,AFE21Row)
            rowAFE21Row.ItemArray = New Object() {I_MAINT, I_CCAM, I_FCOM, I_CCAU, I_XISP, I_NIDETRA, I_TIDETRA, I_XPRIAPE, I_XSEGAPE, I_XNOMBRE, I_XSEX, I_CESTCIV, I_XTIPDIS, I_FNACTRA, I_EDAT, I_NCUECON, I_CTIPCUE, I_CENTFIN, I_XENTFI, I_XDIRCAS, I_XCLAZON, I_NTELCAS, I_XBARRIO, I_CZONMUN, I_CCIU, I_NDIRCOR, I_TIDEEMP, I_NIDEEMP, I_CDEP, I_CCOL, I_FINGEMP, I_NHORCON, I_CTIPVIN, I_XNOMCARG, I_COCUTRA, I_VSALTRA, I_CESTSAL, I_CEPSANT, I_CEPSCON, I_CEPSACT, I_CFONPEN, I_CPROEPS, I_NMESCOT, I_CCABFAM, I_NCEDCYG, I_NFIC, I_TCAR, I_TPRN, I_VSALCYG, I_CESTSUB, I_CNUC, I_NCNTPSS, I_FAFISSS, I_FGENFIC, I_VPUNSIS, I_XGRUETN, I_CAFITRA, I_XIDETRA, I_CINDTDA, I_CCAMCNF, I_NIDEVER, AT_SIGN, I_XNOMAPL, I_XNOMPAN, I_XZONPOS, I_XNOMEMP, I_XESTCAJ, I_XESTPOS, I_XESTPCO, I_FULTNOV, I_FINGCAJ, I_FINGPOS, I_FINGPCO, I_FULTIBC, I_FRETCAJ, I_FRETPOS, I_FRETPCO, I_FUTLSAL, I_CCAT, I_CESTSOC, I_FPRICOT, I_XCARCA, I_XCARPOS, I_XCARPC, I_FULTAPO, I_FCARCAJ, I_FCARPOS, I_FCARPCO, I_XTIPVIN, I_XREQ001, I_XREQ002, I_XREQ003, I_XREGPOS, I_NEMPTRA, I_FRETEMP, I_CGEN001, I_CINDFDI, I_CCAURET, I_XCAURET, I_TRANSAR, MESSAGE}
            Me.Rows.Add(rowAFE21Row)
            Return rowAFE21Row
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As AFE21DataTable = CType(MyBase.Clone,AFE21DataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New AFE21DataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnI_MAINT = Me.Columns("I_MAINT")
            Me.columnI_CCAM = Me.Columns("I_CCAM")
            Me.columnI_FCOM = Me.Columns("I_FCOM")
            Me.columnI_CCAU = Me.Columns("I_CCAU")
            Me.columnI_XISP = Me.Columns("I_XISP")
            Me.columnI_NIDETRA = Me.Columns("I_NIDETRA")
            Me.columnI_TIDETRA = Me.Columns("I_TIDETRA")
            Me.columnI_XPRIAPE = Me.Columns("I_XPRIAPE")
            Me.columnI_XSEGAPE = Me.Columns("I_XSEGAPE")
            Me.columnI_XNOMBRE = Me.Columns("I_XNOMBRE")
            Me.columnI_XSEX = Me.Columns("I_XSEX")
            Me.columnI_CESTCIV = Me.Columns("I_CESTCIV")
            Me.columnI_XTIPDIS = Me.Columns("I_XTIPDIS")
            Me.columnI_FNACTRA = Me.Columns("I_FNACTRA")
            Me.columnI_EDAT = Me.Columns("I_EDAT")
            Me.columnI_NCUECON = Me.Columns("I_NCUECON")
            Me.columnI_CTIPCUE = Me.Columns("I_CTIPCUE")
            Me.columnI_CENTFIN = Me.Columns("I_CENTFIN")
            Me.columnI_XENTFI = Me.Columns("I_XENTFI")
            Me.columnI_XDIRCAS = Me.Columns("I_XDIRCAS")
            Me.columnI_XCLAZON = Me.Columns("I_XCLAZON")
            Me.columnI_NTELCAS = Me.Columns("I_NTELCAS")
            Me.columnI_XBARRIO = Me.Columns("I_XBARRIO")
            Me.columnI_CZONMUN = Me.Columns("I_CZONMUN")
            Me.columnI_CCIU = Me.Columns("I_CCIU")
            Me.columnI_NDIRCOR = Me.Columns("I_NDIRCOR")
            Me.columnI_TIDEEMP = Me.Columns("I_TIDEEMP")
            Me.columnI_NIDEEMP = Me.Columns("I_NIDEEMP")
            Me.columnI_CDEP = Me.Columns("I_CDEP")
            Me.columnI_CCOL = Me.Columns("I_CCOL")
            Me.columnI_FINGEMP = Me.Columns("I_FINGEMP")
            Me.columnI_NHORCON = Me.Columns("I_NHORCON")
            Me.columnI_CTIPVIN = Me.Columns("I_CTIPVIN")
            Me.columnI_XNOMCARG = Me.Columns("I_XNOMCARG")
            Me.columnI_COCUTRA = Me.Columns("I_COCUTRA")
            Me.columnI_VSALTRA = Me.Columns("I_VSALTRA")
            Me.columnI_CESTSAL = Me.Columns("I_CESTSAL")
            Me.columnI_CEPSANT = Me.Columns("I_CEPSANT")
            Me.columnI_CEPSCON = Me.Columns("I_CEPSCON")
            Me.columnI_CEPSACT = Me.Columns("I_CEPSACT")
            Me.columnI_CFONPEN = Me.Columns("I_CFONPEN")
            Me.columnI_CPROEPS = Me.Columns("I_CPROEPS")
            Me.columnI_NMESCOT = Me.Columns("I_NMESCOT")
            Me.columnI_CCABFAM = Me.Columns("I_CCABFAM")
            Me.columnI_NCEDCYG = Me.Columns("I_NCEDCYG")
            Me.columnI_NFIC = Me.Columns("I_NFIC")
            Me.columnI_TCAR = Me.Columns("I_TCAR")
            Me.columnI_TPRN = Me.Columns("I_TPRN")
            Me.columnI_VSALCYG = Me.Columns("I_VSALCYG")
            Me.columnI_CESTSUB = Me.Columns("I_CESTSUB")
            Me.columnI_CNUC = Me.Columns("I_CNUC")
            Me.columnI_NCNTPSS = Me.Columns("I_NCNTPSS")
            Me.columnI_FAFISSS = Me.Columns("I_FAFISSS")
            Me.columnI_FGENFIC = Me.Columns("I_FGENFIC")
            Me.columnI_VPUNSIS = Me.Columns("I_VPUNSIS")
            Me.columnI_XGRUETN = Me.Columns("I_XGRUETN")
            Me.columnI_CAFITRA = Me.Columns("I_CAFITRA")
            Me.columnI_XIDETRA = Me.Columns("I_XIDETRA")
            Me.columnI_CINDTDA = Me.Columns("I_CINDTDA")
            Me.columnI_CCAMCNF = Me.Columns("I_CCAMCNF")
            Me.columnI_NIDEVER = Me.Columns("I_NIDEVER")
            Me.columnAT_SIGN = Me.Columns("AT_SIGN")
            Me.columnI_XNOMAPL = Me.Columns("I_XNOMAPL")
            Me.columnI_XNOMPAN = Me.Columns("I_XNOMPAN")
            Me.columnI_XZONPOS = Me.Columns("I_XZONPOS")
            Me.columnI_XNOMEMP = Me.Columns("I_XNOMEMP")
            Me.columnI_XESTCAJ = Me.Columns("I_XESTCAJ")
            Me.columnI_XESTPOS = Me.Columns("I_XESTPOS")
            Me.columnI_XESTPCO = Me.Columns("I_XESTPCO")
            Me.columnI_FULTNOV = Me.Columns("I_FULTNOV")
            Me.columnI_FINGCAJ = Me.Columns("I_FINGCAJ")
            Me.columnI_FINGPOS = Me.Columns("I_FINGPOS")
            Me.columnI_FINGPCO = Me.Columns("I_FINGPCO")
            Me.columnI_FULTIBC = Me.Columns("I_FULTIBC")
            Me.columnI_FRETCAJ = Me.Columns("I_FRETCAJ")
            Me.columnI_FRETPOS = Me.Columns("I_FRETPOS")
            Me.columnI_FRETPCO = Me.Columns("I_FRETPCO")
            Me.columnI_FUTLSAL = Me.Columns("I_FUTLSAL")
            Me.columnI_CCAT = Me.Columns("I_CCAT")
            Me.columnI_CESTSOC = Me.Columns("I_CESTSOC")
            Me.columnI_FPRICOT = Me.Columns("I_FPRICOT")
            Me.columnI_XCARCA = Me.Columns("I_XCARCA")
            Me.columnI_XCARPOS = Me.Columns("I_XCARPOS")
            Me.columnI_XCARPC = Me.Columns("I_XCARPC")
            Me.columnI_FULTAPO = Me.Columns("I_FULTAPO")
            Me.columnI_FCARCAJ = Me.Columns("I_FCARCAJ")
            Me.columnI_FCARPOS = Me.Columns("I_FCARPOS")
            Me.columnI_FCARPCO = Me.Columns("I_FCARPCO")
            Me.columnI_XTIPVIN = Me.Columns("I_XTIPVIN")
            Me.columnI_XREQ001 = Me.Columns("I_XREQ001")
            Me.columnI_XREQ002 = Me.Columns("I_XREQ002")
            Me.columnI_XREQ003 = Me.Columns("I_XREQ003")
            Me.columnI_XREGPOS = Me.Columns("I_XREGPOS")
            Me.columnI_NEMPTRA = Me.Columns("I_NEMPTRA")
            Me.columnI_FRETEMP = Me.Columns("I_FRETEMP")
            Me.columnI_CGEN001 = Me.Columns("I_CGEN001")
            Me.columnI_CINDFDI = Me.Columns("I_CINDFDI")
            Me.columnI_CCAURET = Me.Columns("I_CCAURET")
            Me.columnI_XCAURET = Me.Columns("I_XCAURET")
            Me.columnI_TRANSAR = Me.Columns("I_TRANSAR")
            Me.columnMESSAGE = Me.Columns("MESSAGE")
        End Sub
        
        Private Sub InitClass()
            Me.columnI_MAINT = New DataColumn("I_MAINT", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_MAINT)
            Me.columnI_CCAM = New DataColumn("I_CCAM", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CCAM)
            Me.columnI_FCOM = New DataColumn("I_FCOM", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FCOM)
            Me.columnI_CCAU = New DataColumn("I_CCAU", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CCAU)
            Me.columnI_XISP = New DataColumn("I_XISP", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XISP)
            Me.columnI_NIDETRA = New DataColumn("I_NIDETRA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_NIDETRA)
            Me.columnI_TIDETRA = New DataColumn("I_TIDETRA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_TIDETRA)
            Me.columnI_XPRIAPE = New DataColumn("I_XPRIAPE", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XPRIAPE)
            Me.columnI_XSEGAPE = New DataColumn("I_XSEGAPE", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XSEGAPE)
            Me.columnI_XNOMBRE = New DataColumn("I_XNOMBRE", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XNOMBRE)
            Me.columnI_XSEX = New DataColumn("I_XSEX", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XSEX)
            Me.columnI_CESTCIV = New DataColumn("I_CESTCIV", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CESTCIV)
            Me.columnI_XTIPDIS = New DataColumn("I_XTIPDIS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XTIPDIS)
            Me.columnI_FNACTRA = New DataColumn("I_FNACTRA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FNACTRA)
            Me.columnI_EDAT = New DataColumn("I_EDAT", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_EDAT)
            Me.columnI_NCUECON = New DataColumn("I_NCUECON", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_NCUECON)
            Me.columnI_CTIPCUE = New DataColumn("I_CTIPCUE", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CTIPCUE)
            Me.columnI_CENTFIN = New DataColumn("I_CENTFIN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CENTFIN)
            Me.columnI_XENTFI = New DataColumn("I_XENTFI", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XENTFI)
            Me.columnI_XDIRCAS = New DataColumn("I_XDIRCAS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XDIRCAS)
            Me.columnI_XCLAZON = New DataColumn("I_XCLAZON", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XCLAZON)
            Me.columnI_NTELCAS = New DataColumn("I_NTELCAS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_NTELCAS)
            Me.columnI_XBARRIO = New DataColumn("I_XBARRIO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XBARRIO)
            Me.columnI_CZONMUN = New DataColumn("I_CZONMUN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CZONMUN)
            Me.columnI_CCIU = New DataColumn("I_CCIU", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CCIU)
            Me.columnI_NDIRCOR = New DataColumn("I_NDIRCOR", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_NDIRCOR)
            Me.columnI_TIDEEMP = New DataColumn("I_TIDEEMP", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_TIDEEMP)
            Me.columnI_NIDEEMP = New DataColumn("I_NIDEEMP", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_NIDEEMP)
            Me.columnI_CDEP = New DataColumn("I_CDEP", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CDEP)
            Me.columnI_CCOL = New DataColumn("I_CCOL", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CCOL)
            Me.columnI_FINGEMP = New DataColumn("I_FINGEMP", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FINGEMP)
            Me.columnI_NHORCON = New DataColumn("I_NHORCON", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_NHORCON)
            Me.columnI_CTIPVIN = New DataColumn("I_CTIPVIN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CTIPVIN)
            Me.columnI_XNOMCARG = New DataColumn("I_XNOMCARG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XNOMCARG)
            Me.columnI_COCUTRA = New DataColumn("I_COCUTRA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_COCUTRA)
            Me.columnI_VSALTRA = New DataColumn("I_VSALTRA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_VSALTRA)
            Me.columnI_CESTSAL = New DataColumn("I_CESTSAL", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CESTSAL)
            Me.columnI_CEPSANT = New DataColumn("I_CEPSANT", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CEPSANT)
            Me.columnI_CEPSCON = New DataColumn("I_CEPSCON", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CEPSCON)
            Me.columnI_CEPSACT = New DataColumn("I_CEPSACT", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CEPSACT)
            Me.columnI_CFONPEN = New DataColumn("I_CFONPEN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CFONPEN)
            Me.columnI_CPROEPS = New DataColumn("I_CPROEPS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CPROEPS)
            Me.columnI_NMESCOT = New DataColumn("I_NMESCOT", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_NMESCOT)
            Me.columnI_CCABFAM = New DataColumn("I_CCABFAM", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CCABFAM)
            Me.columnI_NCEDCYG = New DataColumn("I_NCEDCYG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_NCEDCYG)
            Me.columnI_NFIC = New DataColumn("I_NFIC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_NFIC)
            Me.columnI_TCAR = New DataColumn("I_TCAR", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_TCAR)
            Me.columnI_TPRN = New DataColumn("I_TPRN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_TPRN)
            Me.columnI_VSALCYG = New DataColumn("I_VSALCYG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_VSALCYG)
            Me.columnI_CESTSUB = New DataColumn("I_CESTSUB", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CESTSUB)
            Me.columnI_CNUC = New DataColumn("I_CNUC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CNUC)
            Me.columnI_NCNTPSS = New DataColumn("I_NCNTPSS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_NCNTPSS)
            Me.columnI_FAFISSS = New DataColumn("I_FAFISSS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FAFISSS)
            Me.columnI_FGENFIC = New DataColumn("I_FGENFIC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FGENFIC)
            Me.columnI_VPUNSIS = New DataColumn("I_VPUNSIS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_VPUNSIS)
            Me.columnI_XGRUETN = New DataColumn("I_XGRUETN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XGRUETN)
            Me.columnI_CAFITRA = New DataColumn("I_CAFITRA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CAFITRA)
            Me.columnI_XIDETRA = New DataColumn("I_XIDETRA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XIDETRA)
            Me.columnI_CINDTDA = New DataColumn("I_CINDTDA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CINDTDA)
            Me.columnI_CCAMCNF = New DataColumn("I_CCAMCNF", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CCAMCNF)
            Me.columnI_NIDEVER = New DataColumn("I_NIDEVER", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_NIDEVER)
            Me.columnAT_SIGN = New DataColumn("AT_SIGN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnAT_SIGN)
            Me.columnI_XNOMAPL = New DataColumn("I_XNOMAPL", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XNOMAPL)
            Me.columnI_XNOMPAN = New DataColumn("I_XNOMPAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XNOMPAN)
            Me.columnI_XZONPOS = New DataColumn("I_XZONPOS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XZONPOS)
            Me.columnI_XNOMEMP = New DataColumn("I_XNOMEMP", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XNOMEMP)
            Me.columnI_XESTCAJ = New DataColumn("I_XESTCAJ", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XESTCAJ)
            Me.columnI_XESTPOS = New DataColumn("I_XESTPOS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XESTPOS)
            Me.columnI_XESTPCO = New DataColumn("I_XESTPCO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XESTPCO)
            Me.columnI_FULTNOV = New DataColumn("I_FULTNOV", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FULTNOV)
            Me.columnI_FINGCAJ = New DataColumn("I_FINGCAJ", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FINGCAJ)
            Me.columnI_FINGPOS = New DataColumn("I_FINGPOS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FINGPOS)
            Me.columnI_FINGPCO = New DataColumn("I_FINGPCO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FINGPCO)
            Me.columnI_FULTIBC = New DataColumn("I_FULTIBC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FULTIBC)
            Me.columnI_FRETCAJ = New DataColumn("I_FRETCAJ", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FRETCAJ)
            Me.columnI_FRETPOS = New DataColumn("I_FRETPOS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FRETPOS)
            Me.columnI_FRETPCO = New DataColumn("I_FRETPCO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FRETPCO)
            Me.columnI_FUTLSAL = New DataColumn("I_FUTLSAL", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FUTLSAL)
            Me.columnI_CCAT = New DataColumn("I_CCAT", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CCAT)
            Me.columnI_CESTSOC = New DataColumn("I_CESTSOC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CESTSOC)
            Me.columnI_FPRICOT = New DataColumn("I_FPRICOT", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FPRICOT)
            Me.columnI_XCARCA = New DataColumn("I_XCARCA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XCARCA)
            Me.columnI_XCARPOS = New DataColumn("I_XCARPOS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XCARPOS)
            Me.columnI_XCARPC = New DataColumn("I_XCARPC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XCARPC)
            Me.columnI_FULTAPO = New DataColumn("I_FULTAPO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FULTAPO)
            Me.columnI_FCARCAJ = New DataColumn("I_FCARCAJ", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FCARCAJ)
            Me.columnI_FCARPOS = New DataColumn("I_FCARPOS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FCARPOS)
            Me.columnI_FCARPCO = New DataColumn("I_FCARPCO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FCARPCO)
            Me.columnI_XTIPVIN = New DataColumn("I_XTIPVIN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XTIPVIN)
            Me.columnI_XREQ001 = New DataColumn("I_XREQ001", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XREQ001)
            Me.columnI_XREQ002 = New DataColumn("I_XREQ002", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XREQ002)
            Me.columnI_XREQ003 = New DataColumn("I_XREQ003", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XREQ003)
            Me.columnI_XREGPOS = New DataColumn("I_XREGPOS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XREGPOS)
            Me.columnI_NEMPTRA = New DataColumn("I_NEMPTRA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_NEMPTRA)
            Me.columnI_FRETEMP = New DataColumn("I_FRETEMP", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FRETEMP)
            Me.columnI_CGEN001 = New DataColumn("I_CGEN001", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CGEN001)
            Me.columnI_CINDFDI = New DataColumn("I_CINDFDI", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CINDFDI)
            Me.columnI_CCAURET = New DataColumn("I_CCAURET", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CCAURET)
            Me.columnI_XCAURET = New DataColumn("I_XCAURET", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XCAURET)
            Me.columnI_TRANSAR = New DataColumn("I_TRANSAR", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_TRANSAR)
            Me.columnMESSAGE = New DataColumn("MESSAGE", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMESSAGE)
            Me.columnI_TRANSAR.DefaultValue = "1"
        End Sub
        
        Public Function NewAFE21Row() As AFE21Row
            Return CType(Me.NewRow,AFE21Row)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New AFE21Row(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(AFE21Row)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.AFE21RowChangedEvent) Is Nothing) Then
                RaiseEvent AFE21RowChanged(Me, New AFE21RowChangeEvent(CType(e.Row,AFE21Row), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.AFE21RowChangingEvent) Is Nothing) Then
                RaiseEvent AFE21RowChanging(Me, New AFE21RowChangeEvent(CType(e.Row,AFE21Row), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.AFE21RowDeletedEvent) Is Nothing) Then
                RaiseEvent AFE21RowDeleted(Me, New AFE21RowChangeEvent(CType(e.Row,AFE21Row), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.AFE21RowDeletingEvent) Is Nothing) Then
                RaiseEvent AFE21RowDeleting(Me, New AFE21RowChangeEvent(CType(e.Row,AFE21Row), e.Action))
            End If
        End Sub
        
        Public Sub RemoveAFE21Row(ByVal row As AFE21Row)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class AFE21Row
        Inherits DataRow
        
        Private tableAFE21 As AFE21DataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableAFE21 = CType(Me.Table,AFE21DataTable)
        End Sub
        
        Public Property I_MAINT As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_MAINTColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_MAINTColumn) = value
            End Set
        End Property
        
        Public Property I_CCAM As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CCAMColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CCAMColumn) = value
            End Set
        End Property
        
        Public Property I_FCOM As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_FCOMColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_FCOMColumn) = value
            End Set
        End Property
        
        Public Property I_CCAU As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CCAUColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CCAUColumn) = value
            End Set
        End Property
        
        Public Property I_XISP As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XISPColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XISPColumn) = value
            End Set
        End Property
        
        Public Property I_NIDETRA As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_NIDETRAColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_NIDETRAColumn) = value
            End Set
        End Property
        
        Public Property I_TIDETRA As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_TIDETRAColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_TIDETRAColumn) = value
            End Set
        End Property
        
        Public Property I_XPRIAPE As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XPRIAPEColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XPRIAPEColumn) = value
            End Set
        End Property
        
        Public Property I_XSEGAPE As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XSEGAPEColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XSEGAPEColumn) = value
            End Set
        End Property
        
        Public Property I_XNOMBRE As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XNOMBREColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XNOMBREColumn) = value
            End Set
        End Property
        
        Public Property I_XSEX As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XSEXColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XSEXColumn) = value
            End Set
        End Property
        
        Public Property I_CESTCIV As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CESTCIVColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CESTCIVColumn) = value
            End Set
        End Property
        
        Public Property I_XTIPDIS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XTIPDISColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XTIPDISColumn) = value
            End Set
        End Property
        
        Public Property I_FNACTRA As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_FNACTRAColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_FNACTRAColumn) = value
            End Set
        End Property
        
        Public Property I_EDAT As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_EDATColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_EDATColumn) = value
            End Set
        End Property
        
        Public Property I_NCUECON As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_NCUECONColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_NCUECONColumn) = value
            End Set
        End Property
        
        Public Property I_CTIPCUE As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CTIPCUEColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CTIPCUEColumn) = value
            End Set
        End Property
        
        Public Property I_CENTFIN As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CENTFINColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CENTFINColumn) = value
            End Set
        End Property
        
        Public Property I_XENTFI As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XENTFIColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XENTFIColumn) = value
            End Set
        End Property
        
        Public Property I_XDIRCAS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XDIRCASColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XDIRCASColumn) = value
            End Set
        End Property
        
        Public Property I_XCLAZON As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XCLAZONColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XCLAZONColumn) = value
            End Set
        End Property
        
        Public Property I_NTELCAS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_NTELCASColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_NTELCASColumn) = value
            End Set
        End Property
        
        Public Property I_XBARRIO As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XBARRIOColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XBARRIOColumn) = value
            End Set
        End Property
        
        Public Property I_CZONMUN As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CZONMUNColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CZONMUNColumn) = value
            End Set
        End Property
        
        Public Property I_CCIU As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CCIUColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CCIUColumn) = value
            End Set
        End Property
        
        Public Property I_NDIRCOR As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_NDIRCORColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_NDIRCORColumn) = value
            End Set
        End Property
        
        Public Property I_TIDEEMP As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_TIDEEMPColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_TIDEEMPColumn) = value
            End Set
        End Property
        
        Public Property I_NIDEEMP As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_NIDEEMPColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_NIDEEMPColumn) = value
            End Set
        End Property
        
        Public Property I_CDEP As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CDEPColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CDEPColumn) = value
            End Set
        End Property
        
        Public Property I_CCOL As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CCOLColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CCOLColumn) = value
            End Set
        End Property
        
        Public Property I_FINGEMP As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_FINGEMPColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_FINGEMPColumn) = value
            End Set
        End Property
        
        Public Property I_NHORCON As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_NHORCONColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_NHORCONColumn) = value
            End Set
        End Property
        
        Public Property I_CTIPVIN As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CTIPVINColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CTIPVINColumn) = value
            End Set
        End Property
        
        Public Property I_XNOMCARG As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XNOMCARGColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XNOMCARGColumn) = value
            End Set
        End Property
        
        Public Property I_COCUTRA As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_COCUTRAColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_COCUTRAColumn) = value
            End Set
        End Property
        
        Public Property I_VSALTRA As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_VSALTRAColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_VSALTRAColumn) = value
            End Set
        End Property
        
        Public Property I_CESTSAL As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CESTSALColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CESTSALColumn) = value
            End Set
        End Property
        
        Public Property I_CEPSANT As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CEPSANTColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CEPSANTColumn) = value
            End Set
        End Property
        
        Public Property I_CEPSCON As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CEPSCONColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CEPSCONColumn) = value
            End Set
        End Property
        
        Public Property I_CEPSACT As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CEPSACTColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CEPSACTColumn) = value
            End Set
        End Property
        
        Public Property I_CFONPEN As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CFONPENColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CFONPENColumn) = value
            End Set
        End Property
        
        Public Property I_CPROEPS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CPROEPSColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CPROEPSColumn) = value
            End Set
        End Property
        
        Public Property I_NMESCOT As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_NMESCOTColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_NMESCOTColumn) = value
            End Set
        End Property
        
        Public Property I_CCABFAM As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CCABFAMColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CCABFAMColumn) = value
            End Set
        End Property
        
        Public Property I_NCEDCYG As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_NCEDCYGColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_NCEDCYGColumn) = value
            End Set
        End Property
        
        Public Property I_NFIC As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_NFICColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_NFICColumn) = value
            End Set
        End Property
        
        Public Property I_TCAR As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_TCARColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_TCARColumn) = value
            End Set
        End Property
        
        Public Property I_TPRN As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_TPRNColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_TPRNColumn) = value
            End Set
        End Property
        
        Public Property I_VSALCYG As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_VSALCYGColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_VSALCYGColumn) = value
            End Set
        End Property
        
        Public Property I_CESTSUB As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CESTSUBColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CESTSUBColumn) = value
            End Set
        End Property
        
        Public Property I_CNUC As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CNUCColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CNUCColumn) = value
            End Set
        End Property
        
        Public Property I_NCNTPSS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_NCNTPSSColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_NCNTPSSColumn) = value
            End Set
        End Property
        
        Public Property I_FAFISSS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_FAFISSSColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_FAFISSSColumn) = value
            End Set
        End Property
        
        Public Property I_FGENFIC As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_FGENFICColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_FGENFICColumn) = value
            End Set
        End Property
        
        Public Property I_VPUNSIS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_VPUNSISColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_VPUNSISColumn) = value
            End Set
        End Property
        
        Public Property I_XGRUETN As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XGRUETNColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XGRUETNColumn) = value
            End Set
        End Property
        
        Public Property I_CAFITRA As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CAFITRAColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CAFITRAColumn) = value
            End Set
        End Property
        
        Public Property I_XIDETRA As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XIDETRAColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XIDETRAColumn) = value
            End Set
        End Property
        
        Public Property I_CINDTDA As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CINDTDAColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CINDTDAColumn) = value
            End Set
        End Property
        
        Public Property I_CCAMCNF As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CCAMCNFColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CCAMCNFColumn) = value
            End Set
        End Property
        
        Public Property I_NIDEVER As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_NIDEVERColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_NIDEVERColumn) = value
            End Set
        End Property
        
        Public Property AT_SIGN As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.AT_SIGNColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.AT_SIGNColumn) = value
            End Set
        End Property
        
        Public Property I_XNOMAPL As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XNOMAPLColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XNOMAPLColumn) = value
            End Set
        End Property
        
        Public Property I_XNOMPAN As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XNOMPANColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XNOMPANColumn) = value
            End Set
        End Property
        
        Public Property I_XZONPOS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XZONPOSColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XZONPOSColumn) = value
            End Set
        End Property
        
        Public Property I_XNOMEMP As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XNOMEMPColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XNOMEMPColumn) = value
            End Set
        End Property
        
        Public Property I_XESTCAJ As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XESTCAJColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XESTCAJColumn) = value
            End Set
        End Property
        
        Public Property I_XESTPOS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XESTPOSColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XESTPOSColumn) = value
            End Set
        End Property
        
        Public Property I_XESTPCO As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XESTPCOColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XESTPCOColumn) = value
            End Set
        End Property
        
        Public Property I_FULTNOV As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_FULTNOVColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_FULTNOVColumn) = value
            End Set
        End Property
        
        Public Property I_FINGCAJ As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_FINGCAJColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_FINGCAJColumn) = value
            End Set
        End Property
        
        Public Property I_FINGPOS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_FINGPOSColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_FINGPOSColumn) = value
            End Set
        End Property
        
        Public Property I_FINGPCO As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_FINGPCOColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_FINGPCOColumn) = value
            End Set
        End Property
        
        Public Property I_FULTIBC As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_FULTIBCColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_FULTIBCColumn) = value
            End Set
        End Property
        
        Public Property I_FRETCAJ As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_FRETCAJColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_FRETCAJColumn) = value
            End Set
        End Property
        
        Public Property I_FRETPOS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_FRETPOSColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_FRETPOSColumn) = value
            End Set
        End Property
        
        Public Property I_FRETPCO As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_FRETPCOColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_FRETPCOColumn) = value
            End Set
        End Property
        
        Public Property I_FUTLSAL As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_FUTLSALColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_FUTLSALColumn) = value
            End Set
        End Property
        
        Public Property I_CCAT As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CCATColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CCATColumn) = value
            End Set
        End Property
        
        Public Property I_CESTSOC As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CESTSOCColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CESTSOCColumn) = value
            End Set
        End Property
        
        Public Property I_FPRICOT As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_FPRICOTColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_FPRICOTColumn) = value
            End Set
        End Property
        
        Public Property I_XCARCA As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XCARCAColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XCARCAColumn) = value
            End Set
        End Property
        
        Public Property I_XCARPOS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XCARPOSColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XCARPOSColumn) = value
            End Set
        End Property
        
        Public Property I_XCARPC As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XCARPCColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XCARPCColumn) = value
            End Set
        End Property
        
        Public Property I_FULTAPO As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_FULTAPOColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_FULTAPOColumn) = value
            End Set
        End Property
        
        Public Property I_FCARCAJ As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_FCARCAJColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_FCARCAJColumn) = value
            End Set
        End Property
        
        Public Property I_FCARPOS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_FCARPOSColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_FCARPOSColumn) = value
            End Set
        End Property
        
        Public Property I_FCARPCO As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_FCARPCOColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_FCARPCOColumn) = value
            End Set
        End Property
        
        Public Property I_XTIPVIN As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XTIPVINColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XTIPVINColumn) = value
            End Set
        End Property
        
        Public Property I_XREQ001 As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XREQ001Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XREQ001Column) = value
            End Set
        End Property
        
        Public Property I_XREQ002 As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XREQ002Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XREQ002Column) = value
            End Set
        End Property
        
        Public Property I_XREQ003 As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XREQ003Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XREQ003Column) = value
            End Set
        End Property
        
        Public Property I_XREGPOS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XREGPOSColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XREGPOSColumn) = value
            End Set
        End Property
        
        Public Property I_NEMPTRA As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_NEMPTRAColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_NEMPTRAColumn) = value
            End Set
        End Property
        
        Public Property I_FRETEMP As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_FRETEMPColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_FRETEMPColumn) = value
            End Set
        End Property
        
        Public Property I_CGEN001 As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CGEN001Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CGEN001Column) = value
            End Set
        End Property
        
        Public Property I_CINDFDI As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CINDFDIColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CINDFDIColumn) = value
            End Set
        End Property
        
        Public Property I_CCAURET As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_CCAURETColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_CCAURETColumn) = value
            End Set
        End Property
        
        Public Property I_XCAURET As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_XCAURETColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_XCAURETColumn) = value
            End Set
        End Property
        
        Public Property I_TRANSAR As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.I_TRANSARColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.I_TRANSARColumn) = value
            End Set
        End Property
        
        Public Property MESSAGE As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE21.MESSAGEColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE21.MESSAGEColumn) = value
            End Set
        End Property
        
        Public Function IsI_MAINTNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_MAINTColumn)
        End Function
        
        Public Sub SetI_MAINTNull()
            Me(Me.tableAFE21.I_MAINTColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CCAMNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CCAMColumn)
        End Function
        
        Public Sub SetI_CCAMNull()
            Me(Me.tableAFE21.I_CCAMColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FCOMNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_FCOMColumn)
        End Function
        
        Public Sub SetI_FCOMNull()
            Me(Me.tableAFE21.I_FCOMColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CCAUNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CCAUColumn)
        End Function
        
        Public Sub SetI_CCAUNull()
            Me(Me.tableAFE21.I_CCAUColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XISPNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XISPColumn)
        End Function
        
        Public Sub SetI_XISPNull()
            Me(Me.tableAFE21.I_XISPColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_NIDETRANull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_NIDETRAColumn)
        End Function
        
        Public Sub SetI_NIDETRANull()
            Me(Me.tableAFE21.I_NIDETRAColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_TIDETRANull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_TIDETRAColumn)
        End Function
        
        Public Sub SetI_TIDETRANull()
            Me(Me.tableAFE21.I_TIDETRAColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XPRIAPENull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XPRIAPEColumn)
        End Function
        
        Public Sub SetI_XPRIAPENull()
            Me(Me.tableAFE21.I_XPRIAPEColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XSEGAPENull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XSEGAPEColumn)
        End Function
        
        Public Sub SetI_XSEGAPENull()
            Me(Me.tableAFE21.I_XSEGAPEColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XNOMBRENull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XNOMBREColumn)
        End Function
        
        Public Sub SetI_XNOMBRENull()
            Me(Me.tableAFE21.I_XNOMBREColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XSEXNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XSEXColumn)
        End Function
        
        Public Sub SetI_XSEXNull()
            Me(Me.tableAFE21.I_XSEXColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CESTCIVNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CESTCIVColumn)
        End Function
        
        Public Sub SetI_CESTCIVNull()
            Me(Me.tableAFE21.I_CESTCIVColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XTIPDISNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XTIPDISColumn)
        End Function
        
        Public Sub SetI_XTIPDISNull()
            Me(Me.tableAFE21.I_XTIPDISColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FNACTRANull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_FNACTRAColumn)
        End Function
        
        Public Sub SetI_FNACTRANull()
            Me(Me.tableAFE21.I_FNACTRAColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_EDATNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_EDATColumn)
        End Function
        
        Public Sub SetI_EDATNull()
            Me(Me.tableAFE21.I_EDATColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_NCUECONNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_NCUECONColumn)
        End Function
        
        Public Sub SetI_NCUECONNull()
            Me(Me.tableAFE21.I_NCUECONColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CTIPCUENull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CTIPCUEColumn)
        End Function
        
        Public Sub SetI_CTIPCUENull()
            Me(Me.tableAFE21.I_CTIPCUEColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CENTFINNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CENTFINColumn)
        End Function
        
        Public Sub SetI_CENTFINNull()
            Me(Me.tableAFE21.I_CENTFINColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XENTFINull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XENTFIColumn)
        End Function
        
        Public Sub SetI_XENTFINull()
            Me(Me.tableAFE21.I_XENTFIColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XDIRCASNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XDIRCASColumn)
        End Function
        
        Public Sub SetI_XDIRCASNull()
            Me(Me.tableAFE21.I_XDIRCASColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XCLAZONNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XCLAZONColumn)
        End Function
        
        Public Sub SetI_XCLAZONNull()
            Me(Me.tableAFE21.I_XCLAZONColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_NTELCASNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_NTELCASColumn)
        End Function
        
        Public Sub SetI_NTELCASNull()
            Me(Me.tableAFE21.I_NTELCASColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XBARRIONull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XBARRIOColumn)
        End Function
        
        Public Sub SetI_XBARRIONull()
            Me(Me.tableAFE21.I_XBARRIOColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CZONMUNNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CZONMUNColumn)
        End Function
        
        Public Sub SetI_CZONMUNNull()
            Me(Me.tableAFE21.I_CZONMUNColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CCIUNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CCIUColumn)
        End Function
        
        Public Sub SetI_CCIUNull()
            Me(Me.tableAFE21.I_CCIUColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_NDIRCORNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_NDIRCORColumn)
        End Function
        
        Public Sub SetI_NDIRCORNull()
            Me(Me.tableAFE21.I_NDIRCORColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_TIDEEMPNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_TIDEEMPColumn)
        End Function
        
        Public Sub SetI_TIDEEMPNull()
            Me(Me.tableAFE21.I_TIDEEMPColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_NIDEEMPNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_NIDEEMPColumn)
        End Function
        
        Public Sub SetI_NIDEEMPNull()
            Me(Me.tableAFE21.I_NIDEEMPColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CDEPNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CDEPColumn)
        End Function
        
        Public Sub SetI_CDEPNull()
            Me(Me.tableAFE21.I_CDEPColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CCOLNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CCOLColumn)
        End Function
        
        Public Sub SetI_CCOLNull()
            Me(Me.tableAFE21.I_CCOLColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FINGEMPNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_FINGEMPColumn)
        End Function
        
        Public Sub SetI_FINGEMPNull()
            Me(Me.tableAFE21.I_FINGEMPColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_NHORCONNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_NHORCONColumn)
        End Function
        
        Public Sub SetI_NHORCONNull()
            Me(Me.tableAFE21.I_NHORCONColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CTIPVINNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CTIPVINColumn)
        End Function
        
        Public Sub SetI_CTIPVINNull()
            Me(Me.tableAFE21.I_CTIPVINColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XNOMCARGNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XNOMCARGColumn)
        End Function
        
        Public Sub SetI_XNOMCARGNull()
            Me(Me.tableAFE21.I_XNOMCARGColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_COCUTRANull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_COCUTRAColumn)
        End Function
        
        Public Sub SetI_COCUTRANull()
            Me(Me.tableAFE21.I_COCUTRAColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_VSALTRANull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_VSALTRAColumn)
        End Function
        
        Public Sub SetI_VSALTRANull()
            Me(Me.tableAFE21.I_VSALTRAColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CESTSALNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CESTSALColumn)
        End Function
        
        Public Sub SetI_CESTSALNull()
            Me(Me.tableAFE21.I_CESTSALColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CEPSANTNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CEPSANTColumn)
        End Function
        
        Public Sub SetI_CEPSANTNull()
            Me(Me.tableAFE21.I_CEPSANTColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CEPSCONNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CEPSCONColumn)
        End Function
        
        Public Sub SetI_CEPSCONNull()
            Me(Me.tableAFE21.I_CEPSCONColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CEPSACTNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CEPSACTColumn)
        End Function
        
        Public Sub SetI_CEPSACTNull()
            Me(Me.tableAFE21.I_CEPSACTColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CFONPENNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CFONPENColumn)
        End Function
        
        Public Sub SetI_CFONPENNull()
            Me(Me.tableAFE21.I_CFONPENColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CPROEPSNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CPROEPSColumn)
        End Function
        
        Public Sub SetI_CPROEPSNull()
            Me(Me.tableAFE21.I_CPROEPSColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_NMESCOTNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_NMESCOTColumn)
        End Function
        
        Public Sub SetI_NMESCOTNull()
            Me(Me.tableAFE21.I_NMESCOTColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CCABFAMNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CCABFAMColumn)
        End Function
        
        Public Sub SetI_CCABFAMNull()
            Me(Me.tableAFE21.I_CCABFAMColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_NCEDCYGNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_NCEDCYGColumn)
        End Function
        
        Public Sub SetI_NCEDCYGNull()
            Me(Me.tableAFE21.I_NCEDCYGColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_NFICNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_NFICColumn)
        End Function
        
        Public Sub SetI_NFICNull()
            Me(Me.tableAFE21.I_NFICColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_TCARNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_TCARColumn)
        End Function
        
        Public Sub SetI_TCARNull()
            Me(Me.tableAFE21.I_TCARColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_TPRNNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_TPRNColumn)
        End Function
        
        Public Sub SetI_TPRNNull()
            Me(Me.tableAFE21.I_TPRNColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_VSALCYGNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_VSALCYGColumn)
        End Function
        
        Public Sub SetI_VSALCYGNull()
            Me(Me.tableAFE21.I_VSALCYGColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CESTSUBNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CESTSUBColumn)
        End Function
        
        Public Sub SetI_CESTSUBNull()
            Me(Me.tableAFE21.I_CESTSUBColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CNUCNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CNUCColumn)
        End Function
        
        Public Sub SetI_CNUCNull()
            Me(Me.tableAFE21.I_CNUCColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_NCNTPSSNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_NCNTPSSColumn)
        End Function
        
        Public Sub SetI_NCNTPSSNull()
            Me(Me.tableAFE21.I_NCNTPSSColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FAFISSSNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_FAFISSSColumn)
        End Function
        
        Public Sub SetI_FAFISSSNull()
            Me(Me.tableAFE21.I_FAFISSSColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FGENFICNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_FGENFICColumn)
        End Function
        
        Public Sub SetI_FGENFICNull()
            Me(Me.tableAFE21.I_FGENFICColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_VPUNSISNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_VPUNSISColumn)
        End Function
        
        Public Sub SetI_VPUNSISNull()
            Me(Me.tableAFE21.I_VPUNSISColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XGRUETNNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XGRUETNColumn)
        End Function
        
        Public Sub SetI_XGRUETNNull()
            Me(Me.tableAFE21.I_XGRUETNColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CAFITRANull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CAFITRAColumn)
        End Function
        
        Public Sub SetI_CAFITRANull()
            Me(Me.tableAFE21.I_CAFITRAColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XIDETRANull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XIDETRAColumn)
        End Function
        
        Public Sub SetI_XIDETRANull()
            Me(Me.tableAFE21.I_XIDETRAColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CINDTDANull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CINDTDAColumn)
        End Function
        
        Public Sub SetI_CINDTDANull()
            Me(Me.tableAFE21.I_CINDTDAColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CCAMCNFNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CCAMCNFColumn)
        End Function
        
        Public Sub SetI_CCAMCNFNull()
            Me(Me.tableAFE21.I_CCAMCNFColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_NIDEVERNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_NIDEVERColumn)
        End Function
        
        Public Sub SetI_NIDEVERNull()
            Me(Me.tableAFE21.I_NIDEVERColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsAT_SIGNNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.AT_SIGNColumn)
        End Function
        
        Public Sub SetAT_SIGNNull()
            Me(Me.tableAFE21.AT_SIGNColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XNOMAPLNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XNOMAPLColumn)
        End Function
        
        Public Sub SetI_XNOMAPLNull()
            Me(Me.tableAFE21.I_XNOMAPLColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XNOMPANNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XNOMPANColumn)
        End Function
        
        Public Sub SetI_XNOMPANNull()
            Me(Me.tableAFE21.I_XNOMPANColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XZONPOSNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XZONPOSColumn)
        End Function
        
        Public Sub SetI_XZONPOSNull()
            Me(Me.tableAFE21.I_XZONPOSColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XNOMEMPNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XNOMEMPColumn)
        End Function
        
        Public Sub SetI_XNOMEMPNull()
            Me(Me.tableAFE21.I_XNOMEMPColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XESTCAJNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XESTCAJColumn)
        End Function
        
        Public Sub SetI_XESTCAJNull()
            Me(Me.tableAFE21.I_XESTCAJColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XESTPOSNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XESTPOSColumn)
        End Function
        
        Public Sub SetI_XESTPOSNull()
            Me(Me.tableAFE21.I_XESTPOSColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XESTPCONull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XESTPCOColumn)
        End Function
        
        Public Sub SetI_XESTPCONull()
            Me(Me.tableAFE21.I_XESTPCOColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FULTNOVNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_FULTNOVColumn)
        End Function
        
        Public Sub SetI_FULTNOVNull()
            Me(Me.tableAFE21.I_FULTNOVColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FINGCAJNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_FINGCAJColumn)
        End Function
        
        Public Sub SetI_FINGCAJNull()
            Me(Me.tableAFE21.I_FINGCAJColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FINGPOSNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_FINGPOSColumn)
        End Function
        
        Public Sub SetI_FINGPOSNull()
            Me(Me.tableAFE21.I_FINGPOSColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FINGPCONull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_FINGPCOColumn)
        End Function
        
        Public Sub SetI_FINGPCONull()
            Me(Me.tableAFE21.I_FINGPCOColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FULTIBCNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_FULTIBCColumn)
        End Function
        
        Public Sub SetI_FULTIBCNull()
            Me(Me.tableAFE21.I_FULTIBCColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FRETCAJNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_FRETCAJColumn)
        End Function
        
        Public Sub SetI_FRETCAJNull()
            Me(Me.tableAFE21.I_FRETCAJColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FRETPOSNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_FRETPOSColumn)
        End Function
        
        Public Sub SetI_FRETPOSNull()
            Me(Me.tableAFE21.I_FRETPOSColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FRETPCONull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_FRETPCOColumn)
        End Function
        
        Public Sub SetI_FRETPCONull()
            Me(Me.tableAFE21.I_FRETPCOColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FUTLSALNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_FUTLSALColumn)
        End Function
        
        Public Sub SetI_FUTLSALNull()
            Me(Me.tableAFE21.I_FUTLSALColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CCATNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CCATColumn)
        End Function
        
        Public Sub SetI_CCATNull()
            Me(Me.tableAFE21.I_CCATColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CESTSOCNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CESTSOCColumn)
        End Function
        
        Public Sub SetI_CESTSOCNull()
            Me(Me.tableAFE21.I_CESTSOCColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FPRICOTNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_FPRICOTColumn)
        End Function
        
        Public Sub SetI_FPRICOTNull()
            Me(Me.tableAFE21.I_FPRICOTColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XCARCANull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XCARCAColumn)
        End Function
        
        Public Sub SetI_XCARCANull()
            Me(Me.tableAFE21.I_XCARCAColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XCARPOSNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XCARPOSColumn)
        End Function
        
        Public Sub SetI_XCARPOSNull()
            Me(Me.tableAFE21.I_XCARPOSColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XCARPCNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XCARPCColumn)
        End Function
        
        Public Sub SetI_XCARPCNull()
            Me(Me.tableAFE21.I_XCARPCColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FULTAPONull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_FULTAPOColumn)
        End Function
        
        Public Sub SetI_FULTAPONull()
            Me(Me.tableAFE21.I_FULTAPOColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FCARCAJNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_FCARCAJColumn)
        End Function
        
        Public Sub SetI_FCARCAJNull()
            Me(Me.tableAFE21.I_FCARCAJColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FCARPOSNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_FCARPOSColumn)
        End Function
        
        Public Sub SetI_FCARPOSNull()
            Me(Me.tableAFE21.I_FCARPOSColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FCARPCONull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_FCARPCOColumn)
        End Function
        
        Public Sub SetI_FCARPCONull()
            Me(Me.tableAFE21.I_FCARPCOColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XTIPVINNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XTIPVINColumn)
        End Function
        
        Public Sub SetI_XTIPVINNull()
            Me(Me.tableAFE21.I_XTIPVINColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XREQ001Null() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XREQ001Column)
        End Function
        
        Public Sub SetI_XREQ001Null()
            Me(Me.tableAFE21.I_XREQ001Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XREQ002Null() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XREQ002Column)
        End Function
        
        Public Sub SetI_XREQ002Null()
            Me(Me.tableAFE21.I_XREQ002Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XREQ003Null() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XREQ003Column)
        End Function
        
        Public Sub SetI_XREQ003Null()
            Me(Me.tableAFE21.I_XREQ003Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XREGPOSNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XREGPOSColumn)
        End Function
        
        Public Sub SetI_XREGPOSNull()
            Me(Me.tableAFE21.I_XREGPOSColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_NEMPTRANull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_NEMPTRAColumn)
        End Function
        
        Public Sub SetI_NEMPTRANull()
            Me(Me.tableAFE21.I_NEMPTRAColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FRETEMPNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_FRETEMPColumn)
        End Function
        
        Public Sub SetI_FRETEMPNull()
            Me(Me.tableAFE21.I_FRETEMPColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CGEN001Null() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CGEN001Column)
        End Function
        
        Public Sub SetI_CGEN001Null()
            Me(Me.tableAFE21.I_CGEN001Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CINDFDINull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CINDFDIColumn)
        End Function
        
        Public Sub SetI_CINDFDINull()
            Me(Me.tableAFE21.I_CINDFDIColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CCAURETNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_CCAURETColumn)
        End Function
        
        Public Sub SetI_CCAURETNull()
            Me(Me.tableAFE21.I_CCAURETColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XCAURETNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_XCAURETColumn)
        End Function
        
        Public Sub SetI_XCAURETNull()
            Me(Me.tableAFE21.I_XCAURETColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_TRANSARNull() As Boolean
            Return Me.IsNull(Me.tableAFE21.I_TRANSARColumn)
        End Function
        
        Public Sub SetI_TRANSARNull()
            Me(Me.tableAFE21.I_TRANSARColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsMESSAGENull() As Boolean
            Return Me.IsNull(Me.tableAFE21.MESSAGEColumn)
        End Function
        
        Public Sub SetMESSAGENull()
            Me(Me.tableAFE21.MESSAGEColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class AFE21RowChangeEvent
        Inherits EventArgs
        
        Private eventRow As AFE21Row
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As AFE21Row, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As AFE21Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class _ErrorDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnMensaje As DataColumn
        
        Friend Sub New()
            MyBase.New("Error")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property MensajeColumn As DataColumn
            Get
                Return Me.columnMensaje
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As _ErrorRow
            Get
                Return CType(Me.Rows(index),_ErrorRow)
            End Get
        End Property
        
        Public Event _ErrorRowChanged As _ErrorRowChangeEventHandler
        
        Public Event _ErrorRowChanging As _ErrorRowChangeEventHandler
        
        Public Event _ErrorRowDeleted As _ErrorRowChangeEventHandler
        
        Public Event _ErrorRowDeleting As _ErrorRowChangeEventHandler
        
        Public Overloads Sub Add_ErrorRow(ByVal row As _ErrorRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Add_ErrorRow(ByVal Mensaje As String) As _ErrorRow
            Dim row_ErrorRow As _ErrorRow = CType(Me.NewRow,_ErrorRow)
            row_ErrorRow.ItemArray = New Object() {Mensaje}
            Me.Rows.Add(row_ErrorRow)
            Return row_ErrorRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As _ErrorDataTable = CType(MyBase.Clone,_ErrorDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New _ErrorDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnMensaje = Me.Columns("Mensaje")
        End Sub
        
        Private Sub InitClass()
            Me.columnMensaje = New DataColumn("Mensaje", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMensaje)
        End Sub
        
        Public Function New_ErrorRow() As _ErrorRow
            Return CType(Me.NewRow,_ErrorRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New _ErrorRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(_ErrorRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me._ErrorRowChangedEvent) Is Nothing) Then
                RaiseEvent _ErrorRowChanged(Me, New _ErrorRowChangeEvent(CType(e.Row,_ErrorRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me._ErrorRowChangingEvent) Is Nothing) Then
                RaiseEvent _ErrorRowChanging(Me, New _ErrorRowChangeEvent(CType(e.Row,_ErrorRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me._ErrorRowDeletedEvent) Is Nothing) Then
                RaiseEvent _ErrorRowDeleted(Me, New _ErrorRowChangeEvent(CType(e.Row,_ErrorRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me._ErrorRowDeletingEvent) Is Nothing) Then
                RaiseEvent _ErrorRowDeleting(Me, New _ErrorRowChangeEvent(CType(e.Row,_ErrorRow), e.Action))
            End If
        End Sub
        
        Public Sub Remove_ErrorRow(ByVal row As _ErrorRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class _ErrorRow
        Inherits DataRow
        
        Private table_Error As _ErrorDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.table_Error = CType(Me.Table,_ErrorDataTable)
        End Sub
        
        Public Property Mensaje As String
            Get
                Try 
                    Return CType(Me(Me.table_Error.MensajeColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.table_Error.MensajeColumn) = value
            End Set
        End Property
        
        Public Function IsMensajeNull() As Boolean
            Return Me.IsNull(Me.table_Error.MensajeColumn)
        End Function
        
        Public Sub SetMensajeNull()
            Me(Me.table_Error.MensajeColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class _ErrorRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As _ErrorRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As _ErrorRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As _ErrorRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
