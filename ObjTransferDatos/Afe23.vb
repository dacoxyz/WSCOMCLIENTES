'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class Afe23
    Inherits DataSet
    
    Private tableAFE23 As AFE23DataTable
    
    Private table_Error As _ErrorDataTable
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("AFE23")) Is Nothing) Then
                Me.Tables.Add(New AFE23DataTable(ds.Tables("AFE23")))
            End If
            If (Not (ds.Tables("Error")) Is Nothing) Then
                Me.Tables.Add(New _ErrorDataTable(ds.Tables("Error")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property AFE23 As AFE23DataTable
        Get
            Return Me.tableAFE23
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property _Error As _ErrorDataTable
        Get
            Return Me.table_Error
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As Afe23 = CType(MyBase.Clone,Afe23)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("AFE23")) Is Nothing) Then
            Me.Tables.Add(New AFE23DataTable(ds.Tables("AFE23")))
        End If
        If (Not (ds.Tables("Error")) Is Nothing) Then
            Me.Tables.Add(New _ErrorDataTable(ds.Tables("Error")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tableAFE23 = CType(Me.Tables("AFE23"),AFE23DataTable)
        If (Not (Me.tableAFE23) Is Nothing) Then
            Me.tableAFE23.InitVars
        End If
        Me.table_Error = CType(Me.Tables("Error"),_ErrorDataTable)
        If (Not (Me.table_Error) Is Nothing) Then
            Me.table_Error.InitVars
        End If
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "Afe23"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/AFE23.xsd"
        Me.Locale = New System.Globalization.CultureInfo("en-US")
        Me.CaseSensitive = false
        Me.EnforceConstraints = false
        Me.tableAFE23 = New AFE23DataTable
        Me.Tables.Add(Me.tableAFE23)
        Me.table_Error = New _ErrorDataTable
        Me.Tables.Add(Me.table_Error)
    End Sub
    
    Private Function ShouldSerializeAFE23() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerialize_Error() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub AFE23RowChangeEventHandler(ByVal sender As Object, ByVal e As AFE23RowChangeEvent)
    
    Public Delegate Sub _ErrorRowChangeEventHandler(ByVal sender As Object, ByVal e As _ErrorRowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class AFE23DataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnI_MAINT As DataColumn
        
        Private columnI_CCAM As DataColumn
        
        Private columnI_FCOM As DataColumn
        
        Private columnI_CCAU As DataColumn
        
        Private columnI_XISP As DataColumn
        
        Private columnI_NIDETRA As DataColumn
        
        Private columnI_TIDETRA As DataColumn
        
        Private columnI_NIDEBEN As DataColumn
        
        Private columnI_TIDEBEN As DataColumn
        
        Private columnI_XPRIAPEB As DataColumn
        
        Private columnI_XSEGAPEB As DataColumn
        
        Private columnI_XNOMBENE As DataColumn
        
        Private columnI_TDOCBEN As DataColumn
        
        Private columnI_CTIPNUI As DataColumn
        
        Private columnI_NDOCBEN As DataColumn
        
        Private columnI_XSEX As DataColumn
        
        Private columnI_CPRN As DataColumn
        
        Private columnI_CTIPPAR As DataColumn
        
        Private columnI_CNIVSAN As DataColumn
        
        Private columnI_FNACBEN As DataColumn
        
        Private columnI_EDAT As DataColumn
        
        Private columnI_NDIRCOR As DataColumn
        
        Private columnI_CINDDIS As DataColumn
        
        Private columnI_XTIPDIS As DataColumn
        
        Private columnI_CDISPER As DataColumn
        
        Private columnI_CPAGUPC As DataColumn
        
        Private columnI_CESTSUB As DataColumn
        
        Private columnI_NCAR As DataColumn
        
        Private columnI_CNUC As DataColumn
        
        Private columnI_CCIU As DataColumn
        
        Private columnI_NANTSIS As DataColumn
        
        Private columnI_CEPSANT As DataColumn
        
        Private columnI_CEPSCON As DataColumn
        
        Private columnI_CEPSACT As DataColumn
        
        Private columnI_FAFISSS As DataColumn
        
        Private columnI_CAFIBEN As DataColumn
        
        Private columnI_CCAMCNF As DataColumn
        
        Private columnAT_SIGN As DataColumn
        
        Private columnI_XNOMAPL As DataColumn
        
        Private columnI_XNOMPAN As DataColumn
        
        Private columnI_XPRIAPE As DataColumn
        
        Private columnI_XSEGAPE As DataColumn
        
        Private columnI_XNOMBRE As DataColumn
        
        Private columnI_TIDEEMP As DataColumn
        
        Private columnI_NIDEEMP As DataColumn
        
        Private columnI_CDEP As DataColumn
        
        Private columnI_XEMP As DataColumn
        
        Private columnI_CCATTRA As DataColumn
        
        Private columnI_CESTTRA As DataColumn
        
        Private columnI_XCAJTRA As DataColumn
        
        Private columnI_FCAJTRA As DataColumn
        
        Private columnI_QCYGCAJ As DataColumn
        
        Private columnI_QHIJCAJ As DataColumn
        
        Private columnI_QPADCAJ As DataColumn
        
        Private columnI_QOTRCAJ As DataColumn
        
        Private columnI_XPOSTRA As DataColumn
        
        Private columnI_FPOSTRA As DataColumn
        
        Private columnI_QCYGPOS As DataColumn
        
        Private columnI_QHIJPOS As DataColumn
        
        Private columnI_QPADPOS As DataColumn
        
        Private columnI_QOTRPOS As DataColumn
        
        Private columnI_FCAJRET As DataColumn
        
        Private columnI_FPOSRET As DataColumn
        
        Private columnI_XREQ001 As DataColumn
        
        Private columnI_XREQ002 As DataColumn
        
        Private columnI_XREQ003 As DataColumn
        
        Private columnI_CCAUNEG As DataColumn
        
        Private columnI_XESTCAJ As DataColumn
        
        Private columnI_FINGCAJ As DataColumn
        
        Private columnI_FRETCAJ As DataColumn
        
        Private columnI_XCARCA As DataColumn
        
        Private columnI_FCARCAJ As DataColumn
        
        Private columnI_XREQB01 As DataColumn
        
        Private columnI_FINI001 As DataColumn
        
        Private columnI_FFIN001 As DataColumn
        
        Private columnI_FPRO001 As DataColumn
        
        Private columnI_XESTPOS As DataColumn
        
        Private columnI_FINGPOS As DataColumn
        
        Private columnI_FRETPOS As DataColumn
        
        Private columnI_XCARPOS As DataColumn
        
        Private columnI_FCARPOS As DataColumn
        
        Private columnI_XREQB02 As DataColumn
        
        Private columnI_FINI002 As DataColumn
        
        Private columnI_FFIN002 As DataColumn
        
        Private columnI_FPRO002 As DataColumn
        
        Private columnI_XESTPCO As DataColumn
        
        Private columnI_FINGPCO As DataColumn
        
        Private columnI_FRETPCO As DataColumn
        
        Private columnI_XCARPC As DataColumn
        
        Private columnI_FCARPCO As DataColumn
        
        Private columnI_XREQBAS As DataColumn
        
        Private columnI_FINIBAS As DataColumn
        
        Private columnI_FFINBAS As DataColumn
        
        Private columnI_FPROBAS As DataColumn
        
        Private columnI_CCAT As DataColumn
        
        Private columnI_CESTSOC As DataColumn
        
        Private columnI_CCOT As DataColumn
        
        Private columnI_FULTNOV As DataColumn
        
        Private columnI_FPRISUB As DataColumn
        
        Private columnI_FULTSUB As DataColumn
        
        Private columnI_CNIV As DataColumn
        
        Private columnI_NCUR As DataColumn
        
        Private columnI_NHOREST As DataColumn
        
        Private columnI_CJOR As DataColumn
        
        Private columnI_XCAL As DataColumn
        
        Private columnI_CINDFDI As DataColumn
        
        Private columnI_XCAURET As DataColumn
        
        Private columnI_TRANSAR As DataColumn
        
        Private columnMESSAGE As DataColumn
        
        Friend Sub New()
            MyBase.New("AFE23")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property I_MAINTColumn As DataColumn
            Get
                Return Me.columnI_MAINT
            End Get
        End Property
        
        Friend ReadOnly Property I_CCAMColumn As DataColumn
            Get
                Return Me.columnI_CCAM
            End Get
        End Property
        
        Friend ReadOnly Property I_FCOMColumn As DataColumn
            Get
                Return Me.columnI_FCOM
            End Get
        End Property
        
        Friend ReadOnly Property I_CCAUColumn As DataColumn
            Get
                Return Me.columnI_CCAU
            End Get
        End Property
        
        Friend ReadOnly Property I_XISPColumn As DataColumn
            Get
                Return Me.columnI_XISP
            End Get
        End Property
        
        Friend ReadOnly Property I_NIDETRAColumn As DataColumn
            Get
                Return Me.columnI_NIDETRA
            End Get
        End Property
        
        Friend ReadOnly Property I_TIDETRAColumn As DataColumn
            Get
                Return Me.columnI_TIDETRA
            End Get
        End Property
        
        Friend ReadOnly Property I_NIDEBENColumn As DataColumn
            Get
                Return Me.columnI_NIDEBEN
            End Get
        End Property
        
        Friend ReadOnly Property I_TIDEBENColumn As DataColumn
            Get
                Return Me.columnI_TIDEBEN
            End Get
        End Property
        
        Friend ReadOnly Property I_XPRIAPEBColumn As DataColumn
            Get
                Return Me.columnI_XPRIAPEB
            End Get
        End Property
        
        Friend ReadOnly Property I_XSEGAPEBColumn As DataColumn
            Get
                Return Me.columnI_XSEGAPEB
            End Get
        End Property
        
        Friend ReadOnly Property I_XNOMBENEColumn As DataColumn
            Get
                Return Me.columnI_XNOMBENE
            End Get
        End Property
        
        Friend ReadOnly Property I_TDOCBENColumn As DataColumn
            Get
                Return Me.columnI_TDOCBEN
            End Get
        End Property
        
        Friend ReadOnly Property I_CTIPNUIColumn As DataColumn
            Get
                Return Me.columnI_CTIPNUI
            End Get
        End Property
        
        Friend ReadOnly Property I_NDOCBENColumn As DataColumn
            Get
                Return Me.columnI_NDOCBEN
            End Get
        End Property
        
        Friend ReadOnly Property I_XSEXColumn As DataColumn
            Get
                Return Me.columnI_XSEX
            End Get
        End Property
        
        Friend ReadOnly Property I_CPRNColumn As DataColumn
            Get
                Return Me.columnI_CPRN
            End Get
        End Property
        
        Friend ReadOnly Property I_CTIPPARColumn As DataColumn
            Get
                Return Me.columnI_CTIPPAR
            End Get
        End Property
        
        Friend ReadOnly Property I_CNIVSANColumn As DataColumn
            Get
                Return Me.columnI_CNIVSAN
            End Get
        End Property
        
        Friend ReadOnly Property I_FNACBENColumn As DataColumn
            Get
                Return Me.columnI_FNACBEN
            End Get
        End Property
        
        Friend ReadOnly Property I_EDATColumn As DataColumn
            Get
                Return Me.columnI_EDAT
            End Get
        End Property
        
        Friend ReadOnly Property I_NDIRCORColumn As DataColumn
            Get
                Return Me.columnI_NDIRCOR
            End Get
        End Property
        
        Friend ReadOnly Property I_CINDDISColumn As DataColumn
            Get
                Return Me.columnI_CINDDIS
            End Get
        End Property
        
        Friend ReadOnly Property I_XTIPDISColumn As DataColumn
            Get
                Return Me.columnI_XTIPDIS
            End Get
        End Property
        
        Friend ReadOnly Property I_CDISPERColumn As DataColumn
            Get
                Return Me.columnI_CDISPER
            End Get
        End Property
        
        Friend ReadOnly Property I_CPAGUPCColumn As DataColumn
            Get
                Return Me.columnI_CPAGUPC
            End Get
        End Property
        
        Friend ReadOnly Property I_CESTSUBColumn As DataColumn
            Get
                Return Me.columnI_CESTSUB
            End Get
        End Property
        
        Friend ReadOnly Property I_NCARColumn As DataColumn
            Get
                Return Me.columnI_NCAR
            End Get
        End Property
        
        Friend ReadOnly Property I_CNUCColumn As DataColumn
            Get
                Return Me.columnI_CNUC
            End Get
        End Property
        
        Friend ReadOnly Property I_CCIUColumn As DataColumn
            Get
                Return Me.columnI_CCIU
            End Get
        End Property
        
        Friend ReadOnly Property I_NANTSISColumn As DataColumn
            Get
                Return Me.columnI_NANTSIS
            End Get
        End Property
        
        Friend ReadOnly Property I_CEPSANTColumn As DataColumn
            Get
                Return Me.columnI_CEPSANT
            End Get
        End Property
        
        Friend ReadOnly Property I_CEPSCONColumn As DataColumn
            Get
                Return Me.columnI_CEPSCON
            End Get
        End Property
        
        Friend ReadOnly Property I_CEPSACTColumn As DataColumn
            Get
                Return Me.columnI_CEPSACT
            End Get
        End Property
        
        Friend ReadOnly Property I_FAFISSSColumn As DataColumn
            Get
                Return Me.columnI_FAFISSS
            End Get
        End Property
        
        Friend ReadOnly Property I_CAFIBENColumn As DataColumn
            Get
                Return Me.columnI_CAFIBEN
            End Get
        End Property
        
        Friend ReadOnly Property I_CCAMCNFColumn As DataColumn
            Get
                Return Me.columnI_CCAMCNF
            End Get
        End Property
        
        Friend ReadOnly Property AT_SIGNColumn As DataColumn
            Get
                Return Me.columnAT_SIGN
            End Get
        End Property
        
        Friend ReadOnly Property I_XNOMAPLColumn As DataColumn
            Get
                Return Me.columnI_XNOMAPL
            End Get
        End Property
        
        Friend ReadOnly Property I_XNOMPANColumn As DataColumn
            Get
                Return Me.columnI_XNOMPAN
            End Get
        End Property
        
        Friend ReadOnly Property I_XPRIAPEColumn As DataColumn
            Get
                Return Me.columnI_XPRIAPE
            End Get
        End Property
        
        Friend ReadOnly Property I_XSEGAPEColumn As DataColumn
            Get
                Return Me.columnI_XSEGAPE
            End Get
        End Property
        
        Friend ReadOnly Property I_XNOMBREColumn As DataColumn
            Get
                Return Me.columnI_XNOMBRE
            End Get
        End Property
        
        Friend ReadOnly Property I_TIDEEMPColumn As DataColumn
            Get
                Return Me.columnI_TIDEEMP
            End Get
        End Property
        
        Friend ReadOnly Property I_NIDEEMPColumn As DataColumn
            Get
                Return Me.columnI_NIDEEMP
            End Get
        End Property
        
        Friend ReadOnly Property I_CDEPColumn As DataColumn
            Get
                Return Me.columnI_CDEP
            End Get
        End Property
        
        Friend ReadOnly Property I_XEMPColumn As DataColumn
            Get
                Return Me.columnI_XEMP
            End Get
        End Property
        
        Friend ReadOnly Property I_CCATTRAColumn As DataColumn
            Get
                Return Me.columnI_CCATTRA
            End Get
        End Property
        
        Friend ReadOnly Property I_CESTTRAColumn As DataColumn
            Get
                Return Me.columnI_CESTTRA
            End Get
        End Property
        
        Friend ReadOnly Property I_XCAJTRAColumn As DataColumn
            Get
                Return Me.columnI_XCAJTRA
            End Get
        End Property
        
        Friend ReadOnly Property I_FCAJTRAColumn As DataColumn
            Get
                Return Me.columnI_FCAJTRA
            End Get
        End Property
        
        Friend ReadOnly Property I_QCYGCAJColumn As DataColumn
            Get
                Return Me.columnI_QCYGCAJ
            End Get
        End Property
        
        Friend ReadOnly Property I_QHIJCAJColumn As DataColumn
            Get
                Return Me.columnI_QHIJCAJ
            End Get
        End Property
        
        Friend ReadOnly Property I_QPADCAJColumn As DataColumn
            Get
                Return Me.columnI_QPADCAJ
            End Get
        End Property
        
        Friend ReadOnly Property I_QOTRCAJColumn As DataColumn
            Get
                Return Me.columnI_QOTRCAJ
            End Get
        End Property
        
        Friend ReadOnly Property I_XPOSTRAColumn As DataColumn
            Get
                Return Me.columnI_XPOSTRA
            End Get
        End Property
        
        Friend ReadOnly Property I_FPOSTRAColumn As DataColumn
            Get
                Return Me.columnI_FPOSTRA
            End Get
        End Property
        
        Friend ReadOnly Property I_QCYGPOSColumn As DataColumn
            Get
                Return Me.columnI_QCYGPOS
            End Get
        End Property
        
        Friend ReadOnly Property I_QHIJPOSColumn As DataColumn
            Get
                Return Me.columnI_QHIJPOS
            End Get
        End Property
        
        Friend ReadOnly Property I_QPADPOSColumn As DataColumn
            Get
                Return Me.columnI_QPADPOS
            End Get
        End Property
        
        Friend ReadOnly Property I_QOTRPOSColumn As DataColumn
            Get
                Return Me.columnI_QOTRPOS
            End Get
        End Property
        
        Friend ReadOnly Property I_FCAJRETColumn As DataColumn
            Get
                Return Me.columnI_FCAJRET
            End Get
        End Property
        
        Friend ReadOnly Property I_FPOSRETColumn As DataColumn
            Get
                Return Me.columnI_FPOSRET
            End Get
        End Property
        
        Friend ReadOnly Property I_XREQ001Column As DataColumn
            Get
                Return Me.columnI_XREQ001
            End Get
        End Property
        
        Friend ReadOnly Property I_XREQ002Column As DataColumn
            Get
                Return Me.columnI_XREQ002
            End Get
        End Property
        
        Friend ReadOnly Property I_XREQ003Column As DataColumn
            Get
                Return Me.columnI_XREQ003
            End Get
        End Property
        
        Friend ReadOnly Property I_CCAUNEGColumn As DataColumn
            Get
                Return Me.columnI_CCAUNEG
            End Get
        End Property
        
        Friend ReadOnly Property I_XESTCAJColumn As DataColumn
            Get
                Return Me.columnI_XESTCAJ
            End Get
        End Property
        
        Friend ReadOnly Property I_FINGCAJColumn As DataColumn
            Get
                Return Me.columnI_FINGCAJ
            End Get
        End Property
        
        Friend ReadOnly Property I_FRETCAJColumn As DataColumn
            Get
                Return Me.columnI_FRETCAJ
            End Get
        End Property
        
        Friend ReadOnly Property I_XCARCAColumn As DataColumn
            Get
                Return Me.columnI_XCARCA
            End Get
        End Property
        
        Friend ReadOnly Property I_FCARCAJColumn As DataColumn
            Get
                Return Me.columnI_FCARCAJ
            End Get
        End Property
        
        Friend ReadOnly Property I_XREQB01Column As DataColumn
            Get
                Return Me.columnI_XREQB01
            End Get
        End Property
        
        Friend ReadOnly Property I_FINI001Column As DataColumn
            Get
                Return Me.columnI_FINI001
            End Get
        End Property
        
        Friend ReadOnly Property I_FFIN001Column As DataColumn
            Get
                Return Me.columnI_FFIN001
            End Get
        End Property
        
        Friend ReadOnly Property I_FPRO001Column As DataColumn
            Get
                Return Me.columnI_FPRO001
            End Get
        End Property
        
        Friend ReadOnly Property I_XESTPOSColumn As DataColumn
            Get
                Return Me.columnI_XESTPOS
            End Get
        End Property
        
        Friend ReadOnly Property I_FINGPOSColumn As DataColumn
            Get
                Return Me.columnI_FINGPOS
            End Get
        End Property
        
        Friend ReadOnly Property I_FRETPOSColumn As DataColumn
            Get
                Return Me.columnI_FRETPOS
            End Get
        End Property
        
        Friend ReadOnly Property I_XCARPOSColumn As DataColumn
            Get
                Return Me.columnI_XCARPOS
            End Get
        End Property
        
        Friend ReadOnly Property I_FCARPOSColumn As DataColumn
            Get
                Return Me.columnI_FCARPOS
            End Get
        End Property
        
        Friend ReadOnly Property I_XREQB02Column As DataColumn
            Get
                Return Me.columnI_XREQB02
            End Get
        End Property
        
        Friend ReadOnly Property I_FINI002Column As DataColumn
            Get
                Return Me.columnI_FINI002
            End Get
        End Property
        
        Friend ReadOnly Property I_FFIN002Column As DataColumn
            Get
                Return Me.columnI_FFIN002
            End Get
        End Property
        
        Friend ReadOnly Property I_FPRO002Column As DataColumn
            Get
                Return Me.columnI_FPRO002
            End Get
        End Property
        
        Friend ReadOnly Property I_XESTPCOColumn As DataColumn
            Get
                Return Me.columnI_XESTPCO
            End Get
        End Property
        
        Friend ReadOnly Property I_FINGPCOColumn As DataColumn
            Get
                Return Me.columnI_FINGPCO
            End Get
        End Property
        
        Friend ReadOnly Property I_FRETPCOColumn As DataColumn
            Get
                Return Me.columnI_FRETPCO
            End Get
        End Property
        
        Friend ReadOnly Property I_XCARPCColumn As DataColumn
            Get
                Return Me.columnI_XCARPC
            End Get
        End Property
        
        Friend ReadOnly Property I_FCARPCOColumn As DataColumn
            Get
                Return Me.columnI_FCARPCO
            End Get
        End Property
        
        Friend ReadOnly Property I_XREQBASColumn As DataColumn
            Get
                Return Me.columnI_XREQBAS
            End Get
        End Property
        
        Friend ReadOnly Property I_FINIBASColumn As DataColumn
            Get
                Return Me.columnI_FINIBAS
            End Get
        End Property
        
        Friend ReadOnly Property I_FFINBASColumn As DataColumn
            Get
                Return Me.columnI_FFINBAS
            End Get
        End Property
        
        Friend ReadOnly Property I_FPROBASColumn As DataColumn
            Get
                Return Me.columnI_FPROBAS
            End Get
        End Property
        
        Friend ReadOnly Property I_CCATColumn As DataColumn
            Get
                Return Me.columnI_CCAT
            End Get
        End Property
        
        Friend ReadOnly Property I_CESTSOCColumn As DataColumn
            Get
                Return Me.columnI_CESTSOC
            End Get
        End Property
        
        Friend ReadOnly Property I_CCOTColumn As DataColumn
            Get
                Return Me.columnI_CCOT
            End Get
        End Property
        
        Friend ReadOnly Property I_FULTNOVColumn As DataColumn
            Get
                Return Me.columnI_FULTNOV
            End Get
        End Property
        
        Friend ReadOnly Property I_FPRISUBColumn As DataColumn
            Get
                Return Me.columnI_FPRISUB
            End Get
        End Property
        
        Friend ReadOnly Property I_FULTSUBColumn As DataColumn
            Get
                Return Me.columnI_FULTSUB
            End Get
        End Property
        
        Friend ReadOnly Property I_CNIVColumn As DataColumn
            Get
                Return Me.columnI_CNIV
            End Get
        End Property
        
        Friend ReadOnly Property I_NCURColumn As DataColumn
            Get
                Return Me.columnI_NCUR
            End Get
        End Property
        
        Friend ReadOnly Property I_NHORESTColumn As DataColumn
            Get
                Return Me.columnI_NHOREST
            End Get
        End Property
        
        Friend ReadOnly Property I_CJORColumn As DataColumn
            Get
                Return Me.columnI_CJOR
            End Get
        End Property
        
        Friend ReadOnly Property I_XCALColumn As DataColumn
            Get
                Return Me.columnI_XCAL
            End Get
        End Property
        
        Friend ReadOnly Property I_CINDFDIColumn As DataColumn
            Get
                Return Me.columnI_CINDFDI
            End Get
        End Property
        
        Friend ReadOnly Property I_XCAURETColumn As DataColumn
            Get
                Return Me.columnI_XCAURET
            End Get
        End Property
        
        Friend ReadOnly Property I_TRANSARColumn As DataColumn
            Get
                Return Me.columnI_TRANSAR
            End Get
        End Property
        
        Friend ReadOnly Property MESSAGEColumn As DataColumn
            Get
                Return Me.columnMESSAGE
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As AFE23Row
            Get
                Return CType(Me.Rows(index),AFE23Row)
            End Get
        End Property
        
        Public Event AFE23RowChanged As AFE23RowChangeEventHandler
        
        Public Event AFE23RowChanging As AFE23RowChangeEventHandler
        
        Public Event AFE23RowDeleted As AFE23RowChangeEventHandler
        
        Public Event AFE23RowDeleting As AFE23RowChangeEventHandler
        
        Public Overloads Sub AddAFE23Row(ByVal row As AFE23Row)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddAFE23Row( _
                    ByVal I_MAINT As String,  _
                    ByVal I_CCAM As String,  _
                    ByVal I_FCOM As String,  _
                    ByVal I_CCAU As String,  _
                    ByVal I_XISP As String,  _
                    ByVal I_NIDETRA As String,  _
                    ByVal I_TIDETRA As String,  _
                    ByVal I_NIDEBEN As String,  _
                    ByVal I_TIDEBEN As String,  _
                    ByVal I_XPRIAPEB As String,  _
                    ByVal I_XSEGAPEB As String,  _
                    ByVal I_XNOMBENE As String,  _
                    ByVal I_TDOCBEN As String,  _
                    ByVal I_CTIPNUI As String,  _
                    ByVal I_NDOCBEN As String,  _
                    ByVal I_XSEX As String,  _
                    ByVal I_CPRN As String,  _
                    ByVal I_CTIPPAR As String,  _
                    ByVal I_CNIVSAN As String,  _
                    ByVal I_FNACBEN As String,  _
                    ByVal I_EDAT As String,  _
                    ByVal I_NDIRCOR As String,  _
                    ByVal I_CINDDIS As String,  _
                    ByVal I_XTIPDIS As String,  _
                    ByVal I_CDISPER As String,  _
                    ByVal I_CPAGUPC As String,  _
                    ByVal I_CESTSUB As String,  _
                    ByVal I_NCAR As String,  _
                    ByVal I_CNUC As String,  _
                    ByVal I_CCIU As String,  _
                    ByVal I_NANTSIS As String,  _
                    ByVal I_CEPSANT As String,  _
                    ByVal I_CEPSCON As String,  _
                    ByVal I_CEPSACT As String,  _
                    ByVal I_FAFISSS As String,  _
                    ByVal I_CAFIBEN As String,  _
                    ByVal I_CCAMCNF As String,  _
                    ByVal AT_SIGN As String,  _
                    ByVal I_XNOMAPL As String,  _
                    ByVal I_XNOMPAN As String,  _
                    ByVal I_XPRIAPE As String,  _
                    ByVal I_XSEGAPE As String,  _
                    ByVal I_XNOMBRE As String,  _
                    ByVal I_TIDEEMP As String,  _
                    ByVal I_NIDEEMP As String,  _
                    ByVal I_CDEP As String,  _
                    ByVal I_XEMP As String,  _
                    ByVal I_CCATTRA As String,  _
                    ByVal I_CESTTRA As String,  _
                    ByVal I_XCAJTRA As String,  _
                    ByVal I_FCAJTRA As String,  _
                    ByVal I_QCYGCAJ As String,  _
                    ByVal I_QHIJCAJ As String,  _
                    ByVal I_QPADCAJ As String,  _
                    ByVal I_QOTRCAJ As String,  _
                    ByVal I_XPOSTRA As String,  _
                    ByVal I_FPOSTRA As String,  _
                    ByVal I_QCYGPOS As String,  _
                    ByVal I_QHIJPOS As String,  _
                    ByVal I_QPADPOS As String,  _
                    ByVal I_QOTRPOS As String,  _
                    ByVal I_FCAJRET As String,  _
                    ByVal I_FPOSRET As String,  _
                    ByVal I_XREQ001 As String,  _
                    ByVal I_XREQ002 As String,  _
                    ByVal I_XREQ003 As String,  _
                    ByVal I_CCAUNEG As String,  _
                    ByVal I_XESTCAJ As String,  _
                    ByVal I_FINGCAJ As String,  _
                    ByVal I_FRETCAJ As String,  _
                    ByVal I_XCARCA As String,  _
                    ByVal I_FCARCAJ As String,  _
                    ByVal I_XREQB01 As String,  _
                    ByVal I_FINI001 As String,  _
                    ByVal I_FFIN001 As String,  _
                    ByVal I_FPRO001 As String,  _
                    ByVal I_XESTPOS As String,  _
                    ByVal I_FINGPOS As String,  _
                    ByVal I_FRETPOS As String,  _
                    ByVal I_XCARPOS As String,  _
                    ByVal I_FCARPOS As String,  _
                    ByVal I_XREQB02 As String,  _
                    ByVal I_FINI002 As String,  _
                    ByVal I_FFIN002 As String,  _
                    ByVal I_FPRO002 As String,  _
                    ByVal I_XESTPCO As String,  _
                    ByVal I_FINGPCO As String,  _
                    ByVal I_FRETPCO As String,  _
                    ByVal I_XCARPC As String,  _
                    ByVal I_FCARPCO As String,  _
                    ByVal I_XREQBAS As String,  _
                    ByVal I_FINIBAS As String,  _
                    ByVal I_FFINBAS As String,  _
                    ByVal I_FPROBAS As String,  _
                    ByVal I_CCAT As String,  _
                    ByVal I_CESTSOC As String,  _
                    ByVal I_CCOT As String,  _
                    ByVal I_FULTNOV As String,  _
                    ByVal I_FPRISUB As String,  _
                    ByVal I_FULTSUB As String,  _
                    ByVal I_CNIV As String,  _
                    ByVal I_NCUR As String,  _
                    ByVal I_NHOREST As String,  _
                    ByVal I_CJOR As String,  _
                    ByVal I_XCAL As String,  _
                    ByVal I_CINDFDI As String,  _
                    ByVal I_XCAURET As String,  _
                    ByVal I_TRANSAR As String,  _
                    ByVal MESSAGE As String) As AFE23Row
            Dim rowAFE23Row As AFE23Row = CType(Me.NewRow,AFE23Row)
            rowAFE23Row.ItemArray = New Object() {I_MAINT, I_CCAM, I_FCOM, I_CCAU, I_XISP, I_NIDETRA, I_TIDETRA, I_NIDEBEN, I_TIDEBEN, I_XPRIAPEB, I_XSEGAPEB, I_XNOMBENE, I_TDOCBEN, I_CTIPNUI, I_NDOCBEN, I_XSEX, I_CPRN, I_CTIPPAR, I_CNIVSAN, I_FNACBEN, I_EDAT, I_NDIRCOR, I_CINDDIS, I_XTIPDIS, I_CDISPER, I_CPAGUPC, I_CESTSUB, I_NCAR, I_CNUC, I_CCIU, I_NANTSIS, I_CEPSANT, I_CEPSCON, I_CEPSACT, I_FAFISSS, I_CAFIBEN, I_CCAMCNF, AT_SIGN, I_XNOMAPL, I_XNOMPAN, I_XPRIAPE, I_XSEGAPE, I_XNOMBRE, I_TIDEEMP, I_NIDEEMP, I_CDEP, I_XEMP, I_CCATTRA, I_CESTTRA, I_XCAJTRA, I_FCAJTRA, I_QCYGCAJ, I_QHIJCAJ, I_QPADCAJ, I_QOTRCAJ, I_XPOSTRA, I_FPOSTRA, I_QCYGPOS, I_QHIJPOS, I_QPADPOS, I_QOTRPOS, I_FCAJRET, I_FPOSRET, I_XREQ001, I_XREQ002, I_XREQ003, I_CCAUNEG, I_XESTCAJ, I_FINGCAJ, I_FRETCAJ, I_XCARCA, I_FCARCAJ, I_XREQB01, I_FINI001, I_FFIN001, I_FPRO001, I_XESTPOS, I_FINGPOS, I_FRETPOS, I_XCARPOS, I_FCARPOS, I_XREQB02, I_FINI002, I_FFIN002, I_FPRO002, I_XESTPCO, I_FINGPCO, I_FRETPCO, I_XCARPC, I_FCARPCO, I_XREQBAS, I_FINIBAS, I_FFINBAS, I_FPROBAS, I_CCAT, I_CESTSOC, I_CCOT, I_FULTNOV, I_FPRISUB, I_FULTSUB, I_CNIV, I_NCUR, I_NHOREST, I_CJOR, I_XCAL, I_CINDFDI, I_XCAURET, I_TRANSAR, MESSAGE}
            Me.Rows.Add(rowAFE23Row)
            Return rowAFE23Row
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As AFE23DataTable = CType(MyBase.Clone,AFE23DataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New AFE23DataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnI_MAINT = Me.Columns("I_MAINT")
            Me.columnI_CCAM = Me.Columns("I_CCAM")
            Me.columnI_FCOM = Me.Columns("I_FCOM")
            Me.columnI_CCAU = Me.Columns("I_CCAU")
            Me.columnI_XISP = Me.Columns("I_XISP")
            Me.columnI_NIDETRA = Me.Columns("I_NIDETRA")
            Me.columnI_TIDETRA = Me.Columns("I_TIDETRA")
            Me.columnI_NIDEBEN = Me.Columns("I_NIDEBEN")
            Me.columnI_TIDEBEN = Me.Columns("I_TIDEBEN")
            Me.columnI_XPRIAPEB = Me.Columns("I_XPRIAPEB")
            Me.columnI_XSEGAPEB = Me.Columns("I_XSEGAPEB")
            Me.columnI_XNOMBENE = Me.Columns("I_XNOMBENE")
            Me.columnI_TDOCBEN = Me.Columns("I_TDOCBEN")
            Me.columnI_CTIPNUI = Me.Columns("I_CTIPNUI")
            Me.columnI_NDOCBEN = Me.Columns("I_NDOCBEN")
            Me.columnI_XSEX = Me.Columns("I_XSEX")
            Me.columnI_CPRN = Me.Columns("I_CPRN")
            Me.columnI_CTIPPAR = Me.Columns("I_CTIPPAR")
            Me.columnI_CNIVSAN = Me.Columns("I_CNIVSAN")
            Me.columnI_FNACBEN = Me.Columns("I_FNACBEN")
            Me.columnI_EDAT = Me.Columns("I_EDAT")
            Me.columnI_NDIRCOR = Me.Columns("I_NDIRCOR")
            Me.columnI_CINDDIS = Me.Columns("I_CINDDIS")
            Me.columnI_XTIPDIS = Me.Columns("I_XTIPDIS")
            Me.columnI_CDISPER = Me.Columns("I_CDISPER")
            Me.columnI_CPAGUPC = Me.Columns("I_CPAGUPC")
            Me.columnI_CESTSUB = Me.Columns("I_CESTSUB")
            Me.columnI_NCAR = Me.Columns("I_NCAR")
            Me.columnI_CNUC = Me.Columns("I_CNUC")
            Me.columnI_CCIU = Me.Columns("I_CCIU")
            Me.columnI_NANTSIS = Me.Columns("I_NANTSIS")
            Me.columnI_CEPSANT = Me.Columns("I_CEPSANT")
            Me.columnI_CEPSCON = Me.Columns("I_CEPSCON")
            Me.columnI_CEPSACT = Me.Columns("I_CEPSACT")
            Me.columnI_FAFISSS = Me.Columns("I_FAFISSS")
            Me.columnI_CAFIBEN = Me.Columns("I_CAFIBEN")
            Me.columnI_CCAMCNF = Me.Columns("I_CCAMCNF")
            Me.columnAT_SIGN = Me.Columns("AT_SIGN")
            Me.columnI_XNOMAPL = Me.Columns("I_XNOMAPL")
            Me.columnI_XNOMPAN = Me.Columns("I_XNOMPAN")
            Me.columnI_XPRIAPE = Me.Columns("I_XPRIAPE")
            Me.columnI_XSEGAPE = Me.Columns("I_XSEGAPE")
            Me.columnI_XNOMBRE = Me.Columns("I_XNOMBRE")
            Me.columnI_TIDEEMP = Me.Columns("I_TIDEEMP")
            Me.columnI_NIDEEMP = Me.Columns("I_NIDEEMP")
            Me.columnI_CDEP = Me.Columns("I_CDEP")
            Me.columnI_XEMP = Me.Columns("I_XEMP")
            Me.columnI_CCATTRA = Me.Columns("I_CCATTRA")
            Me.columnI_CESTTRA = Me.Columns("I_CESTTRA")
            Me.columnI_XCAJTRA = Me.Columns("I_XCAJTRA")
            Me.columnI_FCAJTRA = Me.Columns("I_FCAJTRA")
            Me.columnI_QCYGCAJ = Me.Columns("I_QCYGCAJ")
            Me.columnI_QHIJCAJ = Me.Columns("I_QHIJCAJ")
            Me.columnI_QPADCAJ = Me.Columns("I_QPADCAJ")
            Me.columnI_QOTRCAJ = Me.Columns("I_QOTRCAJ")
            Me.columnI_XPOSTRA = Me.Columns("I_XPOSTRA")
            Me.columnI_FPOSTRA = Me.Columns("I_FPOSTRA")
            Me.columnI_QCYGPOS = Me.Columns("I_QCYGPOS")
            Me.columnI_QHIJPOS = Me.Columns("I_QHIJPOS")
            Me.columnI_QPADPOS = Me.Columns("I_QPADPOS")
            Me.columnI_QOTRPOS = Me.Columns("I_QOTRPOS")
            Me.columnI_FCAJRET = Me.Columns("I_FCAJRET")
            Me.columnI_FPOSRET = Me.Columns("I_FPOSRET")
            Me.columnI_XREQ001 = Me.Columns("I_XREQ001")
            Me.columnI_XREQ002 = Me.Columns("I_XREQ002")
            Me.columnI_XREQ003 = Me.Columns("I_XREQ003")
            Me.columnI_CCAUNEG = Me.Columns("I_CCAUNEG")
            Me.columnI_XESTCAJ = Me.Columns("I_XESTCAJ")
            Me.columnI_FINGCAJ = Me.Columns("I_FINGCAJ")
            Me.columnI_FRETCAJ = Me.Columns("I_FRETCAJ")
            Me.columnI_XCARCA = Me.Columns("I_XCARCA")
            Me.columnI_FCARCAJ = Me.Columns("I_FCARCAJ")
            Me.columnI_XREQB01 = Me.Columns("I_XREQB01")
            Me.columnI_FINI001 = Me.Columns("I_FINI001")
            Me.columnI_FFIN001 = Me.Columns("I_FFIN001")
            Me.columnI_FPRO001 = Me.Columns("I_FPRO001")
            Me.columnI_XESTPOS = Me.Columns("I_XESTPOS")
            Me.columnI_FINGPOS = Me.Columns("I_FINGPOS")
            Me.columnI_FRETPOS = Me.Columns("I_FRETPOS")
            Me.columnI_XCARPOS = Me.Columns("I_XCARPOS")
            Me.columnI_FCARPOS = Me.Columns("I_FCARPOS")
            Me.columnI_XREQB02 = Me.Columns("I_XREQB02")
            Me.columnI_FINI002 = Me.Columns("I_FINI002")
            Me.columnI_FFIN002 = Me.Columns("I_FFIN002")
            Me.columnI_FPRO002 = Me.Columns("I_FPRO002")
            Me.columnI_XESTPCO = Me.Columns("I_XESTPCO")
            Me.columnI_FINGPCO = Me.Columns("I_FINGPCO")
            Me.columnI_FRETPCO = Me.Columns("I_FRETPCO")
            Me.columnI_XCARPC = Me.Columns("I_XCARPC")
            Me.columnI_FCARPCO = Me.Columns("I_FCARPCO")
            Me.columnI_XREQBAS = Me.Columns("I_XREQBAS")
            Me.columnI_FINIBAS = Me.Columns("I_FINIBAS")
            Me.columnI_FFINBAS = Me.Columns("I_FFINBAS")
            Me.columnI_FPROBAS = Me.Columns("I_FPROBAS")
            Me.columnI_CCAT = Me.Columns("I_CCAT")
            Me.columnI_CESTSOC = Me.Columns("I_CESTSOC")
            Me.columnI_CCOT = Me.Columns("I_CCOT")
            Me.columnI_FULTNOV = Me.Columns("I_FULTNOV")
            Me.columnI_FPRISUB = Me.Columns("I_FPRISUB")
            Me.columnI_FULTSUB = Me.Columns("I_FULTSUB")
            Me.columnI_CNIV = Me.Columns("I_CNIV")
            Me.columnI_NCUR = Me.Columns("I_NCUR")
            Me.columnI_NHOREST = Me.Columns("I_NHOREST")
            Me.columnI_CJOR = Me.Columns("I_CJOR")
            Me.columnI_XCAL = Me.Columns("I_XCAL")
            Me.columnI_CINDFDI = Me.Columns("I_CINDFDI")
            Me.columnI_XCAURET = Me.Columns("I_XCAURET")
            Me.columnI_TRANSAR = Me.Columns("I_TRANSAR")
            Me.columnMESSAGE = Me.Columns("MESSAGE")
        End Sub
        
        Private Sub InitClass()
            Me.columnI_MAINT = New DataColumn("I_MAINT", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_MAINT)
            Me.columnI_CCAM = New DataColumn("I_CCAM", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CCAM)
            Me.columnI_FCOM = New DataColumn("I_FCOM", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FCOM)
            Me.columnI_CCAU = New DataColumn("I_CCAU", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CCAU)
            Me.columnI_XISP = New DataColumn("I_XISP", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XISP)
            Me.columnI_NIDETRA = New DataColumn("I_NIDETRA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_NIDETRA)
            Me.columnI_TIDETRA = New DataColumn("I_TIDETRA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_TIDETRA)
            Me.columnI_NIDEBEN = New DataColumn("I_NIDEBEN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_NIDEBEN)
            Me.columnI_TIDEBEN = New DataColumn("I_TIDEBEN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_TIDEBEN)
            Me.columnI_XPRIAPEB = New DataColumn("I_XPRIAPEB", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XPRIAPEB)
            Me.columnI_XSEGAPEB = New DataColumn("I_XSEGAPEB", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XSEGAPEB)
            Me.columnI_XNOMBENE = New DataColumn("I_XNOMBENE", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XNOMBENE)
            Me.columnI_TDOCBEN = New DataColumn("I_TDOCBEN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_TDOCBEN)
            Me.columnI_CTIPNUI = New DataColumn("I_CTIPNUI", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CTIPNUI)
            Me.columnI_NDOCBEN = New DataColumn("I_NDOCBEN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_NDOCBEN)
            Me.columnI_XSEX = New DataColumn("I_XSEX", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XSEX)
            Me.columnI_CPRN = New DataColumn("I_CPRN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CPRN)
            Me.columnI_CTIPPAR = New DataColumn("I_CTIPPAR", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CTIPPAR)
            Me.columnI_CNIVSAN = New DataColumn("I_CNIVSAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CNIVSAN)
            Me.columnI_FNACBEN = New DataColumn("I_FNACBEN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FNACBEN)
            Me.columnI_EDAT = New DataColumn("I_EDAT", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_EDAT)
            Me.columnI_NDIRCOR = New DataColumn("I_NDIRCOR", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_NDIRCOR)
            Me.columnI_CINDDIS = New DataColumn("I_CINDDIS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CINDDIS)
            Me.columnI_XTIPDIS = New DataColumn("I_XTIPDIS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XTIPDIS)
            Me.columnI_CDISPER = New DataColumn("I_CDISPER", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CDISPER)
            Me.columnI_CPAGUPC = New DataColumn("I_CPAGUPC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CPAGUPC)
            Me.columnI_CESTSUB = New DataColumn("I_CESTSUB", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CESTSUB)
            Me.columnI_NCAR = New DataColumn("I_NCAR", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_NCAR)
            Me.columnI_CNUC = New DataColumn("I_CNUC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CNUC)
            Me.columnI_CCIU = New DataColumn("I_CCIU", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CCIU)
            Me.columnI_NANTSIS = New DataColumn("I_NANTSIS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_NANTSIS)
            Me.columnI_CEPSANT = New DataColumn("I_CEPSANT", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CEPSANT)
            Me.columnI_CEPSCON = New DataColumn("I_CEPSCON", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CEPSCON)
            Me.columnI_CEPSACT = New DataColumn("I_CEPSACT", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CEPSACT)
            Me.columnI_FAFISSS = New DataColumn("I_FAFISSS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FAFISSS)
            Me.columnI_CAFIBEN = New DataColumn("I_CAFIBEN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CAFIBEN)
            Me.columnI_CCAMCNF = New DataColumn("I_CCAMCNF", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CCAMCNF)
            Me.columnAT_SIGN = New DataColumn("AT_SIGN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnAT_SIGN)
            Me.columnI_XNOMAPL = New DataColumn("I_XNOMAPL", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XNOMAPL)
            Me.columnI_XNOMPAN = New DataColumn("I_XNOMPAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XNOMPAN)
            Me.columnI_XPRIAPE = New DataColumn("I_XPRIAPE", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XPRIAPE)
            Me.columnI_XSEGAPE = New DataColumn("I_XSEGAPE", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XSEGAPE)
            Me.columnI_XNOMBRE = New DataColumn("I_XNOMBRE", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XNOMBRE)
            Me.columnI_TIDEEMP = New DataColumn("I_TIDEEMP", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_TIDEEMP)
            Me.columnI_NIDEEMP = New DataColumn("I_NIDEEMP", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_NIDEEMP)
            Me.columnI_CDEP = New DataColumn("I_CDEP", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CDEP)
            Me.columnI_XEMP = New DataColumn("I_XEMP", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XEMP)
            Me.columnI_CCATTRA = New DataColumn("I_CCATTRA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CCATTRA)
            Me.columnI_CESTTRA = New DataColumn("I_CESTTRA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CESTTRA)
            Me.columnI_XCAJTRA = New DataColumn("I_XCAJTRA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XCAJTRA)
            Me.columnI_FCAJTRA = New DataColumn("I_FCAJTRA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FCAJTRA)
            Me.columnI_QCYGCAJ = New DataColumn("I_QCYGCAJ", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_QCYGCAJ)
            Me.columnI_QHIJCAJ = New DataColumn("I_QHIJCAJ", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_QHIJCAJ)
            Me.columnI_QPADCAJ = New DataColumn("I_QPADCAJ", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_QPADCAJ)
            Me.columnI_QOTRCAJ = New DataColumn("I_QOTRCAJ", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_QOTRCAJ)
            Me.columnI_XPOSTRA = New DataColumn("I_XPOSTRA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XPOSTRA)
            Me.columnI_FPOSTRA = New DataColumn("I_FPOSTRA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FPOSTRA)
            Me.columnI_QCYGPOS = New DataColumn("I_QCYGPOS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_QCYGPOS)
            Me.columnI_QHIJPOS = New DataColumn("I_QHIJPOS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_QHIJPOS)
            Me.columnI_QPADPOS = New DataColumn("I_QPADPOS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_QPADPOS)
            Me.columnI_QOTRPOS = New DataColumn("I_QOTRPOS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_QOTRPOS)
            Me.columnI_FCAJRET = New DataColumn("I_FCAJRET", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FCAJRET)
            Me.columnI_FPOSRET = New DataColumn("I_FPOSRET", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FPOSRET)
            Me.columnI_XREQ001 = New DataColumn("I_XREQ001", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XREQ001)
            Me.columnI_XREQ002 = New DataColumn("I_XREQ002", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XREQ002)
            Me.columnI_XREQ003 = New DataColumn("I_XREQ003", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XREQ003)
            Me.columnI_CCAUNEG = New DataColumn("I_CCAUNEG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CCAUNEG)
            Me.columnI_XESTCAJ = New DataColumn("I_XESTCAJ", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XESTCAJ)
            Me.columnI_FINGCAJ = New DataColumn("I_FINGCAJ", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FINGCAJ)
            Me.columnI_FRETCAJ = New DataColumn("I_FRETCAJ", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FRETCAJ)
            Me.columnI_XCARCA = New DataColumn("I_XCARCA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XCARCA)
            Me.columnI_FCARCAJ = New DataColumn("I_FCARCAJ", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FCARCAJ)
            Me.columnI_XREQB01 = New DataColumn("I_XREQB01", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XREQB01)
            Me.columnI_FINI001 = New DataColumn("I_FINI001", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FINI001)
            Me.columnI_FFIN001 = New DataColumn("I_FFIN001", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FFIN001)
            Me.columnI_FPRO001 = New DataColumn("I_FPRO001", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FPRO001)
            Me.columnI_XESTPOS = New DataColumn("I_XESTPOS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XESTPOS)
            Me.columnI_FINGPOS = New DataColumn("I_FINGPOS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FINGPOS)
            Me.columnI_FRETPOS = New DataColumn("I_FRETPOS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FRETPOS)
            Me.columnI_XCARPOS = New DataColumn("I_XCARPOS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XCARPOS)
            Me.columnI_FCARPOS = New DataColumn("I_FCARPOS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FCARPOS)
            Me.columnI_XREQB02 = New DataColumn("I_XREQB02", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XREQB02)
            Me.columnI_FINI002 = New DataColumn("I_FINI002", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FINI002)
            Me.columnI_FFIN002 = New DataColumn("I_FFIN002", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FFIN002)
            Me.columnI_FPRO002 = New DataColumn("I_FPRO002", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FPRO002)
            Me.columnI_XESTPCO = New DataColumn("I_XESTPCO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XESTPCO)
            Me.columnI_FINGPCO = New DataColumn("I_FINGPCO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FINGPCO)
            Me.columnI_FRETPCO = New DataColumn("I_FRETPCO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FRETPCO)
            Me.columnI_XCARPC = New DataColumn("I_XCARPC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XCARPC)
            Me.columnI_FCARPCO = New DataColumn("I_FCARPCO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FCARPCO)
            Me.columnI_XREQBAS = New DataColumn("I_XREQBAS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XREQBAS)
            Me.columnI_FINIBAS = New DataColumn("I_FINIBAS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FINIBAS)
            Me.columnI_FFINBAS = New DataColumn("I_FFINBAS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FFINBAS)
            Me.columnI_FPROBAS = New DataColumn("I_FPROBAS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FPROBAS)
            Me.columnI_CCAT = New DataColumn("I_CCAT", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CCAT)
            Me.columnI_CESTSOC = New DataColumn("I_CESTSOC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CESTSOC)
            Me.columnI_CCOT = New DataColumn("I_CCOT", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CCOT)
            Me.columnI_FULTNOV = New DataColumn("I_FULTNOV", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FULTNOV)
            Me.columnI_FPRISUB = New DataColumn("I_FPRISUB", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FPRISUB)
            Me.columnI_FULTSUB = New DataColumn("I_FULTSUB", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_FULTSUB)
            Me.columnI_CNIV = New DataColumn("I_CNIV", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CNIV)
            Me.columnI_NCUR = New DataColumn("I_NCUR", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_NCUR)
            Me.columnI_NHOREST = New DataColumn("I_NHOREST", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_NHOREST)
            Me.columnI_CJOR = New DataColumn("I_CJOR", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CJOR)
            Me.columnI_XCAL = New DataColumn("I_XCAL", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XCAL)
            Me.columnI_CINDFDI = New DataColumn("I_CINDFDI", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_CINDFDI)
            Me.columnI_XCAURET = New DataColumn("I_XCAURET", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_XCAURET)
            Me.columnI_TRANSAR = New DataColumn("I_TRANSAR", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnI_TRANSAR)
            Me.columnMESSAGE = New DataColumn("MESSAGE", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMESSAGE)
            Me.columnI_TRANSAR.DefaultValue = "1"
        End Sub
        
        Public Function NewAFE23Row() As AFE23Row
            Return CType(Me.NewRow,AFE23Row)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New AFE23Row(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(AFE23Row)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.AFE23RowChangedEvent) Is Nothing) Then
                RaiseEvent AFE23RowChanged(Me, New AFE23RowChangeEvent(CType(e.Row,AFE23Row), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.AFE23RowChangingEvent) Is Nothing) Then
                RaiseEvent AFE23RowChanging(Me, New AFE23RowChangeEvent(CType(e.Row,AFE23Row), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.AFE23RowDeletedEvent) Is Nothing) Then
                RaiseEvent AFE23RowDeleted(Me, New AFE23RowChangeEvent(CType(e.Row,AFE23Row), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.AFE23RowDeletingEvent) Is Nothing) Then
                RaiseEvent AFE23RowDeleting(Me, New AFE23RowChangeEvent(CType(e.Row,AFE23Row), e.Action))
            End If
        End Sub
        
        Public Sub RemoveAFE23Row(ByVal row As AFE23Row)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class AFE23Row
        Inherits DataRow
        
        Private tableAFE23 As AFE23DataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableAFE23 = CType(Me.Table,AFE23DataTable)
        End Sub
        
        Public Property I_MAINT As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_MAINTColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_MAINTColumn) = value
            End Set
        End Property
        
        Public Property I_CCAM As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CCAMColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CCAMColumn) = value
            End Set
        End Property
        
        Public Property I_FCOM As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FCOMColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FCOMColumn) = value
            End Set
        End Property
        
        Public Property I_CCAU As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CCAUColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CCAUColumn) = value
            End Set
        End Property
        
        Public Property I_XISP As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XISPColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XISPColumn) = value
            End Set
        End Property
        
        Public Property I_NIDETRA As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_NIDETRAColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_NIDETRAColumn) = value
            End Set
        End Property
        
        Public Property I_TIDETRA As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_TIDETRAColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_TIDETRAColumn) = value
            End Set
        End Property
        
        Public Property I_NIDEBEN As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_NIDEBENColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_NIDEBENColumn) = value
            End Set
        End Property
        
        Public Property I_TIDEBEN As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_TIDEBENColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_TIDEBENColumn) = value
            End Set
        End Property
        
        Public Property I_XPRIAPEB As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XPRIAPEBColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XPRIAPEBColumn) = value
            End Set
        End Property
        
        Public Property I_XSEGAPEB As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XSEGAPEBColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XSEGAPEBColumn) = value
            End Set
        End Property
        
        Public Property I_XNOMBENE As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XNOMBENEColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XNOMBENEColumn) = value
            End Set
        End Property
        
        Public Property I_TDOCBEN As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_TDOCBENColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_TDOCBENColumn) = value
            End Set
        End Property
        
        Public Property I_CTIPNUI As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CTIPNUIColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CTIPNUIColumn) = value
            End Set
        End Property
        
        Public Property I_NDOCBEN As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_NDOCBENColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_NDOCBENColumn) = value
            End Set
        End Property
        
        Public Property I_XSEX As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XSEXColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XSEXColumn) = value
            End Set
        End Property
        
        Public Property I_CPRN As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CPRNColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CPRNColumn) = value
            End Set
        End Property
        
        Public Property I_CTIPPAR As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CTIPPARColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CTIPPARColumn) = value
            End Set
        End Property
        
        Public Property I_CNIVSAN As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CNIVSANColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CNIVSANColumn) = value
            End Set
        End Property
        
        Public Property I_FNACBEN As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FNACBENColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FNACBENColumn) = value
            End Set
        End Property
        
        Public Property I_EDAT As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_EDATColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_EDATColumn) = value
            End Set
        End Property
        
        Public Property I_NDIRCOR As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_NDIRCORColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_NDIRCORColumn) = value
            End Set
        End Property
        
        Public Property I_CINDDIS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CINDDISColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CINDDISColumn) = value
            End Set
        End Property
        
        Public Property I_XTIPDIS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XTIPDISColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XTIPDISColumn) = value
            End Set
        End Property
        
        Public Property I_CDISPER As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CDISPERColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CDISPERColumn) = value
            End Set
        End Property
        
        Public Property I_CPAGUPC As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CPAGUPCColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CPAGUPCColumn) = value
            End Set
        End Property
        
        Public Property I_CESTSUB As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CESTSUBColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CESTSUBColumn) = value
            End Set
        End Property
        
        Public Property I_NCAR As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_NCARColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_NCARColumn) = value
            End Set
        End Property
        
        Public Property I_CNUC As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CNUCColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CNUCColumn) = value
            End Set
        End Property
        
        Public Property I_CCIU As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CCIUColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CCIUColumn) = value
            End Set
        End Property
        
        Public Property I_NANTSIS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_NANTSISColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_NANTSISColumn) = value
            End Set
        End Property
        
        Public Property I_CEPSANT As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CEPSANTColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CEPSANTColumn) = value
            End Set
        End Property
        
        Public Property I_CEPSCON As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CEPSCONColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CEPSCONColumn) = value
            End Set
        End Property
        
        Public Property I_CEPSACT As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CEPSACTColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CEPSACTColumn) = value
            End Set
        End Property
        
        Public Property I_FAFISSS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FAFISSSColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FAFISSSColumn) = value
            End Set
        End Property
        
        Public Property I_CAFIBEN As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CAFIBENColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CAFIBENColumn) = value
            End Set
        End Property
        
        Public Property I_CCAMCNF As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CCAMCNFColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CCAMCNFColumn) = value
            End Set
        End Property
        
        Public Property AT_SIGN As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.AT_SIGNColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.AT_SIGNColumn) = value
            End Set
        End Property
        
        Public Property I_XNOMAPL As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XNOMAPLColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XNOMAPLColumn) = value
            End Set
        End Property
        
        Public Property I_XNOMPAN As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XNOMPANColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XNOMPANColumn) = value
            End Set
        End Property
        
        Public Property I_XPRIAPE As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XPRIAPEColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XPRIAPEColumn) = value
            End Set
        End Property
        
        Public Property I_XSEGAPE As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XSEGAPEColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XSEGAPEColumn) = value
            End Set
        End Property
        
        Public Property I_XNOMBRE As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XNOMBREColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XNOMBREColumn) = value
            End Set
        End Property
        
        Public Property I_TIDEEMP As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_TIDEEMPColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_TIDEEMPColumn) = value
            End Set
        End Property
        
        Public Property I_NIDEEMP As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_NIDEEMPColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_NIDEEMPColumn) = value
            End Set
        End Property
        
        Public Property I_CDEP As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CDEPColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CDEPColumn) = value
            End Set
        End Property
        
        Public Property I_XEMP As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XEMPColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XEMPColumn) = value
            End Set
        End Property
        
        Public Property I_CCATTRA As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CCATTRAColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CCATTRAColumn) = value
            End Set
        End Property
        
        Public Property I_CESTTRA As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CESTTRAColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CESTTRAColumn) = value
            End Set
        End Property
        
        Public Property I_XCAJTRA As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XCAJTRAColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XCAJTRAColumn) = value
            End Set
        End Property
        
        Public Property I_FCAJTRA As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FCAJTRAColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FCAJTRAColumn) = value
            End Set
        End Property
        
        Public Property I_QCYGCAJ As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_QCYGCAJColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_QCYGCAJColumn) = value
            End Set
        End Property
        
        Public Property I_QHIJCAJ As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_QHIJCAJColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_QHIJCAJColumn) = value
            End Set
        End Property
        
        Public Property I_QPADCAJ As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_QPADCAJColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_QPADCAJColumn) = value
            End Set
        End Property
        
        Public Property I_QOTRCAJ As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_QOTRCAJColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_QOTRCAJColumn) = value
            End Set
        End Property
        
        Public Property I_XPOSTRA As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XPOSTRAColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XPOSTRAColumn) = value
            End Set
        End Property
        
        Public Property I_FPOSTRA As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FPOSTRAColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FPOSTRAColumn) = value
            End Set
        End Property
        
        Public Property I_QCYGPOS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_QCYGPOSColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_QCYGPOSColumn) = value
            End Set
        End Property
        
        Public Property I_QHIJPOS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_QHIJPOSColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_QHIJPOSColumn) = value
            End Set
        End Property
        
        Public Property I_QPADPOS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_QPADPOSColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_QPADPOSColumn) = value
            End Set
        End Property
        
        Public Property I_QOTRPOS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_QOTRPOSColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_QOTRPOSColumn) = value
            End Set
        End Property
        
        Public Property I_FCAJRET As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FCAJRETColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FCAJRETColumn) = value
            End Set
        End Property
        
        Public Property I_FPOSRET As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FPOSRETColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FPOSRETColumn) = value
            End Set
        End Property
        
        Public Property I_XREQ001 As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XREQ001Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XREQ001Column) = value
            End Set
        End Property
        
        Public Property I_XREQ002 As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XREQ002Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XREQ002Column) = value
            End Set
        End Property
        
        Public Property I_XREQ003 As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XREQ003Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XREQ003Column) = value
            End Set
        End Property
        
        Public Property I_CCAUNEG As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CCAUNEGColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CCAUNEGColumn) = value
            End Set
        End Property
        
        Public Property I_XESTCAJ As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XESTCAJColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XESTCAJColumn) = value
            End Set
        End Property
        
        Public Property I_FINGCAJ As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FINGCAJColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FINGCAJColumn) = value
            End Set
        End Property
        
        Public Property I_FRETCAJ As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FRETCAJColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FRETCAJColumn) = value
            End Set
        End Property
        
        Public Property I_XCARCA As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XCARCAColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XCARCAColumn) = value
            End Set
        End Property
        
        Public Property I_FCARCAJ As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FCARCAJColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FCARCAJColumn) = value
            End Set
        End Property
        
        Public Property I_XREQB01 As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XREQB01Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XREQB01Column) = value
            End Set
        End Property
        
        Public Property I_FINI001 As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FINI001Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FINI001Column) = value
            End Set
        End Property
        
        Public Property I_FFIN001 As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FFIN001Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FFIN001Column) = value
            End Set
        End Property
        
        Public Property I_FPRO001 As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FPRO001Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FPRO001Column) = value
            End Set
        End Property
        
        Public Property I_XESTPOS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XESTPOSColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XESTPOSColumn) = value
            End Set
        End Property
        
        Public Property I_FINGPOS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FINGPOSColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FINGPOSColumn) = value
            End Set
        End Property
        
        Public Property I_FRETPOS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FRETPOSColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FRETPOSColumn) = value
            End Set
        End Property
        
        Public Property I_XCARPOS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XCARPOSColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XCARPOSColumn) = value
            End Set
        End Property
        
        Public Property I_FCARPOS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FCARPOSColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FCARPOSColumn) = value
            End Set
        End Property
        
        Public Property I_XREQB02 As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XREQB02Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XREQB02Column) = value
            End Set
        End Property
        
        Public Property I_FINI002 As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FINI002Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FINI002Column) = value
            End Set
        End Property
        
        Public Property I_FFIN002 As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FFIN002Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FFIN002Column) = value
            End Set
        End Property
        
        Public Property I_FPRO002 As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FPRO002Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FPRO002Column) = value
            End Set
        End Property
        
        Public Property I_XESTPCO As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XESTPCOColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XESTPCOColumn) = value
            End Set
        End Property
        
        Public Property I_FINGPCO As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FINGPCOColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FINGPCOColumn) = value
            End Set
        End Property
        
        Public Property I_FRETPCO As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FRETPCOColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FRETPCOColumn) = value
            End Set
        End Property
        
        Public Property I_XCARPC As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XCARPCColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XCARPCColumn) = value
            End Set
        End Property
        
        Public Property I_FCARPCO As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FCARPCOColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FCARPCOColumn) = value
            End Set
        End Property
        
        Public Property I_XREQBAS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XREQBASColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XREQBASColumn) = value
            End Set
        End Property
        
        Public Property I_FINIBAS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FINIBASColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FINIBASColumn) = value
            End Set
        End Property
        
        Public Property I_FFINBAS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FFINBASColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FFINBASColumn) = value
            End Set
        End Property
        
        Public Property I_FPROBAS As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FPROBASColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FPROBASColumn) = value
            End Set
        End Property
        
        Public Property I_CCAT As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CCATColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CCATColumn) = value
            End Set
        End Property
        
        Public Property I_CESTSOC As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CESTSOCColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CESTSOCColumn) = value
            End Set
        End Property
        
        Public Property I_CCOT As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CCOTColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CCOTColumn) = value
            End Set
        End Property
        
        Public Property I_FULTNOV As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FULTNOVColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FULTNOVColumn) = value
            End Set
        End Property
        
        Public Property I_FPRISUB As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FPRISUBColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FPRISUBColumn) = value
            End Set
        End Property
        
        Public Property I_FULTSUB As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_FULTSUBColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_FULTSUBColumn) = value
            End Set
        End Property
        
        Public Property I_CNIV As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CNIVColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CNIVColumn) = value
            End Set
        End Property
        
        Public Property I_NCUR As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_NCURColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_NCURColumn) = value
            End Set
        End Property
        
        Public Property I_NHOREST As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_NHORESTColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_NHORESTColumn) = value
            End Set
        End Property
        
        Public Property I_CJOR As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CJORColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CJORColumn) = value
            End Set
        End Property
        
        Public Property I_XCAL As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XCALColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XCALColumn) = value
            End Set
        End Property
        
        Public Property I_CINDFDI As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_CINDFDIColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_CINDFDIColumn) = value
            End Set
        End Property
        
        Public Property I_XCAURET As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_XCAURETColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_XCAURETColumn) = value
            End Set
        End Property
        
        Public Property I_TRANSAR As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.I_TRANSARColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.I_TRANSARColumn) = value
            End Set
        End Property
        
        Public Property MESSAGE As String
            Get
                Try 
                    Return CType(Me(Me.tableAFE23.MESSAGEColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAFE23.MESSAGEColumn) = value
            End Set
        End Property
        
        Public Function IsI_MAINTNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_MAINTColumn)
        End Function
        
        Public Sub SetI_MAINTNull()
            Me(Me.tableAFE23.I_MAINTColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CCAMNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CCAMColumn)
        End Function
        
        Public Sub SetI_CCAMNull()
            Me(Me.tableAFE23.I_CCAMColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FCOMNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FCOMColumn)
        End Function
        
        Public Sub SetI_FCOMNull()
            Me(Me.tableAFE23.I_FCOMColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CCAUNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CCAUColumn)
        End Function
        
        Public Sub SetI_CCAUNull()
            Me(Me.tableAFE23.I_CCAUColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XISPNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XISPColumn)
        End Function
        
        Public Sub SetI_XISPNull()
            Me(Me.tableAFE23.I_XISPColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_NIDETRANull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_NIDETRAColumn)
        End Function
        
        Public Sub SetI_NIDETRANull()
            Me(Me.tableAFE23.I_NIDETRAColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_TIDETRANull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_TIDETRAColumn)
        End Function
        
        Public Sub SetI_TIDETRANull()
            Me(Me.tableAFE23.I_TIDETRAColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_NIDEBENNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_NIDEBENColumn)
        End Function
        
        Public Sub SetI_NIDEBENNull()
            Me(Me.tableAFE23.I_NIDEBENColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_TIDEBENNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_TIDEBENColumn)
        End Function
        
        Public Sub SetI_TIDEBENNull()
            Me(Me.tableAFE23.I_TIDEBENColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XPRIAPEBNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XPRIAPEBColumn)
        End Function
        
        Public Sub SetI_XPRIAPEBNull()
            Me(Me.tableAFE23.I_XPRIAPEBColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XSEGAPEBNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XSEGAPEBColumn)
        End Function
        
        Public Sub SetI_XSEGAPEBNull()
            Me(Me.tableAFE23.I_XSEGAPEBColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XNOMBENENull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XNOMBENEColumn)
        End Function
        
        Public Sub SetI_XNOMBENENull()
            Me(Me.tableAFE23.I_XNOMBENEColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_TDOCBENNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_TDOCBENColumn)
        End Function
        
        Public Sub SetI_TDOCBENNull()
            Me(Me.tableAFE23.I_TDOCBENColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CTIPNUINull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CTIPNUIColumn)
        End Function
        
        Public Sub SetI_CTIPNUINull()
            Me(Me.tableAFE23.I_CTIPNUIColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_NDOCBENNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_NDOCBENColumn)
        End Function
        
        Public Sub SetI_NDOCBENNull()
            Me(Me.tableAFE23.I_NDOCBENColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XSEXNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XSEXColumn)
        End Function
        
        Public Sub SetI_XSEXNull()
            Me(Me.tableAFE23.I_XSEXColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CPRNNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CPRNColumn)
        End Function
        
        Public Sub SetI_CPRNNull()
            Me(Me.tableAFE23.I_CPRNColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CTIPPARNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CTIPPARColumn)
        End Function
        
        Public Sub SetI_CTIPPARNull()
            Me(Me.tableAFE23.I_CTIPPARColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CNIVSANNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CNIVSANColumn)
        End Function
        
        Public Sub SetI_CNIVSANNull()
            Me(Me.tableAFE23.I_CNIVSANColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FNACBENNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FNACBENColumn)
        End Function
        
        Public Sub SetI_FNACBENNull()
            Me(Me.tableAFE23.I_FNACBENColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_EDATNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_EDATColumn)
        End Function
        
        Public Sub SetI_EDATNull()
            Me(Me.tableAFE23.I_EDATColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_NDIRCORNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_NDIRCORColumn)
        End Function
        
        Public Sub SetI_NDIRCORNull()
            Me(Me.tableAFE23.I_NDIRCORColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CINDDISNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CINDDISColumn)
        End Function
        
        Public Sub SetI_CINDDISNull()
            Me(Me.tableAFE23.I_CINDDISColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XTIPDISNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XTIPDISColumn)
        End Function
        
        Public Sub SetI_XTIPDISNull()
            Me(Me.tableAFE23.I_XTIPDISColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CDISPERNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CDISPERColumn)
        End Function
        
        Public Sub SetI_CDISPERNull()
            Me(Me.tableAFE23.I_CDISPERColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CPAGUPCNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CPAGUPCColumn)
        End Function
        
        Public Sub SetI_CPAGUPCNull()
            Me(Me.tableAFE23.I_CPAGUPCColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CESTSUBNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CESTSUBColumn)
        End Function
        
        Public Sub SetI_CESTSUBNull()
            Me(Me.tableAFE23.I_CESTSUBColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_NCARNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_NCARColumn)
        End Function
        
        Public Sub SetI_NCARNull()
            Me(Me.tableAFE23.I_NCARColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CNUCNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CNUCColumn)
        End Function
        
        Public Sub SetI_CNUCNull()
            Me(Me.tableAFE23.I_CNUCColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CCIUNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CCIUColumn)
        End Function
        
        Public Sub SetI_CCIUNull()
            Me(Me.tableAFE23.I_CCIUColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_NANTSISNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_NANTSISColumn)
        End Function
        
        Public Sub SetI_NANTSISNull()
            Me(Me.tableAFE23.I_NANTSISColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CEPSANTNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CEPSANTColumn)
        End Function
        
        Public Sub SetI_CEPSANTNull()
            Me(Me.tableAFE23.I_CEPSANTColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CEPSCONNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CEPSCONColumn)
        End Function
        
        Public Sub SetI_CEPSCONNull()
            Me(Me.tableAFE23.I_CEPSCONColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CEPSACTNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CEPSACTColumn)
        End Function
        
        Public Sub SetI_CEPSACTNull()
            Me(Me.tableAFE23.I_CEPSACTColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FAFISSSNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FAFISSSColumn)
        End Function
        
        Public Sub SetI_FAFISSSNull()
            Me(Me.tableAFE23.I_FAFISSSColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CAFIBENNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CAFIBENColumn)
        End Function
        
        Public Sub SetI_CAFIBENNull()
            Me(Me.tableAFE23.I_CAFIBENColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CCAMCNFNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CCAMCNFColumn)
        End Function
        
        Public Sub SetI_CCAMCNFNull()
            Me(Me.tableAFE23.I_CCAMCNFColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsAT_SIGNNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.AT_SIGNColumn)
        End Function
        
        Public Sub SetAT_SIGNNull()
            Me(Me.tableAFE23.AT_SIGNColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XNOMAPLNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XNOMAPLColumn)
        End Function
        
        Public Sub SetI_XNOMAPLNull()
            Me(Me.tableAFE23.I_XNOMAPLColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XNOMPANNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XNOMPANColumn)
        End Function
        
        Public Sub SetI_XNOMPANNull()
            Me(Me.tableAFE23.I_XNOMPANColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XPRIAPENull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XPRIAPEColumn)
        End Function
        
        Public Sub SetI_XPRIAPENull()
            Me(Me.tableAFE23.I_XPRIAPEColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XSEGAPENull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XSEGAPEColumn)
        End Function
        
        Public Sub SetI_XSEGAPENull()
            Me(Me.tableAFE23.I_XSEGAPEColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XNOMBRENull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XNOMBREColumn)
        End Function
        
        Public Sub SetI_XNOMBRENull()
            Me(Me.tableAFE23.I_XNOMBREColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_TIDEEMPNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_TIDEEMPColumn)
        End Function
        
        Public Sub SetI_TIDEEMPNull()
            Me(Me.tableAFE23.I_TIDEEMPColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_NIDEEMPNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_NIDEEMPColumn)
        End Function
        
        Public Sub SetI_NIDEEMPNull()
            Me(Me.tableAFE23.I_NIDEEMPColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CDEPNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CDEPColumn)
        End Function
        
        Public Sub SetI_CDEPNull()
            Me(Me.tableAFE23.I_CDEPColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XEMPNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XEMPColumn)
        End Function
        
        Public Sub SetI_XEMPNull()
            Me(Me.tableAFE23.I_XEMPColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CCATTRANull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CCATTRAColumn)
        End Function
        
        Public Sub SetI_CCATTRANull()
            Me(Me.tableAFE23.I_CCATTRAColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CESTTRANull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CESTTRAColumn)
        End Function
        
        Public Sub SetI_CESTTRANull()
            Me(Me.tableAFE23.I_CESTTRAColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XCAJTRANull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XCAJTRAColumn)
        End Function
        
        Public Sub SetI_XCAJTRANull()
            Me(Me.tableAFE23.I_XCAJTRAColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FCAJTRANull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FCAJTRAColumn)
        End Function
        
        Public Sub SetI_FCAJTRANull()
            Me(Me.tableAFE23.I_FCAJTRAColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_QCYGCAJNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_QCYGCAJColumn)
        End Function
        
        Public Sub SetI_QCYGCAJNull()
            Me(Me.tableAFE23.I_QCYGCAJColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_QHIJCAJNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_QHIJCAJColumn)
        End Function
        
        Public Sub SetI_QHIJCAJNull()
            Me(Me.tableAFE23.I_QHIJCAJColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_QPADCAJNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_QPADCAJColumn)
        End Function
        
        Public Sub SetI_QPADCAJNull()
            Me(Me.tableAFE23.I_QPADCAJColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_QOTRCAJNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_QOTRCAJColumn)
        End Function
        
        Public Sub SetI_QOTRCAJNull()
            Me(Me.tableAFE23.I_QOTRCAJColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XPOSTRANull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XPOSTRAColumn)
        End Function
        
        Public Sub SetI_XPOSTRANull()
            Me(Me.tableAFE23.I_XPOSTRAColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FPOSTRANull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FPOSTRAColumn)
        End Function
        
        Public Sub SetI_FPOSTRANull()
            Me(Me.tableAFE23.I_FPOSTRAColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_QCYGPOSNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_QCYGPOSColumn)
        End Function
        
        Public Sub SetI_QCYGPOSNull()
            Me(Me.tableAFE23.I_QCYGPOSColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_QHIJPOSNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_QHIJPOSColumn)
        End Function
        
        Public Sub SetI_QHIJPOSNull()
            Me(Me.tableAFE23.I_QHIJPOSColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_QPADPOSNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_QPADPOSColumn)
        End Function
        
        Public Sub SetI_QPADPOSNull()
            Me(Me.tableAFE23.I_QPADPOSColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_QOTRPOSNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_QOTRPOSColumn)
        End Function
        
        Public Sub SetI_QOTRPOSNull()
            Me(Me.tableAFE23.I_QOTRPOSColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FCAJRETNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FCAJRETColumn)
        End Function
        
        Public Sub SetI_FCAJRETNull()
            Me(Me.tableAFE23.I_FCAJRETColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FPOSRETNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FPOSRETColumn)
        End Function
        
        Public Sub SetI_FPOSRETNull()
            Me(Me.tableAFE23.I_FPOSRETColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XREQ001Null() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XREQ001Column)
        End Function
        
        Public Sub SetI_XREQ001Null()
            Me(Me.tableAFE23.I_XREQ001Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XREQ002Null() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XREQ002Column)
        End Function
        
        Public Sub SetI_XREQ002Null()
            Me(Me.tableAFE23.I_XREQ002Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XREQ003Null() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XREQ003Column)
        End Function
        
        Public Sub SetI_XREQ003Null()
            Me(Me.tableAFE23.I_XREQ003Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CCAUNEGNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CCAUNEGColumn)
        End Function
        
        Public Sub SetI_CCAUNEGNull()
            Me(Me.tableAFE23.I_CCAUNEGColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XESTCAJNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XESTCAJColumn)
        End Function
        
        Public Sub SetI_XESTCAJNull()
            Me(Me.tableAFE23.I_XESTCAJColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FINGCAJNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FINGCAJColumn)
        End Function
        
        Public Sub SetI_FINGCAJNull()
            Me(Me.tableAFE23.I_FINGCAJColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FRETCAJNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FRETCAJColumn)
        End Function
        
        Public Sub SetI_FRETCAJNull()
            Me(Me.tableAFE23.I_FRETCAJColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XCARCANull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XCARCAColumn)
        End Function
        
        Public Sub SetI_XCARCANull()
            Me(Me.tableAFE23.I_XCARCAColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FCARCAJNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FCARCAJColumn)
        End Function
        
        Public Sub SetI_FCARCAJNull()
            Me(Me.tableAFE23.I_FCARCAJColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XREQB01Null() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XREQB01Column)
        End Function
        
        Public Sub SetI_XREQB01Null()
            Me(Me.tableAFE23.I_XREQB01Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FINI001Null() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FINI001Column)
        End Function
        
        Public Sub SetI_FINI001Null()
            Me(Me.tableAFE23.I_FINI001Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FFIN001Null() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FFIN001Column)
        End Function
        
        Public Sub SetI_FFIN001Null()
            Me(Me.tableAFE23.I_FFIN001Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FPRO001Null() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FPRO001Column)
        End Function
        
        Public Sub SetI_FPRO001Null()
            Me(Me.tableAFE23.I_FPRO001Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XESTPOSNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XESTPOSColumn)
        End Function
        
        Public Sub SetI_XESTPOSNull()
            Me(Me.tableAFE23.I_XESTPOSColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FINGPOSNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FINGPOSColumn)
        End Function
        
        Public Sub SetI_FINGPOSNull()
            Me(Me.tableAFE23.I_FINGPOSColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FRETPOSNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FRETPOSColumn)
        End Function
        
        Public Sub SetI_FRETPOSNull()
            Me(Me.tableAFE23.I_FRETPOSColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XCARPOSNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XCARPOSColumn)
        End Function
        
        Public Sub SetI_XCARPOSNull()
            Me(Me.tableAFE23.I_XCARPOSColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FCARPOSNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FCARPOSColumn)
        End Function
        
        Public Sub SetI_FCARPOSNull()
            Me(Me.tableAFE23.I_FCARPOSColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XREQB02Null() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XREQB02Column)
        End Function
        
        Public Sub SetI_XREQB02Null()
            Me(Me.tableAFE23.I_XREQB02Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FINI002Null() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FINI002Column)
        End Function
        
        Public Sub SetI_FINI002Null()
            Me(Me.tableAFE23.I_FINI002Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FFIN002Null() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FFIN002Column)
        End Function
        
        Public Sub SetI_FFIN002Null()
            Me(Me.tableAFE23.I_FFIN002Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FPRO002Null() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FPRO002Column)
        End Function
        
        Public Sub SetI_FPRO002Null()
            Me(Me.tableAFE23.I_FPRO002Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XESTPCONull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XESTPCOColumn)
        End Function
        
        Public Sub SetI_XESTPCONull()
            Me(Me.tableAFE23.I_XESTPCOColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FINGPCONull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FINGPCOColumn)
        End Function
        
        Public Sub SetI_FINGPCONull()
            Me(Me.tableAFE23.I_FINGPCOColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FRETPCONull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FRETPCOColumn)
        End Function
        
        Public Sub SetI_FRETPCONull()
            Me(Me.tableAFE23.I_FRETPCOColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XCARPCNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XCARPCColumn)
        End Function
        
        Public Sub SetI_XCARPCNull()
            Me(Me.tableAFE23.I_XCARPCColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FCARPCONull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FCARPCOColumn)
        End Function
        
        Public Sub SetI_FCARPCONull()
            Me(Me.tableAFE23.I_FCARPCOColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XREQBASNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XREQBASColumn)
        End Function
        
        Public Sub SetI_XREQBASNull()
            Me(Me.tableAFE23.I_XREQBASColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FINIBASNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FINIBASColumn)
        End Function
        
        Public Sub SetI_FINIBASNull()
            Me(Me.tableAFE23.I_FINIBASColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FFINBASNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FFINBASColumn)
        End Function
        
        Public Sub SetI_FFINBASNull()
            Me(Me.tableAFE23.I_FFINBASColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FPROBASNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FPROBASColumn)
        End Function
        
        Public Sub SetI_FPROBASNull()
            Me(Me.tableAFE23.I_FPROBASColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CCATNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CCATColumn)
        End Function
        
        Public Sub SetI_CCATNull()
            Me(Me.tableAFE23.I_CCATColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CESTSOCNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CESTSOCColumn)
        End Function
        
        Public Sub SetI_CESTSOCNull()
            Me(Me.tableAFE23.I_CESTSOCColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CCOTNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CCOTColumn)
        End Function
        
        Public Sub SetI_CCOTNull()
            Me(Me.tableAFE23.I_CCOTColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FULTNOVNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FULTNOVColumn)
        End Function
        
        Public Sub SetI_FULTNOVNull()
            Me(Me.tableAFE23.I_FULTNOVColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FPRISUBNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FPRISUBColumn)
        End Function
        
        Public Sub SetI_FPRISUBNull()
            Me(Me.tableAFE23.I_FPRISUBColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_FULTSUBNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_FULTSUBColumn)
        End Function
        
        Public Sub SetI_FULTSUBNull()
            Me(Me.tableAFE23.I_FULTSUBColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CNIVNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CNIVColumn)
        End Function
        
        Public Sub SetI_CNIVNull()
            Me(Me.tableAFE23.I_CNIVColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_NCURNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_NCURColumn)
        End Function
        
        Public Sub SetI_NCURNull()
            Me(Me.tableAFE23.I_NCURColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_NHORESTNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_NHORESTColumn)
        End Function
        
        Public Sub SetI_NHORESTNull()
            Me(Me.tableAFE23.I_NHORESTColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CJORNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CJORColumn)
        End Function
        
        Public Sub SetI_CJORNull()
            Me(Me.tableAFE23.I_CJORColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XCALNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XCALColumn)
        End Function
        
        Public Sub SetI_XCALNull()
            Me(Me.tableAFE23.I_XCALColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_CINDFDINull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_CINDFDIColumn)
        End Function
        
        Public Sub SetI_CINDFDINull()
            Me(Me.tableAFE23.I_CINDFDIColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_XCAURETNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_XCAURETColumn)
        End Function
        
        Public Sub SetI_XCAURETNull()
            Me(Me.tableAFE23.I_XCAURETColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsI_TRANSARNull() As Boolean
            Return Me.IsNull(Me.tableAFE23.I_TRANSARColumn)
        End Function
        
        Public Sub SetI_TRANSARNull()
            Me(Me.tableAFE23.I_TRANSARColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsMESSAGENull() As Boolean
            Return Me.IsNull(Me.tableAFE23.MESSAGEColumn)
        End Function
        
        Public Sub SetMESSAGENull()
            Me(Me.tableAFE23.MESSAGEColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class AFE23RowChangeEvent
        Inherits EventArgs
        
        Private eventRow As AFE23Row
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As AFE23Row, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As AFE23Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class _ErrorDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnMensaje As DataColumn
        
        Friend Sub New()
            MyBase.New("Error")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property MensajeColumn As DataColumn
            Get
                Return Me.columnMensaje
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As _ErrorRow
            Get
                Return CType(Me.Rows(index),_ErrorRow)
            End Get
        End Property
        
        Public Event _ErrorRowChanged As _ErrorRowChangeEventHandler
        
        Public Event _ErrorRowChanging As _ErrorRowChangeEventHandler
        
        Public Event _ErrorRowDeleted As _ErrorRowChangeEventHandler
        
        Public Event _ErrorRowDeleting As _ErrorRowChangeEventHandler
        
        Public Overloads Sub Add_ErrorRow(ByVal row As _ErrorRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Add_ErrorRow(ByVal Mensaje As String) As _ErrorRow
            Dim row_ErrorRow As _ErrorRow = CType(Me.NewRow,_ErrorRow)
            row_ErrorRow.ItemArray = New Object() {Mensaje}
            Me.Rows.Add(row_ErrorRow)
            Return row_ErrorRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As _ErrorDataTable = CType(MyBase.Clone,_ErrorDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New _ErrorDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnMensaje = Me.Columns("Mensaje")
        End Sub
        
        Private Sub InitClass()
            Me.columnMensaje = New DataColumn("Mensaje", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMensaje)
        End Sub
        
        Public Function New_ErrorRow() As _ErrorRow
            Return CType(Me.NewRow,_ErrorRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New _ErrorRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(_ErrorRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me._ErrorRowChangedEvent) Is Nothing) Then
                RaiseEvent _ErrorRowChanged(Me, New _ErrorRowChangeEvent(CType(e.Row,_ErrorRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me._ErrorRowChangingEvent) Is Nothing) Then
                RaiseEvent _ErrorRowChanging(Me, New _ErrorRowChangeEvent(CType(e.Row,_ErrorRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me._ErrorRowDeletedEvent) Is Nothing) Then
                RaiseEvent _ErrorRowDeleted(Me, New _ErrorRowChangeEvent(CType(e.Row,_ErrorRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me._ErrorRowDeletingEvent) Is Nothing) Then
                RaiseEvent _ErrorRowDeleting(Me, New _ErrorRowChangeEvent(CType(e.Row,_ErrorRow), e.Action))
            End If
        End Sub
        
        Public Sub Remove_ErrorRow(ByVal row As _ErrorRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class _ErrorRow
        Inherits DataRow
        
        Private table_Error As _ErrorDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.table_Error = CType(Me.Table,_ErrorDataTable)
        End Sub
        
        Public Property Mensaje As String
            Get
                Try 
                    Return CType(Me(Me.table_Error.MensajeColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.table_Error.MensajeColumn) = value
            End Set
        End Property
        
        Public Function IsMensajeNull() As Boolean
            Return Me.IsNull(Me.table_Error.MensajeColumn)
        End Function
        
        Public Sub SetMensajeNull()
            Me(Me.table_Error.MensajeColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class _ErrorRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As _ErrorRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As _ErrorRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As _ErrorRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
