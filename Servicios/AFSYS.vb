'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization
Imports System.Configuration


'
'This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.573.
'
Namespace Servicios

    '<remarks/>



    ''' -----------------------------------------------------------------------------
    ''' Project	 : Servicios
    ''' Class	 : AF.AFSYS
    ''' 
    ''' -----------------------------------------------------------------------------
    ''' <summary>
    ''' Esta clase actúa como proxy al Web Service AFSYS.
    ''' </summary>
    ''' <remarks>
    ''' Es modificable en tiempo de ejecución mediante la configuración, en el Web.Config,
    ''' de Transar, de la dirección http en la cual se encuentra el Web Service AFSYS
    ''' </remarks>
    ''' <history>
    ''' 	[CENCXLOPEZC]	1/17/2005	Created
    ''' </history>
    ''' -----------------------------------------------------------------------------
    <System.Diagnostics.DebuggerStepThroughAttribute(), _
   System.ComponentModel.DesignerCategoryAttribute("code"), _
   System.Web.Services.WebServiceBindingAttribute(Name:="AFSYSSoap", [Namespace]:="http://WCompensar/")> Public Class AFSYS
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol

        '<remarks/>
        Public Sub New()
            MyBase.New()
            If Not ConfigurationManager.AppSettings("URLWSAFSYS") Is Nothing Then
                Me.Url = ConfigurationManager.AppSettings("URLWSAFSYS")
            Else
                Dim objXMLDoc As New System.Xml.XmlDocument
                'Obtener assembly de la librería
                Dim objAssembly As System.Reflection.Assembly = System.Reflection.Assembly.GetExecutingAssembly()
                'Obtener path completo (incluyendo nombre del archivo) y el nombre del archivo
                Dim strPathCompleto As String = objAssembly.CodeBase
                Dim strNomArchivo As String = objAssembly.GetName().Name & ".dll"
                'Obtener solo el path
                Dim strPathArchivoConfiguracion As String = strPathCompleto.Substring(0, strPathCompleto.Length - strNomArchivo.Length)
                objXMLDoc.Load(strPathArchivoConfiguracion & "Configuracion.xml")
                Me.Url = objXMLDoc.GetElementsByTagName("URLWSAFSYS").Item(0).InnerText
            End If

        End Sub

        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/GetFields", RequestNamespace:="http://WCompensar/", ResponseNamespace:="http://WCompensar/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function GetFields(ByVal sApl As String, ByVal sIspec As String, ByVal iOpcion As Integer) As String
            Dim results() As Object = Me.Invoke("GetFields", New Object() {sApl, sIspec, iOpcion})
            Return CType(results(0), String)
        End Function

        '<remarks/>
        Public Function BeginGetFields(ByVal sApl As String, ByVal sIspec As String, ByVal iOpcion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetFields", New Object() {sApl, sIspec, iOpcion}, callback, asyncState)
        End Function

        '<remarks/>
        Public Function EndGetFields(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), String)
        End Function

        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCompensar/Ispec", RequestNamespace:="http://WCompensar/", ResponseNamespace:="http://WCompensar/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function Ispec(ByVal sApl As String, ByVal sIspec As String, ByVal sDatos As String, ByVal iPrograma As Integer) As String
            Dim results() As Object = Me.Invoke("Ispec", New Object() {sApl, sIspec, sDatos, iPrograma})
            Return CType(results(0), String)
        End Function

        '<remarks/>
        Public Function BeginIspec(ByVal sApl As String, ByVal sIspec As String, ByVal sDatos As String, ByVal iPrograma As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Ispec", New Object() {sApl, sIspec, sDatos, iPrograma}, callback, asyncState)
        End Function

        '<remarks/>
        Public Function EndIspec(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), String)
        End Function

    End Class
End Namespace
